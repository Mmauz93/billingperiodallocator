/* Base styles, resets, typography, html/body rules */

@layer base {
  * {
    /* @apply border-border; */ /* REMOVED - too broad, caused unintended borders */
    /* max-width: 100%; */ /* REMOVED - too broad, better to apply to specific elements like img if needed */
  }

  /* Default link styling */
  a {
    @apply text-foreground underline cursor-pointer;
    text-decoration-color: hsl(var(--muted-foreground));
    text-decoration-thickness: 1px;
    text-underline-offset: 2px;
    transition: text-decoration-color 0.2s ease;
  }
  
  /* Ensure all interactive elements AND their contents have the correct cursor */
  a, button, [role="button"], 
  a *, button *, [role="button"] * {
    cursor: pointer;
  }

  body {
    @apply bg-background text-foreground antialiased;
    @apply selection:bg-secondary/10 selection:text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
    /* Do not set position here; Radix handles it. */
  }

  h1 {
    font-size: clamp(2.25rem, 1.5rem + 2vw, 2.5rem); /* Fluid typography */
    font-weight: 700;
    line-height: 1.2;
    margin-bottom: 1.5rem; /* Standardize bottom margin for headers */
  }

  h2 {
    font-size: clamp(1.75rem, 1.25rem + 1.5vw, 2rem); /* Fluid typography */
    font-weight: 600;
    line-height: 1.25;
    margin-bottom: 1.25rem; /* Standardize bottom margin for headers */
  }

  h3 {
    font-size: clamp(1.25rem, 1rem + 0.75vw, 1.5rem); /* Fluid typography */
    font-weight: 500;
    line-height: 1.3;
    margin-bottom: 1rem; /* Standardize bottom margin for headers */
  }

  /* Add h4, h5, h6 for completeness */
  h4 {
    font-size: 1.25rem;
    font-weight: 500;
    line-height: 1.4;
    margin-bottom: 0.75rem;
  }

  h5 {
    font-size: 1.125rem;
    font-weight: 500;
    line-height: 1.4;
    margin-bottom: 0.5rem;
  }

  h6 {
    font-size: 1rem;
    font-weight: 500;
    line-height: 1.5;
    margin-bottom: 0.5rem;
  }

  /* Paragraph spacing */
  p {
    margin-bottom: 1rem;
    line-height: 1.6;
  }

  /* Consistent paragraph spacing in containers */
  p + p {
    margin-top: 0.75rem;
  }

  /* Touch target size for interactive elements */
  button, 
  [role="button"],
  [role="tab"],
  [role="menuitem"],
  .header-toggle-button,
  .select-item,
  a[href] {
    min-height: 2.75rem; /* Converted from 44px to rem (WCAG AA touch target size) */
    min-width: 2.75rem; /* Converted from 44px to rem (WCAG AA touch target size) */
  }

  /* Small button exceptions that must remain within line height */
  button.icon-button-sm {
    /* Allow smaller touch targets only for very small icons */
    min-height: 2rem; /* Converted from 32px to rem */
    min-width: 2rem; /* Converted from 32px to rem */
  }

  /* Hide arrows from number inputs */
  /* Chrome, Safari, Edge, Opera */
  input[type="number"]::-webkit-outer-spin-button,
  input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  input[type="number"] {
    -moz-appearance: textfield;
  }

  /* Make sure header has the highest z-index */
  header.fixed {
    z-index: var(--z-sticky); /* Use the sticky z-index for header */
  }
  
  /* Z-index stacking context for forms */
  form, 
  .form-control,
  .form-item, 
  .form-field,
  .input-container,
  .relative,
  [role="combobox"] {
    position: relative;
    z-index: var(--z-base); /* Base z-index for form elements */
    isolation: isolate;
  }
  
  /* Z-index for form icons and validation markers */
  .CheckCircle,
  .AlertCircle,
  .CalendarIcon,
  .h-4.w-4,
  svg.w-4,
  svg.h-4,
  button svg,
  input + div,
  input ~ div,
  .absolute.inset-y-0,
  .absolute.right-2,
  .absolute.right-10 {
    z-index: var(--z-base);
  }
  
  /* Radix popovers - z-index managed in components.css, remove position override */
  [data-radix-popper-content-wrapper] {
    /* z-index is handled in components.css using the z-index scale */
    /* Do not set position here; Radix handles it. */
  }
}

@layer components {
  a:focus-visible {
    @apply outline-none ring-2 ring-offset-2;
    
    /* Explicitly set Tailwind's internal CSS variables for ring color and offset color.
       These will use the CSS variables defined in themes.css, which are theme-aware. */
    --tw-ring-color: hsl(var(--ring));
    --tw-ring-offset-color: hsl(var(--background)); /* Default offset for most links */

    /* For dark mode, ensure these variables re-evaluate based on .dark themed CSS vars. */
    .dark & { /* Targets '.dark a:focus-visible' */
      --tw-ring-color: hsl(var(--ring)); /* Will use .dark --ring */
      --tw-ring-offset-color: hsl(var(--background)); /* Will use .dark --background */
    }
  }

  /* The following explicit focus style ensures all interactive elements with focus use the same system */
  button:focus-visible,
  [role="button"]:focus-visible {
    @apply outline-none ring-2 ring-offset-2 ring-ring ring-offset-background;
  }

  /* Ensure all icons within links and buttons maintain pointer cursor behavior */
  a svg, a img, a span,
  button svg, button img, button span,
  [role="button"] svg, [role="button"] img, [role="button"] span {
    cursor: inherit;
  }
  
  /* Ensure button icons in various nesting levels inherit pointer cursor */
  button > * > svg,
  button > * > img,
  button > * > span,
  a > * > svg,
  a > * > img,
  a > * > span {
    cursor: inherit;
  }
  
  /* Extra specific selectors for the arrow icon in feature cards */
  a span:has(> svg),
  button span:has(> svg),
  a div:has(> svg),
  button div:has(> svg),
  a > div > span > svg,
  button > div > span > svg {
    cursor: pointer !important;
  }
  
  /* Handle the specific case of the â†’ arrow icon in different contexts */
  svg[data-arrow="true"],
  svg.arrow-icon,
  button svg,
  a svg,
  .group:hover svg,
  button .group:hover svg,
  a .group:hover svg,
  .group:hover > div > svg,
  .group:hover > span > svg {
    cursor: pointer !important;
  }
}

@layer utilities {
  /* Global link hover style - ONLY the underline becomes blue */
  a:hover {
    @apply text-foreground;
    text-decoration-color: #0284C7;
    text-decoration-thickness: 2px;
  }
  
  /* Make sure text color remains unchanged on hover */
  a:hover * {
    color: inherit;
  }
}

/* Ensure text elements don't display text editor cursor */
input[type="text"], input[type="number"], input[type="email"], input[type="password"], textarea, [contenteditable="true"] {
  cursor: text;
}

/* Interactive elements should maintain their appropriate cursor */
a[href],
button,
[role="button"],
input[type="submit"],
input[type="button"],
.cursor-pointer {
  cursor: pointer;
}

/* Ensure common icon/content elements within interactive elements also show pointer cursor */
button > svg,
button > img,
button > span,
button > i,
a[href] > svg,
a[href] > img,
a[href] > span,
a[href] > i,
[role="button"] > svg,
[role="button"] > img,
[role="button"] > span,
[role="button"] > i {
  cursor: inherit; /* Inherit cursor from parent button/link */
}

/* Fallback for any direct children of a button, if not an input */
/* This is a bit broad, but helps catch edge cases. Inputs will override this. */
button > * {
    cursor: inherit;
}

/* Media query for improving small screen spacing */
@media (max-width: 640px) {
  /* Maintain touch-friendly spacing on mobile */
  main {
    @apply px-4 py-6;
  }
}

/* Prevent layout shifts due to scrollbar appearing/disappearing */
html {
  scrollbar-gutter: stable;
  overflow-x: hidden; /* Prevent horizontal scrolling */
  overflow-anchor: none; /* Prevent scroll jumps during content updates */
  width: 100%; /* Fix width to prevent layout shifts */
  font-size: 16px; /* Base font size - important for rem calculations */
}

/* Accessibility dropdown/popover improvements */
[role="menu"],
[role="listbox"] {
  outline: none; /* Remove default outline */
}

[role="menu"] [role="menuitem"],
[role="listbox"] [role="option"] {
  outline: none; /* Individual items will get focus styles */
}

/* Improve keyboard navigation for dropdowns */
[role="menuitem"]:focus,
[role="option"]:focus {
  background-color: hsl(var(--accent));
  color: hsl(var(--accent-foreground));
  outline: none;
}

/* Style for when the scrollbar needs to be preserved during modals */
html.prevent-scrollbar-shift {
  overflow-y: scroll;
  padding-right: 0; /* Prevent automatic padding */
  margin-right: calc(var(--scrollbar-width) * -1); /* Negative margin to compensate */
}

/* For browsers that don't support scrollbar-gutter */
@supports not (scrollbar-gutter: stable) {
  html {
    overflow-y: scroll;
    overflow-x: hidden; /* Prevent horizontal scrolling */
  }
  
  /* When modal is open, prevent layout shifts */
  html.prevent-scrollbar-shift body {
    position: relative;
  }
}

/* Normalize Scrollbar Appearance */
::-webkit-scrollbar {
  width: 0.625rem; /* Converted from 10px to rem */
}

::-webkit-scrollbar-thumb {
  background-color: hsla(var(--black), 0.2);
  border-radius: 0.375rem; /* Converted from 6px to rem */
}

.dark ::-webkit-scrollbar-thumb {
  background-color: hsla(var(--white), 0.2);
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

/* Reset overflow on body and html to ensure no double scrollbars */
body, html {
  max-width: 100vw;
}

/* Ensure fixed/absolute positioned elements follow proper stacking */
.fixed,
.absolute {
  z-index: var(--z-fixed); /* Use fixed z-index from scale */
}

/* Ensure all dropdown menus and popovers have proper z-index */
/* This rule can be simplified or rely on components.css for Radix elements */
[data-state="open"].Dialog,
[data-radix-select-content],
[data-radix-dropdown-menu-content] {
  /* z-index for these elements are managed in components.css using the z-index scale */
}

/* Prevent content flickering during load */
html.loading * {
  transition: none;
}

/* Add transitions for smooth theme switching */
html {
  transition: background-color 0.5s, color 0.5s;
}

body * {
  transition-property: border-color, color, fill, stroke, opacity, box-shadow, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.15s;
}

/* Vertical rhythm and spacing */
section {
  margin-bottom: 2rem;
}

main > section {
  margin-bottom: 3rem;
}

/* For consistent list styling */
ul, ol {
  padding-left: 1.5rem;
  margin-bottom: 1rem;
}

li {
  margin-bottom: 0.5rem;
}

/* Consistent blockquote styling */
blockquote {
  border-left: 0.25rem solid hsl(var(--muted));
  padding-left: 1rem;
  margin-left: 0;
  margin-right: 0;
  margin-bottom: 1rem;
  font-style: italic;
}

/* Consistent code block styling */
pre, code {
  font-family: var(--font-mono);
  font-size: 0.9rem;
}

pre {
  padding: 1rem;
  margin-bottom: 1rem;
  border-radius: 0.5rem;
  background-color: hsl(var(--muted));
  overflow-x: auto;
}

code {
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
  background-color: hsl(var(--muted));
}

/* Prevent layout shifts during theme changes */
html.transitioning {
  overflow-y: scroll; /* Force scrollbar to remain visible */
}

/* Reduced Motion Helper */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-duration: 1ms;
    scroll-behavior: auto;
    transition-delay: 0ms;
  }
} 

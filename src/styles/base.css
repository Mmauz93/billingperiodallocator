/* Base styles, resets, typography, html/body rules */

@layer base {
  * {
    /* Specificity or broadness issues were addressed by removing prior rules here */
  }

  /* Default link styling */
  a {
    @apply text-foreground underline cursor-pointer decoration-muted-foreground decoration-1 underline-offset-2 transition-colors duration-200 ease-in-out;
  }
  
  body {
    @apply bg-background text-foreground antialiased;
    @apply selection:bg-secondary/10 selection:text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
    /* Do not set position here; Radix handles it. */
  }

  h1 {
    font-size: clamp(2.25rem, 1.5rem + 2vw, 2.5rem); /* Fluid typography */
    font-weight: 700; /* font-bold */
    line-height: 1.2;
  }

  h2 {
    font-size: clamp(1.75rem, 1.25rem + 1.5vw, 2rem); /* Fluid typography */
    font-weight: 600; /* font-semibold */
    line-height: 1.25;
  }

  h3 {
    font-size: clamp(1.25rem, 1rem + 0.75vw, 1.5rem); /* Fluid typography */
    font-weight: 500; /* font-medium */
    line-height: 1.3;
  }

  /* Add h4, h5, h6 for completeness */
  h4 {
    font-size: 1.25rem; /* text-xl */
    font-weight: 500; /* font-medium */
    line-height: 1.4;
  }

  h5 {
    font-size: 1.125rem; /* text-lg */
    font-weight: 500; /* font-medium */
    line-height: 1.4;
  }

  h6 {
    font-size: 1rem; /* text-base */
    font-weight: 500; /* font-medium */
    line-height: 1.5;
  }

  /* Paragraph spacing */
  p {
    line-height: 1.6;
  }

  /* Touch target size for interactive elements */
  button, 
  [role="button"],
  [role="tab"],
  [role="menuitem"],
  a[href] {
    @apply min-h-11 min-w-11; /* 2.75rem for 44px WCAG AA */
  }

  /* Hide arrows from number inputs */
  /* Chrome, Safari, Edge, Opera */
  input[type="number"]::-webkit-outer-spin-button,
  input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  input[type="number"] {
    -moz-appearance: textfield;
  }
  
  /* Radix popovers - z-index details moved to components.css if specific overrides are needed */
  [data-radix-popper-content-wrapper] {
    /* z-index is handled in components.css using the z-index scale */
    /* Do not set position here; Radix handles it. */
  }
}

@layer components {
  a:focus-visible {
    @apply outline-none ring-2 ring-offset-2;
    
    /* Explicitly set Tailwind's internal CSS variables for ring color and offset color.
       These will use the CSS variables defined in themes.css, which are theme-aware. */
    --tw-ring-color: hsl(var(--ring));
    --tw-ring-offset-color: hsl(var(--background)); /* Default offset for most links */

    /* For dark mode, ensure these variables re-evaluate based on .dark themed CSS vars. */
    .dark & { /* Targets '.dark a:focus-visible' */
      --tw-ring-color: hsl(var(--ring)); /* Will use .dark --ring */
      --tw-ring-offset-color: hsl(var(--background)); /* Will use .dark --background */
    }
  }

  /* The following explicit focus style ensures all interactive elements with focus use the same system */
  button:focus-visible,
  [role="button"]:focus-visible {
    @apply outline-none ring-2 ring-offset-2 ring-ring ring-offset-background;
  }

  /* Ensure all icons within links and buttons maintain pointer cursor behavior */
  a svg, a img, a span,
  button svg, button img, button span,
  [role="button"] svg, [role="button"] img, [role="button"] span {
    cursor: inherit;
  }
  
  /* Ensure button icons in various nesting levels inherit pointer cursor */
  button > * > svg,
  button > * > img,
  button > * > span,
  a > * > svg,
  a > * > img,
  a > * > span {
    cursor: inherit;
  }
  
  /* Extra specific selectors for the arrow icon in feature cards */
  a span:has(> svg),
  button span:has(> svg),
  a div:has(> svg),
  button div:has(> svg),
  a > div > span > svg,
  button > div > span > svg {
    cursor: pointer;
  }
  
  /* Handle the specific case of the â†’ arrow icon in different contexts */
  svg[data-arrow="true"],
  svg.arrow-icon,
  button svg,
  a svg,
  .group:hover svg,
  button .group:hover svg,
  a .group:hover svg,
  .group:hover > div > svg,
  .group:hover > span > svg {
    cursor: pointer;
  }
}

@layer utilities {
  /* Global link hover style - ONLY the underline color changes */
  a:hover {
    @apply text-foreground decoration-2; /* decoration-thickness: 2px */
    text-decoration-color: hsl(var(--primary)); /* Using primary color for hover underline */
  }
  
  /* Make sure text color remains unchanged on hover */
  a:hover * {
    color: inherit;
  }
}

/* Ensure text elements don't display text editor cursor */
input[type="text"], input[type="number"], input[type="email"], input[type="password"], textarea, [contenteditable="true"] {
  cursor: text;
}

/* Media query for improving small screen spacing */
@media (max-width: 640px) {
  /* Maintain touch-friendly spacing on mobile */
  main {
    @apply px-4 py-6;
  }
}

/* Prevent layout shifts due to scrollbar appearing/disappearing */
html {
  scrollbar-gutter: stable;
  overflow-x: hidden; /* Prevent horizontal scrolling */
  overflow-anchor: none; /* Prevent scroll jumps during content updates */
  width: 100%; /* Fix width to prevent layout shifts */
  font-size: 16px; /* Base font size - important for rem calculations */
}

/* Style for when the scrollbar needs to be preserved during modals */
html.prevent-scrollbar-shift {
  overflow-y: scroll;
  padding-right: 0; /* Prevent automatic padding */
  margin-right: calc(var(--scrollbar-width) * -1); /* Negative margin to compensate */
}

/* For browsers that don't support scrollbar-gutter */
@supports not (scrollbar-gutter: stable) {
  html {
    overflow-y: scroll;
    overflow-x: hidden; /* Prevent horizontal scrolling */
  }
  
  /* When modal is open, prevent layout shifts */
  html.prevent-scrollbar-shift body {
    position: relative;
  }
}

/* Normalize Scrollbar Appearance */
::-webkit-scrollbar {
  width: 0.625rem; /* 10px */
}

::-webkit-scrollbar-thumb {
  background-color: hsla(var(--black), 0.2); /* Consider theme variable for this color if --black is not standard */
  border-radius: 0.375rem; /* 6px */
}

.dark ::-webkit-scrollbar-thumb {
  background-color: hsla(var(--white), 0.2); /* Consider theme variable for this color if --white is not standard */
}

::-webkit-scrollbar-track {
  background-color: transparent;
}

/* Reset overflow on body and html to ensure no double scrollbars */
body, html {
  max-width: 100vw;
}

/* Prevent content flickering during load */
html.loading * {
  transition: none;
}

/* Add transitions for smooth theme switching */
html {
  transition: background-color 0.5s, color 0.5s;
}

/* Vertical rhythm and spacing */
section {
  @apply mb-8; /* 2rem */
}

main > section {
  @apply mb-12; /* 3rem */
}

/* For consistent list styling */
ul, ol {
  @apply pl-6 mb-4; /* padding-left: 1.5rem; margin-bottom: 1rem; */
}

li {
  @apply mb-2; /* 0.5rem */
}

/* Consistent blockquote styling */
blockquote {
  @apply border-l-4 border-muted pl-4 mb-4 italic;
}

/* Consistent code block styling */
pre, code {
  font-family: var(--font-mono);
  font-size: 0.9rem; /* Consider aligning with Tailwind scale or making a variable */
}

pre {
  @apply p-4 mb-4 rounded-lg bg-muted overflow-x-auto;
}

code {
  @apply px-1 py-0.5 rounded bg-muted; /* Approximation of 0.125rem 0.25rem padding */
}

/* Prevent layout shifts during theme changes */
html.transitioning {
  overflow-y: scroll; /* Force scrollbar to remain visible */
}

/* Reduced Motion Helper */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 1ms;
    animation-iteration-count: 1;
    transition-duration: 1ms;
    scroll-behavior: auto;
    transition-delay: 0ms;
  }
} 

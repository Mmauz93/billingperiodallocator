/* Component-specific styling */

/*
 * HEADER COMPONENT STYLES
 * These styles ensure consistent appearance and behavior for header navigation elements
 * Specifically addressing alignment, transitions, and interactive states
 */

/* REMOVED: All specific header button and dropdown item styling.
   This is now handled by Tailwind CSS classes directly within the
   language-toggle.tsx, theme-toggle.tsx, and other relevant header components.
   This includes base styles, hover states, icon alignment, and transitions. */

/* REMOVED: header.fixed { transition: ... }
   This transition was moved directly to the <header> element in Header.tsx using Tailwind classes. */

/*
 * THEME INITIALIZATION
 * Prevent transition flicker during initial page load
 * Only enable transitions after theme is initialized
 */
/* REMOVED: .header-toggle-button { transition: opacity ... }
   Opacity transitions for header toggle buttons are now applied via Tailwind classes
   directly on the button elements in their respective components.
   The buttons also start with opacity-0 via Tailwind. */

/* KEPT: This rule is part of the theme initialization anti-flicker mechanism.
   It makes header toggle buttons visible once the theme is confirmed loaded (data-theme-initialized="true" on html tag).
   Buttons start with opacity-0 and have transition-opacity via Tailwind classes applied in their components. */
[data-theme-initialized="true"] .header-toggle-button {
  opacity: 1;
}

/*
 * THEME TOGGLE BUTTON STATES & SPECIFIC ICON STYLING
 */
/* REMOVED: All rules related to button:has(svg.Sun, svg.Moon), button:has(svg.Globe),
   .header-toggle-button .lucide-globe, and .header-toggle-button[aria-expanded="true"].
   Styling for theme and language toggle buttons, including their open/expanded states and icon appearances,
   is handled by Tailwind CSS classes directly within theme-toggle.tsx and language-toggle.tsx.
   Component-level styles take precedence and were often conflicting with these global rules. */

/*
 * DROPDOWN MENU POSITIONING
 * Set appropriate z-index for Radix UI's dropdown menus
 * Prevent scrollbar issues during dropdown display
 */
/* KEPT (for now): This rule is a global override for Radix popper content wrappers.
   It ensures a specific z-index and aims to prevent transparency issues.
   The !important on opacity is a concern and may need review if conflicts arise
   or if more specific Radix component styling makes it redundant in the future.
   Consider if this can be replaced by ensuring PopperContent components always have appropriate bg/opacity. */
[data-radix-popper-content-wrapper] {
  /* Only set z-index, don't override Radix UI's positioning */
  z-index: var(--z-popover);
  background-color: inherit; /* Ensure backgrounds aren't made transparent */
  opacity: 1 !important; /* Force opacity to be 1 */
}

/* REMOVED: Rules for [data-radix-menu-content] animation duration and body:has([data-radix-popper-content-wrapper]) overflow.
   Shadcn/ui components manage their own animations. Global body overflow overrides are too broad and can break modal behavior. */

/*
 * COMPONENT STYLING CONSOLIDATION NOTICE
 *
 * All other CSS rules previously in this file have been removed as part of a major refactoring effort.
 * The goals of this refactoring were to:
 *   1. Establish Tailwind CSS utility classes as the primary Single Source of Truth (SSOT) for styling.
 *   2. Co-locate styles with their respective components (.tsx files).
 *   3. Reduce CSS specificity conflicts, reliance on !important, and global overrides.
 *   4. Improve maintainability and predictability of the application's styling.
 *
 * Styling for previously targeted elements and features should now be found within their respective
 * .tsx components using Tailwind CSS utility classes, or managed through the application's
 * theme configuration (src/styles/themes.css and tailwind.config.js).
 * If specific issues arise that these removed rules were addressing, they should be
 * re-evaluated and solved using Tailwind-idiomatic approaches at the component or theme level.
 */

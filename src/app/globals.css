@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

/* Theme Transition Handling - improved version */
/* Smooth icon transitions in theme toggle */
.header-toggle-button .sun-icon,
.header-toggle-button .moon-icon,
.header-toggle-button svg {
  transition: opacity 0.15s ease;
}

/* Both sun and moon icons should be present with one hidden */
.header-toggle-button .relative svg {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0; /* Default to hidden */
}

/* Show the appropriate icon when theme is initialized */
html[data-theme-initialized="true"] .header-toggle-button .sun-icon.opacity-100,
html[data-theme-initialized="true"] .header-toggle-button .moon-icon.opacity-100 {
  opacity: 1 !important;
}

/* Remove redundant opacity transitions that are no longer needed */
/* Prevent flash during loading */
html.loading * {
  transition: none !important;
}

/* Smooth theme transitions but only after initial load */
html:not(.loading) {
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Give a consistent hover style to header toggle buttons */
.header-toggle-button {
  background-color: transparent;
  transition: background-color 0.2s ease, color 0.2s ease !important;
}

.header-toggle-button:hover {
  background-color: #0284C7 !important;
  color: #ffffff !important;
}

/* Make icons inside buttons have the same color as text */
.header-toggle-button:hover svg {
  color: #ffffff !important;
}

/* Fix for Globe icon in language toggle */
.header-toggle-button .lucide-globe,
button svg.lucide-globe,
svg.lucide.lucide-globe {
  color: currentColor !important;
  stroke: currentColor !important;
  stroke-width: 2px !important;
  fill: none !important;
  opacity: 1 !important;
  visibility: visible !important;
  display: block !important;
}

/* Fix header icons alignment */
header nav .header-toggle-button {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  height: 40px !important;
  width: 40px !important;
  position: relative !important;
}

header nav .header-toggle-button > div {
  display: flex !important;
  align-items: center !important;
  justify-content: center !important;
  position: static !important;
}

/* Accrual accounting specific styles */
a[href*="accrualaccounting"],
p a[href*="accrualaccounting"],
a:has(span:contains("accrual accounting")),
p:contains("accrual accounting") a,
p:contains("zeitliche Abgrenzung") a {
  text-decoration: underline !important;
  text-decoration-thickness: 1.5px !important;
  text-underline-offset: 2px !important;
  color: hsl(var(--primary)) !important;
  font-weight: 500 !important;
  transition: color 0.2s ease, text-decoration-color 0.2s ease, text-decoration-thickness 0.2s ease;
}

a[href*="accrualaccounting"]:hover,
p a[href*="accrualaccounting"]:hover,
a:has(span:contains("accrual accounting")):hover,
p:contains("accrual accounting") a:hover,
p:contains("zeitliche Abgrenzung") a:hover {
  color: #0ea5e9 !important;
  text-decoration-color: #0ea5e9 !important;
  text-decoration-thickness: 2px !important;
}

/* Feature card links styling */
.text-primary.underline,
span.text-primary.underline,
a.text-primary,
span.text-primary,
p a,
p span.text-primary,
a[href],
[href*="IFRS"],
[href*="expense"],
[href*="privacy"],
[href*="wikipedia"],
[href*="fedlex"],
[href*="gesetze"] {
  cursor: pointer !important;
  color: hsl(var(--primary));
  text-decoration-color: hsla(var(--primary), 0.6);
  text-decoration-thickness: 1px;
  text-underline-offset: 2px;
  transition: color 0.2s ease, text-decoration-color 0.2s ease, text-decoration-thickness 0.2s ease;
}

.text-primary.underline:hover,
span.text-primary.underline:hover,
a.text-primary:hover,
span.text-primary:hover,
p a:hover,
p span.text-primary:hover,
a[href]:hover,
[href*="IFRS"]:hover,
[href*="expense"]:hover,
[href*="privacy"]:hover,
[href*="wikipedia"]:hover,
[href*="fedlex"]:hover,
[href*="gesetze"]:hover {
  color: #0ea5e9 !important;
  text-decoration-color: #0ea5e9;
  text-decoration-thickness: 2px;
}

/* AAA Fix: Ensure spans inside feature cards use muted-foreground in dark mode for contrast */
.dark .bg-card p span.text-primary,
.dark [class*="bg-card"] p span.text-primary,
.dark .bg-card a.text-primary,
.dark [class*="bg-card"] a.text-primary {
  color: hsl(var(--muted-foreground)) !important;
  font-weight: 600 !important;
}

/* Ensure entire card has pointer cursor as it's a link */
.p-6.rounded-lg.group[href] {
  cursor: pointer !important;
}

/* FORCE ALL CALENDAR BUTTONS TO HAVE TRANSPARENT BACKGROUND */
.rdp-button,
.rdp-day,
.rdp button,
.rdp table button,
.rdp tbody button,
.rdp td button,
[role="grid"] button,
[role="gridcell"] button,
[data-radix-popper-content-wrapper] [role="grid"] button:not([aria-selected="true"]):not(:hover),
button.day,
.calendar button {
  background-color: transparent !important; 
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --color-chart-5: var(--chart-5);
  --color-chart-4: var(--chart-4);
  --color-chart-3: var(--chart-3);
  --color-chart-2: var(--chart-2);
  --color-chart-1: var(--chart-1);
  --color-ring: var(--ring);
  --color-input: var(--input);
  --color-border: var(--border);
  --color-destructive: var(--destructive);
  --color-accent-foreground: var(--accent-foreground);
  --color-accent: var(--accent);
  --color-muted-foreground: var(--muted-foreground);
  --color-muted: var(--muted);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-secondary: var(--secondary);
  --color-primary-foreground: var(--primary-foreground);
  --color-primary: var(--primary);
  --color-popover-foreground: var(--popover-foreground);
  --color-popover: var(--popover);
  --color-card-foreground: var(--card-foreground);
  --color-card: var(--card);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

/* Updated color palette based on the branding guide */
:root {
  --radius: 0.5rem; /* 8px border-radius as per design style */
  /* --- Light Mode --- */
  --background: #F2F6F9;               /* AUDIT: Use #F2F6F9 (was #F9FBFC) */
  --foreground: 222.2 84% 4.9%;         /* almost black */
  --card: #FFFFFF;                     /* Keep cards pure white for layering */
  --card-foreground: 222.2 84% 4.9%;     /* almost black */
  --popover: #FFFFFF;                  /* white */
  --popover-foreground: 222.2 84% 4.9%;  /* almost black */

  /* Primary - Use the blue from dark mode */
  --primary: 217 78% 53%; /* hsl for a slightly darker #0284C7 (was #4285D6 and #4a90e2) */
  --primary-foreground: 0 0% 100%;      /* white (contrasts with blue) */

  /* Secondary - Use a more distinct light gray */
  --secondary: #F3F4F6;           /* AUDIT: Use #F3F4F6 (was HSL 210 40% 96.1%) */
  --secondary-foreground: 222.2 47.4% 11.2%; /* dark blue/black (keep existing) */

  /* Muted - Make more pronounced for better contrast */
  --muted: 215 24% 92%;               /* AUDIT: Use HSL components 215 24% 92% (was 218 30% 94%) */
  --muted-foreground: 215.4 16.3% 46.9%; /* mid-gray */

  /* Accent - Use a softer but visible accent */
  --accent: 217 78% 97%;               /* very light blue that\'s visible but subtle */
  --accent-foreground: 217 78% 30%;    /* darker blue for text on accent backgrounds */

  /* Destructive - Keep existing */
  --destructive: 0 84.2% 60.2%;        /* hsl for #ef4444 */
  --destructive-foreground: 0 0% 100%;  /* white */

  /* Border/Input/Ring - Improve definition */
  --border: 215 20% 90%;              /* slightly bluer light gray for borders */
  --input: 220 13% 95.7%;             /* very light gray hsl for #f3f4f6 */
  --ring: 217 78% 53%;                /* hsl for a slightly darker #0284C7 (was #4285D6 and #4a90e2) */

  /* Disabled States - AUDIT: New */
  --disabled: #E5E7EB;
  --disabled-foreground: #9CA3AF;

  /* Base Chart Colors */
  --chart-1: #0284C7; /* Original dark blue might be ok for charts */
  --chart-2: #f5a623; /* Orange */
  --chart-3: #22c55e; /* Green */
  --chart-4: #5a6271; /* Gray */
  --chart-5: #ef4444; /* Red */

  /* Colorblind-Safe Chart Colors */
  --colorblind-1: #1b9e77;
  --colorblind-2: #d95f02;
  --colorblind-3: #7570b3;
  --colorblind-4: #e7298a;
  --colorblind-5: #66a61e;
  --colorblind-6: #e6ab02;
  --colorblind-7: #a6761d;

  /* Sidebar Colors */
  --sidebar: #ffffff;
  --sidebar-foreground: #374151;
  --sidebar-primary: #0284C7;
  --sidebar-primary-foreground: #ffffff;
  --sidebar-accent: #f9fafb;
  --sidebar-accent-foreground: #0284C7;
  --sidebar-border: #e5e7eb;
  --sidebar-ring: #0284C7;

  --pulse-highlight-color: rgba(74, 144, 226, 0.12);

  /* Added scrollbar width variable */
  --scrollbar-width: 0px;

  /* Custom primary color for legal pages */
  --legal-primary: 201 98% 39%; /* #0284C7 */
}

/* Prevent layout shifts due to scrollbar appearing/disappearing */
html {
  scrollbar-gutter: stable;
  overflow-x: hidden !important; /* Prevent horizontal scrolling with !important */
  overflow-anchor: none; /* Prevent scroll jumps during content updates */
  width: 100%; /* Fix width to prevent layout shifts */
}

/* Style for when the scrollbar needs to be preserved during modals */
html.prevent-scrollbar-shift {
  overflow-y: scroll !important;
  padding-right: 0 !important; /* Prevent automatic padding */
  margin-right: calc(var(--scrollbar-width) * -1) !important; /* Negative margin to compensate */
}

/* For browsers that don't support scrollbar-gutter */
@supports not (scrollbar-gutter: stable) {
html {
  overflow-y: scroll;
    overflow-x: hidden; /* Added to prevent horizontal scrolling */
  }
  
  /* When modal is open, prevent layout shifts */
  html.prevent-scrollbar-shift body {
    position: relative;
  }
}

/* Dark mode colors updated to match the branding */
.dark {
  --background: #121212;
  --foreground: #f9fafb;
  --card: #1e1e1e;
  --card-foreground: #d1d5db;
  --popover: #1e1e1e;
  --popover-foreground: #d1d5db;
  --primary: 217 78% 53%; /* FIX: Use light mode's HSL for better contrast with white text (was 217 78% 61%) */
  --primary-foreground: #ffffff;
  --secondary: #2A2A2A; /* AUDIT: Use #2A2A2A (was #f5a623) */
  --secondary-foreground: #F9FAFB; /* AUDIT: Use #F9FAFB (was #121212) for contrast */
  --muted: #2a2a2a;
  --muted-foreground: 214 15% 70%; /* AAA Fix: Lighten for better contrast on cards (was #9ca3af) */
  --accent: 217 78% 53%; /* Use the darker primary for accent in dark mode */
  --accent-foreground: #ffffff;
  --destructive: #f87171;
  --destructive-foreground: #ffffff;
  --border: #3a3a3a;
  --input: #2a2a2a;
  --ring: #4a90e2;

  /* AUDIT: New card-muted for dark theme layering */
  --card-muted: #242424;

  /* Disabled States - AUDIT: New */
  --disabled: #2A2A2A;
  --disabled-foreground: #6B7280;

  /* Base Chart Colors (Dark) */
  --chart-1: #4a90e2;
  --chart-2: #f5a623;
  --chart-3: #22c55e;
  --chart-4: #9ca3af;
  --chart-5: #f87171;

  /* Colorblind-Safe Chart Colors (Can be same as light if contrast is sufficient) */
  --colorblind-1: #1b9e77;
  --colorblind-2: #d95f02;
  --colorblind-3: #7570b3;
  --colorblind-4: #e7298a;
  --colorblind-5: #66a61e;
  --colorblind-6: #e6ab02;
  --colorblind-7: #a6761d;

  /* Sidebar Colors (Dark) */
  --sidebar: #1e1e1e;
  --sidebar-foreground: #d1d5db;
  --sidebar-primary: #4a90e2;
  --sidebar-primary-foreground: #ffffff;
  --sidebar-accent: #2a2a2a;
  --sidebar-accent-foreground: #ffffff;
  --sidebar-border: #3a3a3a;
  --sidebar-ring: #4a90e2;

  --pulse-highlight-color: rgba(74, 144, 226, 0.12);
}

@layer base {
  * {
    @apply border-border; /* Removed outline-ring/50 */
    max-width: 100%; /* Ensure no element exceeds its container width */
  }

  /* General visible focus indicator for interactive elements */
  a:focus-visible,
  button:focus-visible,
  [role="button"]:focus-visible,
  [role="link"]:focus-visible,
  [role="tab"]:focus-visible,
  /* Add other common interactive roles as needed */
  [tabindex]:not([tabindex="-1"]):focus-visible {
    outline: 2px solid transparent; /* Fallback or for spacing */
    outline-offset: 2px;
    box-shadow: 0 0 0 3px hsla(var(--ring), 0.6) !important; 
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
    background-color: #121212; /* Add default dark background */
    font-size: 16px;
    line-height: 1.4;
    overflow-x: hidden; /* Prevent horizontal scrolling at body level */
    width: 100%; /* Ensure body takes exactly viewport width */
    isolation: isolate; /* Create a new stacking context */
  }

  h1 {
    font-size: clamp(2.25rem, 1.5rem + 2vw, 2.5rem); /* Fluid typography */
    font-weight: 700;
    line-height: 1.2;
  }

  h2 {
    font-size: clamp(1.75rem, 1.25rem + 1.5vw, 2rem); /* Fluid typography */
    font-weight: 600;
    line-height: 1.25;
  }

  h3 {
    font-size: clamp(1.25rem, 1rem + 0.75vw, 1.5rem); /* Fluid typography */
    font-weight: 500;
    line-height: 1.3;
  }

  /* Hide arrows from number inputs */
  /* Chrome, Safari, Edge, Opera */
  input[type="number"]::-webkit-outer-spin-button,
  input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  input[type="number"] {
    -moz-appearance: textfield;
  }

  /* Make sure header has the highest z-index */
  header.fixed {
    z-index: 1000 !important; /* Increase from 100 to 1000 to ensure it's always on top */
  }
  
  /* All form elements and their children get a lower z-index stacking context */
  form, 
  .form-control,
  .form-item, 
  .form-field,
  .input-container,
  .relative,
  [role="combobox"] {
    position: relative !important;
    z-index: 1 !important;
    isolation: isolate !important;
  }
  
  /* All icons and validation markers in forms get the lowest z-index */
  .CheckCircle,
  .AlertCircle,
  .CalendarIcon,
  .h-4.w-4,
  svg.w-4,
  svg.h-4,
  button svg,
  input + div,
  input ~ div,
  .absolute.inset-y-0,
  .absolute.right-2,
  .absolute.right-10 {
    z-index: 1 !important; /* These should never appear above the header */
  }
  
  /* Force all radix popover content to render below header */
  [data-radix-popper-content-wrapper] {
    z-index: 50 !important; /* Below header but above regular content */
  }
}

/* Global input styles */
input,
select,
textarea {
  @apply w-full rounded-lg border-input py-2 px-3 shadow-sm;
  background-color: var(--input);
  color: var(--foreground);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
}

/* Update input focus styles to use consistent blue color and box-shadow */
input:focus,
select:focus,
textarea:focus,
input:focus-visible,
select:focus-visible,
textarea:focus-visible {
  border-color: hsl(var(--ring)) !important;
  outline: none !important; /* Explicitly remove outline for inputs */
  box-shadow: 0 0 0 3px hsla(var(--ring), 0.6) !important; /* Consistent with general focus-visible */
}

/* Style for settings inputs */
.settings-input:focus {
  border-color: #0284C7 !important;
  box-shadow: 0 0 0 2px rgba(2, 132, 199, 0.2) !important;
}

.input-helper-text {
  @apply text-xs text-muted-foreground mt-1;
}

/* Animation for user interface elements */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-out forwards;
}

/* Add a pulse-highlight animation for results section */
@keyframes pulseHighlight {
  0% {
    background-color: transparent;
  }
  30% {
    background-color: rgba(46, 90, 140, 0.08);
  } /* Light mode primary with opacity */
  100% {
    background-color: transparent;
  }
}

.pulse-highlight {
  animation: pulseHighlight 1.2s ease-out;
  border-radius: 0.5rem;
  background-color: transparent;
}

.dark .pulse-highlight {
  animation-name: darkPulseHighlight;
}

@keyframes darkPulseHighlight {
  0% {
    background-color: transparent;
  }
  30% {
    background-color: rgba(74, 144, 226, 0.12);
  } /* Dark mode primary with opacity */
  100% {
    background-color: transparent;
  }
}

/* Add proportilon highlight styles as specified in the branding guide */
.proportion-highlight {
  background-color: rgba(
    46,
    90,
    140,
    0.1
  ); /* Proportion Highlight Background in light mode */
  color: #0284C7; /* Proportion Text in light mode */
  border-radius: 0.25rem;
  padding: 0.25rem 0.5rem;
}

.dark .proportion-highlight {
  background-color: rgba(
    74,
    144,
    226,
    0.2
  ); /* Proportion Highlight Background in dark mode */
  color: #ffffff; /* Proportion Text in dark mode */
}

/* Result reveal animation */
@keyframes resultReveal {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Success glow animation for the submit button */
@keyframes successGlow {
  0% {
    box-shadow: 0 0 0 rgba(34, 197, 94, 0);
  } /* Success Green with 0 opacity */
  50% {
    box-shadow: 0 0 12px rgba(34, 197, 94, 0.8);
  } /* Success Green with high opacity */
  100% {
    box-shadow: 0 0 0 rgba(34, 197, 94, 0);
  } /* Success Green with 0 opacity */
}

/* Success glow animation for the result card */
@keyframes resultSuccessGlow {
  0% {
    box-shadow: 0 0 2px rgba(46, 90, 140, 0.1);
  } /* Primary Blue with low opacity */
  40% {
    box-shadow: 0 0 15px rgba(46, 90, 140, 0.3);
  } /* Primary Blue with medium opacity */
  100% {
    box-shadow: 0 0 2px rgba(46, 90, 140, 0.1);
  } /* Primary Blue with low opacity */
}

@keyframes darkResultSuccessGlow {
  0% {
    box-shadow: 0 0 2px rgba(74, 144, 226, 0.1);
  } /* Dark mode Primary Blue with low opacity */
  40% {
    box-shadow: 0 0 15px rgba(74, 144, 226, 0.3);
  } /* Dark mode Primary Blue with medium opacity */
  100% {
    box-shadow: 0 0 2px rgba(74, 144, 226, 0.1);
  } /* Dark mode Primary Blue with low opacity */
}

.animate-success-glow {
  animation: successGlow 1.5s ease-in-out;
}

.animate-result-reveal {
  animation: resultReveal 0.4s ease-in-out;
  animation-fill-mode: backwards;
  animation-delay: 200ms; /* Small delay before showing results */
}

.animate-result-glow {
  animation: resultSuccessGlow 3s ease-out forwards;
}

.dark .animate-result-glow {
  animation-name: darkResultSuccessGlow;
}

/* Premium button hover effects */
.button:not(:disabled) {
  transition:
    transform 0.2s ease,
    box-shadow 0.2s ease,
    background-color 0.2s ease,
    opacity 0.2s ease;
}

/* Force all buttons to have consistent hover transformation in both modes */
button:not(:disabled):not(.no-transform):hover,
.button:not(:disabled):not(.no-transform):hover,
[role="button"]:not(:disabled):not(.no-transform):hover,
input[type="submit"]:not(:disabled):not(.no-transform):hover,
input[type="button"]:not(:disabled):not(.no-transform):hover {
  transform: translateY(-2px) scale(1.015) !important;
}

/* Add specific override for primary buttons like "Test with Demo Data" */
.bg-primary:hover {
  background-color: var(--primary) !important;
  opacity: 0.9;
  color: var(--primary-foreground) !important;
}

/* Ensure consistent color for all primary buttons in both light and dark modes */
.bg-primary, 
html:not(.dark) .bg-primary,
.dark .bg-primary {
  background-color: var(--primary) !important;
  color: var(--primary-foreground) !important;
}

/* Premium button gradient for special actions */
.premium-button {
  background: linear-gradient(
    to right,
    var(--primary),
    color-mix(in srgb, var(--primary) 80%, var(--secondary))
  );
  color: white;
  border: none;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.premium-button:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
}

.dark .premium-button {
  background: linear-gradient(
    to right,
    var(--primary),
    color-mix(in srgb, var(--primary) 70%, var(--secondary))
  );
}

/* Custom tooltip styles */
.premium-tooltip {
  position: relative;
}

.premium-tooltip::before {
  content: attr(data-tooltip);
  position: absolute;
  bottom: 125%;
  left: 50%;
  transform: translateX(-50%);
  padding: 6px 12px;
  border-radius: 6px;
  background-color: var(--popover);
  color: var(--popover-foreground);
  text-align: center;
  font-size: 0.875rem;
  white-space: nowrap;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  opacity: 0;
  visibility: hidden;
  transition:
    opacity 0.2s,
    visibility 0.2s;
  z-index: 1000;
  pointer-events: none;
  border: 1px solid var(--border);
}

.premium-tooltip::after {
  content: "";
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  border-width: 5px;
  border-style: solid;
  border-color: #333 transparent transparent transparent;
  opacity: 0;
  visibility: hidden;
  transition:
    opacity 0.3s ease,
    visibility 0s linear 0.3s;
  z-index: 100;
  pointer-events: none;
}

.premium-tooltip:hover::before,
.premium-tooltip:hover::after {
  opacity: 1;
  visibility: visible;
  transition-delay: 200ms; /* Small delay before showing tooltip */
  transform: translateX(-50%) translateY(0);
}

/* Parallax background effect for desktop */
@media (min-width: 1024px) {
  .parallax-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    z-index: -1;
    background: linear-gradient(
      to bottom,
      rgba(46, 90, 140, 0.05),
      rgba(255, 255, 255, 0)
    );
    transform: translateY(0);
    will-change: transform;
  }
}

/* Add scale animation for buttons and inputs */
@keyframes scaleIn {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.03);
  }
}

/* Add transitions for smooth theme switching */
html {
  transition:
    background-color 0.5s,
    color 0.5s;
}

body * {
  transition-property:
    /* background-color, */ border-color, color, fill, stroke, opacity, box-shadow,
    /* transform, */ filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.15s;
}

/* Overrides for react-cookie-consent buttons */
#rcc-confirm-button {
  background-color: #0284C7 !important; /* Primary Blue */
  color: white !important;
  border: 1px solid hsl(var(--border)) !important;
  padding: 0.5rem 0.75rem !important;
  border-radius: var(--radius) !important;
  font-size: 13px !important;
  margin: 0 !important;
  cursor: pointer !important;
  transition: none !important;
}

#rcc-confirm-button:hover {
  background-color: rgba(
    46,
    90,
    140,
    0.9
  ) !important; /* Slightly lighter Primary Blue */
}

#rcc-decline-button {
  background-color: transparent !important;
  color: hsl(var(--secondary-foreground)) !important;
  border: none !important;
  padding: 0 !important;
  margin: 0 0 0 0.5rem !important;
  font-size: 13px !important;
  text-decoration: none !important;
  cursor: pointer !important;
}

#rcc-decline-button:hover {
  text-decoration: underline !important;
}

/* Reduced Motion Helper */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 1ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 1ms !important;
    scroll-behavior: auto !important;
    transition-delay: 0ms !important;
  }
}

/* PrivacyBee Widget Light Mode Overrides REMOVED - Trying data-theme attribute instead */
/*
html:not(.dark) privacybee-widget {
    // ... removed overrides ...
}
*/

/* Add smoother transitions globally */
* {
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

/* Add fade-in animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fadeIn {
  animation: fadeIn 0.4s ease-out forwards;
}

/* Add staggered fade-in for lists */
@keyframes staggeredFadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.staggered-item {
  animation: staggeredFadeIn 0.4s ease-out forwards;
  opacity: 0;
}

/* Prevent flashing during theme changes */
html.transitioning * {
  transition: none !important;
}

/* Add padding to account for fixed header - Handled by inner div padding */
body {
  /* padding-top: 4rem; */ /* Remove, will be added to inner div */
  overflow-x: hidden; /* Restore to prevent potential layout shifts during scroll/interaction */
  /* overflow-y: scroll; */ /* Add scroll rule here - MOVED TO @layer base */
}

/* Prevent layout shifts during theme changes */
html.transitioning {
  overflow-y: scroll !important; /* Force scrollbar to remain visible */
}

/* Ensure fixed elements stay in place during transitions */
.fixed {
  transform: translateZ(0); /* Force GPU acceleration for fixed elements */
  will-change: transform; /* Hint to browser about upcoming changes */
  backface-visibility: hidden; /* Prevent flickering in some browsers */
}

/* Improve header appearance during scrolling */
header.fixed {
  transition: background-color 0.3s, border-color 0.3s, box-shadow 0.3s;
}

/* Ensure text elements don't display text editor cursor */
p, h1, h2, h3, h4, h5, h6, span, div:not([contenteditable="true"]), li, a:not([href]), section, header, footer {
  cursor: default !important;
}
/* Interactive elements should maintain their appropriate cursor */
a[href], button, [role="button"], input[type="submit"], input[type="button"], .cursor-pointer {
  cursor: pointer !important;
}
/* Input elements should show text cursor */
input[type="text"], input[type="number"], input[type="email"], input[type="password"], textarea, [contenteditable="true"] {
  cursor: text !important;
}

/* Ensure sticky header works consistently - REMOVED as Tailwind class is sufficient */
/*
header.sticky {
  position: sticky;
  top: 0;
  z-index: 9999;
  will-change: transform; 
}
*/

/* Add dropdown menu containment to prevent scrollbar issues */
[data-radix-popper-content-wrapper] {
  overflow: hidden !important;
  contain: content !important;
  overscroll-behavior: contain !important;
  max-height: 100vh !important;
  pointer-events: auto !important;
  z-index: 1000 !important;
}

/* Ensure all dropdown menus have proper overflow behavior */
.dropdown-menu-content,
[role="menu"],
[data-state="open"],
[data-radix-popper-content] {
  max-height: calc(100vh - 10px) !important;
  overscroll-behavior: contain !important;
  pointer-events: auto !important;
  z-index: 1000 !important;
}

/* Ensure this block is NOT duplicated */
/* Prevent any portals from affecting document flow */
[data-radix-portal] {
  overflow: visible !important;
  z-index: 1000 !important;
}

/* Force dropdown positioning to fixed to prevent reflow */
.dropdown-menu-content[data-state="open"],
.dropdown-content[data-state="open"],
[role="dialog"],
[role="menu"] {
}

/* Reset overflow on body and html to ensure no double scrollbars */
body, html {
  /* overscroll-behavior: none !important; */ /* Removed to allow pull-to-refresh */
  max-width: 100vw !important;
}

/* Ensure fixed/absolute positioned elements follow proper stacking */
.fixed,
.absolute,
[data-radix-popper-content-wrapper] {
  z-index: 100; /* Higher z-index for popups/dropdowns */
  transform: translateZ(0);
  will-change: transform; /* Hint to browser about upcoming changes */
}

/* Attempt to hide the duplicated title and last updated text from PrivacyBee widget */
/* This assumes the widget renders an h1 followed immediately by a p for these elements, possibly nested within a div. */
privacybee-widget div > h1,
privacybee-widget div > h1 + p {
  display: none !important;
}

/* Fix z-index stacking issues with header and form elements */
.fixed.top-0.z-\[100\] {
  z-index: 100;
}

/* Ensure all popups and dialogs have a lower z-index than the header */
[data-radix-popper-content-wrapper],
[data-state="open"].Dialog,
[data-radix-select-content],
[data-radix-dropdown-menu-content] {
  z-index: 50 !important;
}

@layer components {
  /* Fix z-index stacking issues with header and form elements */
  header.fixed {
    z-index: 100 !important;
  }

  /* Ensure all popups and dialogs have a lower z-index than the header */
  [data-radix-popper-content-wrapper],
  [data-state="open"] {
    z-index: 50 !important;
  }
  
  /* Fix for form icons and validation markers appearing above header */
  .absolute.right-2,
  .absolute.inset-y-0,
  .absolute.right-10,
  [class*="w-4 h-4"],
  [class*="h-4 w-4"],
  .h-4.w-4,
  input + div svg,
  input ~ div svg,
  .CheckCircle,
  .AlertCircle {
    z-index: 1 !important;
  }
  
  /* Create a proper stacking context for form fields */
  .flex.flex-col,
  .relative,
  .FormItem,
  .FormField,
  form div {
    isolation: isolate;
    z-index: 0;
  }

  /* Keep the general .siempi-link for other uses if any, but footer one is more specific */
  .siempi-link {
    color: #9ca3af !important; /* Default for other .siempi-link uses */
    @apply no-underline hover:underline transition-colors duration-200;
  }

  /* Increase transparency for legal links in footer (light mode) - Language Agnostic */
  html:not(.dark) footer div.container nav a[href*="/legal/"] {
    opacity: 0.7 !important; /* Kept for light mode, assuming base color has high contrast */
  }
  /* Ensure full opacity for legal links in dark mode for better contrast */
  .dark footer div.container nav a[href*="/legal/"] {
    opacity: 1 !important; 
  }

  /* FINAL ATTEMPT: Override CSS variable for "Share Your Feedback" BUTTON AND ICON */
  button:has(svg.lucide-message-square) {
    --primary: #0284C7 !important; /* Override the --primary variable for this button */
    color: #0284C7 !important;
    -webkit-text-fill-color: #0284C7 !important;
  }

  button:has(svg.lucide-message-square) svg {
    --primary: #0284C7 !important; /* Also for SVG, in case it's read directly */
    color: #0284C7 !important;
    stroke: #0284C7 !important;
    fill: none !important;       /* CORRECTED: Ensure icon is not filled */
  }

  /* Force Feedback button & icon to #0284C7 in LIGHT mode - Language Agnostic */
  html:not(.dark) footer div.container nav button:has(svg.lucide-message-square),
  html:not(.dark) footer div.container nav button:has(svg.lucide-message-square) svg {
    color: #0284C7 !important;
    stroke: #0284C7 !important;
    fill: none !important;
    -webkit-text-fill-color: #0284C7 !important;
  }

  /* Force Feedback button & icon to #0284C7 in DARK mode (for consistency) - Language Agnostic */
  .dark footer div.container nav button:has(svg.lucide-message-square),
  .dark footer div.container nav button:has(svg.lucide-message-square) svg {
    color: #0284C7 !important;
    stroke: #0284C7 !important;
    fill: none !important;
    -webkit-text-fill-color: #0284C7 !important;
  }

  /* Force "Calculator" link to #0284C7 in LIGHT mode - Language Agnostic */
  html:not(.dark) footer div.container nav a[href$="/app/"] {
    color: #0284C7 !important;
    -webkit-text-fill-color: #0284C7 !important;
  }

  /* Force "Calculator" link to #0284C7 in DARK mode (for consistency) - Language Agnostic */
  .dark footer div.container nav a[href$="/app/"] {
    color: #0284C7 !important;
    -webkit-text-fill-color: #0284C7 !important;
  }

  /* Footer Dark Mode Contrast Fix - Overrides */
  .dark footer,
  .dark footer span,
  .dark footer div,
  .dark footer p {
    color: hsl(var(--muted-foreground)) !important; /* #A8B3C0 for >7:1 contrast on #121212 */
  }

  .dark footer a,
  .dark footer button[class*="text-foreground"] /* Target links and buttons that might have been text-foreground */ {
    color: hsl(var(--muted-foreground)) !important;
  }
  
  .dark footer a:hover,
  .dark footer button[class*="text-foreground"]:hover {
    color: hsl(var(--foreground)) !important; /* Brighter white for hover */
  }
}

/* Also force calendar background within popovers */
/* .popover-content > .rdp { ... } */ /* REMOVE THIS BLOCK */
/* .dark .popover-content > .rdp { ... } */ /* REMOVE THIS BLOCK */

/* NEW OVERRIDE: Force DropdownMenuContent background in light mode */
/* html:not(.dark) [data-radix-dropdown-menu-portal] .bg-popover { ... } */ /* REMOVE THIS BLOCK */

/* == FINAL ATTEMPT OVERRIDE: Force white background for pop-ups in light mode == */
/* html:not(.dark) [data-radix-dropdown-menu-content], ... { ... } */ /* REMOVE THIS ENTIRE BLOCK */
/* == END OVERRIDE == */

/* Add special hover styles for header toggle buttons in light mode to match dark mode */
.header-toggle-button {
  background-color: transparent;
}

.header-toggle-button:hover {
  background-color: #0284C7 !important;
  color: #ffffff !important;
}

/* Ensure disabled state doesn't change appearance for header buttons */
.header-toggle-button:disabled {
  opacity: 1 !important;
}

/* Add matching hover styles for dropdown menu items */
.header-dropdown-item {
  cursor: pointer;
}

.header-dropdown-item:hover {
  background-color: #0284C7 !important;
  color: #ffffff !important;
}

/* Prevent content flickering during load */
html.loading * {
  transition: none !important;
}

/* Smooth theme transitions but only after initial load */
html:not(.loading) {
  transition: background-color 0.3s ease, color 0.3s ease;
}

/* Theme toggle button transitions */
.header-toggle-button {
  transition: opacity 0.15s ease-in-out;
}

/* Ensure no transition flickers during initial page load */
[data-theme-initialized="true"] .header-toggle-button {
  opacity: 1 !important;
}

/* Simple clean fix for dropdown hover styles - matches header approach */
.select-item,
[data-slot="select-item"],
[data-radix-select-item],
[role="option"] {
  cursor: pointer !important;
}

.select-item:hover,
[data-slot="select-item"]:hover,
[data-radix-select-item]:hover,
[role="option"]:hover {
  background-color: #0284C7 !important;
  color: #ffffff !important;
}

/* Ensure pointer cursor on all dropdown and select items */
[data-radix-select-item],
[data-slot="select-item"],
[role="option"],
.select-item,
.header-dropdown-item,
[data-radix-dropdown-menu-item] {
  cursor: pointer !important;
}

/* Fix dropdown positioning and scrollbar issues */
.scrollbar-gutter-stable {
  scrollbar-gutter: stable;
}

/* Ensure dropdown menus have proper positioning without being cut off */
[data-radix-select-content] {
  position: fixed !important;
  max-height: 240px !important;
  overflow-y: auto !important;
  z-index: 1000 !important;
  will-change: transform !important;
  transform-origin: top center !important;
}

/* Fixed positioning dropdown to prevent cutoff */
[data-radix-select-content],
[data-radix-popper-content-wrapper] {
  position: fixed !important;
  z-index: 1000 !important;
  overflow: visible !important;
}

/* Ensure dropdown viewport has proper scrolling */
[data-radix-select-viewport] {
  max-height: 240px !important;
  overflow-y: auto !important;
  scrollbar-gutter: stable !important;
}

/* Apply strong hover styles to Radix items directly */
[data-radix-select-item],
[role="option"],
[id^="select-item-"] {
  cursor: pointer !important;
}

[data-radix-select-item]:hover,
[role="option"]:hover,
[id^="select-item-"]:hover {
  background-color: #0284C7 !important;
  color: white !important;
  --tw-bg-opacity: 1 !important;
}

/* Fix Radix Select Portal positioning and styling issues */
[data-radix-select-portal] {
  isolation: isolate !important;
  z-index: 9999 !important;
  position: fixed !important;
}

[data-radix-popper-content-wrapper] {
  position: fixed !important;
  z-index: 9999 !important;
  pointer-events: auto !important;
  transform-origin: top center !important;
  contain: none !important;
  overflow: visible !important;
  max-height: none !important;
  max-width: none !important;
}

/* Force Radix Select Viewport and Item Styling */
[data-radix-select-viewport] {
  max-height: var(--radix-select-content-available-height, 200px) !important;
  overflow-y: auto !important;
  padding: 5px !important;
}

/* Force item hover states with maximum specificity */
[id^="select-item-"]:hover,
[id^="select-item-"][data-highlighted="true"],
[id^="select-item-"]:focus,
[data-radix-select-item][data-highlighted="true"],
[data-radix-select-item]:hover {
  background-color: #0284C7 !important;
  color: white !important;
  cursor: pointer !important;
}

/* Improved theme-specific hover states for dropdown items */
html:not(.dark) [id^="select-item-"]:hover,
html:not(.dark) [data-radix-select-item]:hover,
html:not(.dark) [data-radix-select-item][data-highlighted="true"] {
  background-color: #0284C7 !important; /* Fixed blue color for light mode */
  color: white !important;
  cursor: pointer !important;
}

.dark [id^="select-item-"]:hover,
.dark [data-radix-select-item]:hover,
.dark [data-radix-select-item][data-highlighted="true"] {
  background-color: var(--primary) !important; /* Use theme variable in dark mode */
  color: var(--primary-foreground) !important;
  cursor: pointer !important;
}

/* Styles for our custom select dropdown items */
.select-dropdown-item {
  cursor: pointer !important;
}

/* Light mode hover */
html:not(.dark) .select-dropdown-item:hover,
html:not(.dark) .select-dropdown-item[data-highlighted="true"] {
  background-color: #0284C7 !important;
  color: white !important;
}

/* Dark mode hover */
.dark .select-dropdown-item:hover,
.dark .select-dropdown-item[data-highlighted="true"] {
  background-color: var(--primary) !important;
  color: var(--primary-foreground) !important;
}

/* Make sure all interactive elements show proper cursor */
[data-radix-select-trigger],
[data-radix-dropdown-menu-trigger],
[data-radix-select-item],
[data-radix-dropdown-menu-item],
.select-dropdown-item,
.header-dropdown-item,
.header-toggle-button,
button,
[role="button"],
[role="option"] {
  cursor: pointer !important;
}

/* Ensure toggle switch has better visibility in light mode */
html:not(.dark) [data-slot="switch"][data-state="unchecked"] {
  background-color: #d1d5db !important; /* Gray-300 */
  border: 1px solid #9ca3af !important; /* Gray-400 */
}

html:not(.dark) [data-slot="switch-thumb"] {
  background-color: white !important;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1) !important;
}

/* Special styling for the Include Final Day toggle */
.include-end-date-switch[data-state="checked"] {
  background-color: #0284C7 !important;
  border: 1px solid #0284C7 !important;
  box-shadow: 0 0 0 1px rgba(2, 132, 199, 0.1), 0 1px 2px rgba(0, 0, 0, 0.08) !important;
}

.include-end-date-switch[data-state="checked"]:hover {
  background-color: #0284C7 !important;
}

/* Ensure calendar icon buttons have blue hover backgrounds in both light and dark modes */
button[aria-label="Pick a date"]:hover {
  background-color: #0284C7 !important;
  color: white !important;
}

/* Add a nice transition effect */
button[aria-label="Pick a date"] {
  transition: background-color 0.2s ease, color 0.2s ease, transform 0.1s ease !important;
}

/* Add a subtle scale effect when active */
button[aria-label="Pick a date"]:active {
  transform: scale(0.95) !important;
}

/* Make sure the svg icon inside button turns white on hover in both modes */
button[aria-label="Pick a date"]:hover svg {
  color: white !important;
}

/* Make sure calendar buttons have blue background when popover is open - LIGHT AND DARK MODE FIXED RULES */
html:not(.dark) button[aria-label="Pick a date"],
.dark button[aria-label="Pick a date"] {
  transition: background-color 0.2s ease, color 0.2s ease, transform 0.1s ease !important;
}

/* Force common hover behavior */
html:not(.dark) button[aria-label="Pick a date"]:hover,
.dark button[aria-label="Pick a date"]:hover {
  background-color: #0284C7 !important;
  color: white !important;
}

/* Force common active behavior */
html:not(.dark) button[aria-label="Pick a date"]:active,
.dark button[aria-label="Pick a date"]:active {
  transform: scale(0.95) !important;
}

/* FORCE OPEN STATE STYLES - IDENTICAL IN BOTH LIGHT AND DARK MODES */
html:not(.dark) .Popover[data-state="open"] button[aria-label="Pick a date"],
html:not(.dark) [data-radix-popper-content-wrapper] ~ * button[aria-label="Pick a date"],
html:not(.dark) [role="dialog"] ~ button[aria-label="Pick a date"],
html:not(.dark) button[aria-label="Pick a date"][data-state="open"],
html:not(.dark) [open="true"] button[aria-label="Pick a date"],
.dark .Popover[data-state="open"] button[aria-label="Pick a date"],
.dark [data-radix-popper-content-wrapper] ~ * button[aria-label="Pick a date"],
.dark [role="dialog"] ~ button[aria-label="Pick a date"],
.dark button[aria-label="Pick a date"][data-state="open"],
.dark [open="true"] button[aria-label="Pick a date"] {
  background-color: #0284C7 !important;
  color: white !important;
}

/* FORCE ICON COLOR IN OPEN STATE - IDENTICAL IN BOTH MODES */
html:not(.dark) .Popover[data-state="open"] button[aria-label="Pick a date"] svg,
html:not(.dark) [data-radix-popper-content-wrapper] ~ * button[aria-label="Pick a date"] svg,
html:not(.dark) [role="dialog"] ~ button[aria-label="Pick a date"] svg,
html:not(.dark) button[aria-label="Pick a date"][data-state="open"] svg,
html:not(.dark) [open="true"] button[aria-label="Pick a date"] svg,
.dark .Popover[data-state="open"] button[aria-label="Pick a date"] svg,
.dark [data-radix-popper-content-wrapper] ~ * button[aria-label="Pick a date"] svg,
.dark [role="dialog"] ~ button[aria-label="Pick a date"] svg,
.dark button[aria-label="Pick a date"][data-state="open"] svg,
.dark [open="true"] button[aria-label="Pick a date"] svg {
  color: white !important;
}

/* CALENDAR DATE STYLING - RESET ALL DATES TO HAVE NO BACKGROUND FIRST */
.rdp button,
.rdp-button,
.rdp-day,
[role="grid"] button,
[role="gridcell"] button,
.day,
.calendar button,
[data-radix-popper-content-wrapper] [role="grid"] button {
  background-color: transparent !important;
  color: inherit !important;
}

/* CALENDAR DATE HOVER - CRUCIAL FIX FOR LIGHT MODE HOVER */
/* OVERRIDE FOR LIGHT MODE - EXACT SAME BEHAVIOR AS DARK MODE */
html:not(.dark) .rdp-day:hover:not(.rdp-day_disabled):not([aria-selected="true"]),
html:not(.dark) .rdp-button:hover:not(.rdp-day_disabled):not([aria-selected="true"]),
html:not(.dark) [role="grid"] button:hover:not([disabled]):not([aria-selected="true"]),
html:not(.dark) [role="gridcell"] button:hover:not([disabled]):not([aria-selected="true"]),
html:not(.dark) .day:hover:not([disabled]):not([aria-selected="true"]),
html:not(.dark) .calendar button:hover:not([disabled]):not([aria-selected="true"]),
html:not(.dark) .rdp-cell:hover button:not([disabled]):not([aria-selected="true"]),
html:not(.dark) .rdp-table button:hover:not([disabled]):not([aria-selected="true"]),
html:not(.dark) [data-radix-popper-content-wrapper] [role="grid"] button:hover:not([disabled]):not([aria-label="Previous month"]):not([aria-label="Next month"]):not([aria-selected="true"]) {
  background-color: #0284C7 !important;
  color: white !important;
  border: none !important;
  border-radius: 0.5rem !important;
  width: 100% !important;
  height: 100% !important;
  position: relative !important;
  z-index: 1 !important;
  max-width: none !important;
  margin: 0 !important;
  padding: 0 !important;
  outline: none !important;
}

/* Ensure day buttons have proper dimensions */
.rdp-day,
.rdp-button,
[role="grid"] button,
[role="gridcell"] button,
.calendar button {
  width: 100% !important;
  height: 100% !important;
  border-radius: 0.5rem !important;
  padding: 0 !important;
}

/* Light mode calendar button specific fix */
html:not(.dark) .rdp-button {
  width: 100% !important;
  height: 100% !important;
  border-radius: 0.5rem !important;
  transition: background-color 0.15s, color 0.15s !important;
}

/* Force proper hover state */
html:not(.dark) button[class*="rdp-button"]:hover:not([disabled]):not([aria-selected="true"]) {
  background-color: #0284C7 !important;
  color: white !important;
}

/* SELECTED DATE STYLING - ONLY APPLY TO SPECIFICALLY SELECTED DATE */
.rdp-day[aria-selected="true"],
.rdp button[aria-selected="true"],
[role="grid"] button[aria-selected="true"],
[role="gridcell"] button[aria-selected="true"],
html:not(.dark) .rdp-day_selected,
html:not(.dark) .rdp-day_selected:not(.rdp-day_disabled),
html:not(.dark) [role="grid"] button[aria-selected="true"],
html:not(.dark) [role="gridcell"] button[aria-selected="true"],
.dark .rdp-day_selected,
.dark .rdp-day_selected:not(.rdp-day_disabled),
.dark [role="grid"] button[aria-selected="true"],
.dark [role="gridcell"] button[aria-selected="true"] {
  background-color: #0284C7 !important;
  color: white !important;
  font-weight: bold !important;
}

/* Ensure hover effect on selected date is the same */
.rdp-day_selected:hover,
html:not(.dark) .rdp-day_selected:hover,
.dark .rdp-day_selected:hover,
[role="grid"] button[aria-selected="true"]:hover,
html:not(.dark) [role="grid"] button[aria-selected="true"]:hover,
.dark [role="grid"] button[aria-selected="true"]:hover,
[class*="selected"]:hover,
html:not(.dark) [class*="selected"]:hover,
.dark [class*="selected"]:hover {
  background-color: #3a80d2 !important; /* Slightly darker blue on hover */
  color: white !important;
  border: none !important;
  box-shadow: none !important;
  transform: none !important;
}

/* LANGUAGE TOGGLE - ENSURE BLUE BACKGROUND IN LIGHT MODE */
/* Direct inline styling is now used in component */
/* Add additional CSS for redundancy */
.header-toggle-button[aria-expanded="true"],
html:not(.dark) .header-toggle-button[aria-expanded="true"],
button:has(.Globe)[aria-expanded="true"],
html:not(.dark) button:has(.Globe)[aria-expanded="true"] {
  background-color: #0284C7 !important;
  color: white !important;
}

.header-toggle-button[aria-expanded="true"] svg,
html:not(.dark) .header-toggle-button[aria-expanded="true"] svg,
button:has(.Globe)[aria-expanded="true"] svg,
html:not(.dark) button:has(.Globe)[aria-expanded="true"] svg {
  color: white !important;
}

/* Ensure hover effect on selected date is the same */
.rdp-day_selected:hover,
html:not(.dark) .rdp-day_selected:hover,
.dark .rdp-day_selected:hover,
[role="grid"] button[aria-selected="true"]:hover,
html:not(.dark) [role="grid"] button[aria-selected="true"]:hover,
.dark [role="grid"] button[aria-selected="true"]:hover,
[class*="selected"]:hover,
html:not(.dark) [class*="selected"]:hover,
.dark [class*="selected"]:hover {
  background-color: #3a80d2 !important; /* Slightly darker blue on hover */
  color: white !important;
  border: none !important;
  box-shadow: none !important;
  transform: none !important;
}

/* CALENDAR STYLING - MINIMAL SOLUTION */
/* Hover effect for calendar dates - same in both light and dark mode */
.rdp-day:hover:not(.rdp-day_disabled),
.rdp-button:hover:not(.rdp-day_disabled),
.rdp-cell button:hover:not([disabled]),
.rdp-button:not([disabled]).rdp-day_today:hover,
[role="grid"] button:hover:not([disabled]),
[role="gridcell"] button:hover:not([disabled]),
html:not(.dark) .rdp-day:hover:not(.rdp-day_disabled),
html:not(.dark) .rdp-button:hover:not(.rdp-day_disabled),
html:not(.dark) [role="grid"] button:hover:not([disabled]),
html:not(.dark) [role="gridcell"] button:hover:not([disabled]),
.dark .rdp-day:hover:not(.rdp-day_disabled),
.dark .rdp-button:hover:not(.rdp-day_disabled),
.dark [role="grid"] button:hover:not([disabled]),
.dark [role="gridcell"] button:hover:not([disabled]) {
  background-color: #0284C7 !important;
  color: white !important;
}

/* Reset ALL calendar buttons to transparent background FIRST */
.rdp-day,
.rdp-button,
[role="grid"] button,
[role="gridcell"] button {
  background-color: transparent !important;
  color: inherit !important;
  transition: background-color 0.2s ease, color 0.2s ease !important;
}

/* Style for the selected date - same in both light and dark mode */
.rdp-day_selected,
.rdp-day_selected:not(.rdp-day_disabled),
[role="grid"] button[aria-selected="true"],
[role="gridcell"] button[aria-selected="true"],
html:not(.dark) .rdp-day_selected,
html:not(.dark) .rdp-day_selected:not(.rdp-day_disabled),
html:not(.dark) [role="grid"] button[aria-selected="true"],
html:not(.dark) [role="gridcell"] button[aria-selected="true"],
.dark .rdp-day_selected,
.dark .rdp-day_selected:not(.rdp-day_disabled),
.dark [role="grid"] button[aria-selected="true"],
.dark [role="gridcell"] button[aria-selected="true"] {
  background-color: #0284C7 !important;
  color: white !important;
  font-weight: bold !important;
}

/* Today's date styling - subtle highlight, not blue background */
.rdp-day_today:not(.rdp-day_selected):not(.rdp-day_disabled),
html:not(.dark) .rdp-day_today:not(.rdp-day_selected):not(.rdp-day_disabled),
.dark .rdp-day_today:not(.rdp-day_selected):not(.rdp-day_disabled),
[role="grid"] button[aria-current="date"]:not([aria-selected="true"]):not([disabled]),
html:not(.dark) [role="grid"] button[aria-current="date"]:not([aria-selected="true"]):not([disabled]),
.dark [role="grid"] button[aria-current="date"]:not([aria-selected="true"]):not([disabled]) {
  background-color: rgba(74, 144, 226, 0.15) !important;
  font-weight: bold !important;
}

/* Fix for Split Period dropdown - remove blue background from already selected item */
[data-radix-select-item][data-state="checked"],
[data-slot="select-item"][data-state="checked"],
.select-dropdown-item[data-state="checked"] {
  background-color: transparent !important;
  color: inherit !important;
}

/* Ensure check icon remains visible */
[data-radix-select-item][data-state="checked"] svg,
[data-slot="select-item"][data-state="checked"] svg,
.select-dropdown-item[data-state="checked"] svg {
  color: #0284C7 !important;
  opacity: 1 !important;
}

/* Only apply blue background on hover */
[data-radix-select-item]:hover,
[data-slot="select-item"]:hover,
.select-dropdown-item:hover {
  background-color: #0284C7 !important;
  color: white !important;
}

/* ENSURE CONSISTENT THEME TOGGLE AND DROPDOWN BEHAVIOR BETWEEN LIGHT AND DARK MODES */
/* These rules force light mode to behave like dark mode for toggles and dropdowns */

/* 1. Make theme toggle button have same hover and open state in both themes */
.header-toggle-button,
html:not(.dark) .header-toggle-button {
  background-color: transparent;
  transition: background-color 0.2s ease, color 0.2s ease !important;
}

.header-toggle-button:hover,
html:not(.dark) .header-toggle-button:hover {
  background-color: #0284C7 !important;
  color: white !important;
}

.header-toggle-button[data-state="open"],
html:not(.dark) .header-toggle-button[data-state="open"] {
  background-color: #0284C7 !important;
  color: white !important;
}

/* 2. Force all dropdown menus to have same hover effect in both themes */
.header-dropdown-item,
html:not(.dark) .header-dropdown-item,
[data-radix-dropdown-menu-item],
html:not(.dark) [data-radix-dropdown-menu-item],
.select-dropdown-item,
html:not(.dark) .select-dropdown-item {
  cursor: pointer !important;
  transition: background-color 0.2s ease, color 0.2s ease !important;
}

.header-dropdown-item:hover,
html:not(.dark) .header-dropdown-item:hover,
[data-radix-dropdown-menu-item]:hover,
html:not(.dark) [data-radix-dropdown-menu-item]:hover,
.select-dropdown-item:hover,
html:not(.dark) .select-dropdown-item:hover {
  background-color: #0284C7 !important;
  color: white !important;
}

/* 3. Ensure sun/moon theme toggle and language toggle behave the same in light and dark modes */
/* Theme toggle */
button:has(svg.Sun, svg.Moon),
html:not(.dark) button:has(svg.Sun, svg.Moon) {
  transition: background-color 0.2s ease, color 0.2s ease !important;
}

button:has(svg.Sun, svg.Moon)[data-state="open"],
html:not(.dark) button:has(svg.Sun, svg.Moon)[data-state="open"],
button:has(svg.Sun, svg.Moon)[aria-expanded="true"],
html:not(.dark) button:has(svg.Sun, svg.Moon)[aria-expanded="true"] {
  background-color: #0284C7 !important;
  color: white !important;
}

button:has(svg.Sun, svg.Moon)[data-state="open"] svg,
html:not(.dark) button:has(svg.Sun, svg.Moon)[data-state="open"] svg,
button:has(svg.Sun, svg.Moon)[aria-expanded="true"] svg,
html:not(.dark) button:has(svg.Sun, svg.Moon)[aria-expanded="true"] svg {
  color: white !important;
}

/* Language toggle */
button:has(svg.Globe),
html:not(.dark) button:has(svg.Globe) {
  transition: background-color 0.2s ease, color 0.2s ease !important;
}

button:has(svg.Globe)[data-state="open"],
html:not(.dark) button:has(svg.Globe)[data-state="open"],
button:has(svg.Globe)[aria-expanded="true"],
html:not(.dark) button:has(svg.Globe)[aria-expanded="true"] {
  background-color: #0284C7 !important;
  color: white !important;
}

button:has(svg.Globe)[data-state="open"] svg,
html:not(.dark) button:has(svg.Globe)[data-state="open"] svg,
button:has(svg.Globe)[aria-expanded="true"] svg,
html:not(.dark) button:has(svg.Globe)[aria-expanded="true"] svg {
  color: white !important;
}

/* ERROR STYLING - ENSURE CONSISTENT RED COLOR IN BOTH THEMES */
/* Light mode error text */
html:not(.dark) p[class*="error"],
html:not(.dark) span[class*="error"],
html:not(.dark) div[class*="error"],
html:not(.dark) [data-error="true"],
html:not(.dark) [data-invalid="true"] + p,
html:not(.dark) [aria-invalid="true"] + p,
html:not(.dark) [aria-invalid="true"] ~ p,
html:not(.dark) label + div [aria-invalid="true"] ~ p,
html:not(.dark) p:has(+ [aria-invalid="true"]),
html:not(.dark) [aria-invalid="true"] ~ span,
html:not(.dark) .text-destructive, 
html:not(.dark) [class*="text-red"],
html:not(.dark) .error-message {
  color: #ef4444 !important;
}

/* Light mode error icons */
html:not(.dark) [aria-invalid="true"] ~ div svg,
html:not(.dark) [aria-invalid="true"] + div svg,
html:not(.dark) [data-invalid="true"] ~ div svg,
html:not(.dark) [data-error="true"] svg,
html:not(.dark) svg[class*="AlertCircle"],
html:not(.dark) [aria-invalid="true"] > svg,
html:not(.dark) svg.text-destructive {
  color: #ef4444 !important;
}

/* Ensure validation error messages use consistent destructive color */
html:not(.dark) [aria-invalid="true"],
html:not(.dark) [data-invalid="true"] {
  border-color: #ef4444 !important;
}

/* Ensure "Amount is required" and "Start date is required" text in light mode is red */
html:not(.dark) p:has(span.text-destructive),
html:not(.dark) div > p.text-destructive,
html:not(.dark) p.text-destructive,
html:not(.dark) p.text-red-500 {
  color: #ef4444 !important;
}

/* Target specific error messages we see in the screenshots */
html:not(.dark) p:contains("Amount is required"),
html:not(.dark) p:contains("Start date is required") {
  color: #ef4444 !important;
}

/* FORCE ERROR TEXT COLORS FOR SPECIFIC VALIDATION MESSAGES */
/* Target validation error messages seen in screenshots */
html:not(.dark) div + p:contains("Amount is required"),
html:not(.dark) div + p:contains("Start date is required"),
html:not(.dark) form p:contains("Amount is required"),
html:not(.dark) form p:contains("Start date is required"),
html:not(.dark) input + p:contains("Amount is required"),
html:not(.dark) input + p:contains("Start date is required"),
html:not(.dark) input ~ p:contains("Amount is required"),
html:not(.dark) input ~ p:contains("Start date is required") {
  color: #ef4444 !important;
}

/* Extremely specific selectors targeting the exact validation messages in screenshots */
html:not(.dark) p[id*="react-aria"][class*="validation"],
html:not(.dark) p[id*="form-validation"],
html:not(.dark) p[class*="validation"],
html:not(.dark) p[class*="error"],
html:not(.dark) input ~ p[class*="text-destructive"],
html:not(.dark) input ~ p[class*="text-red"],
html:not(.dark) input + p[class*="text-destructive"],
html:not(.dark) input + p[class*="text-red"] {
  color: #ef4444 !important;
}

1:"$Sreact.fragment"
3:I[1551,["6874","static/chunks/6874-ac10fa00448d5540.js","6734","static/chunks/6734-0307107f22a0838a.js","651","static/chunks/651-d3560f1688c49ffd.js","3433","static/chunks/3433-827f9e1f9ba6e6cb.js","3316","static/chunks/3316-32cfa1602a6006a6.js","6781","static/chunks/6781-8dedf0faec2f350a.js","7177","static/chunks/app/layout-8aa061fac11cab11.js"],"default"]
4:I[87555,[],""]
5:I[31295,[],""]
6:I[48782,["6874","static/chunks/6874-ac10fa00448d5540.js","4345","static/chunks/app/not-found-dd8aed575b5b66ab.js"],"default"]
7:I[90894,[],"ClientPageRoot"]
8:I[55282,["6874","static/chunks/6874-ac10fa00448d5540.js","6781","static/chunks/6781-8dedf0faec2f350a.js","3264","static/chunks/app/en/app/page-15a00d3474e482c8.js"],"default"]
b:I[59665,[],"MetadataBoundary"]
d:I[59665,[],"OutletBoundary"]
10:I[74911,[],"AsyncMetadataOutlet"]
12:I[59665,[],"ViewportBoundary"]
14:I[26614,[],""]
:HL["/_next/static/css/22bc90a152c47044.css","style"]
:HL["/_next/static/css/c0f2b38205c98c82.css","style"]
2:T1566,
              (function() {
                // Configuration
                const siteUrl = 'https://billsplitter.siempi.ch';
                const supportedLanguages = ['en', 'de'];
                const defaultLanguage = 'en';
                
                function setupHreflangTags() {
                  // First remove any existing hreflang/canonical tags to avoid duplicates
                  removeExistingTags();
                  
                  // Get current path and determine page type
                  const { pathname } = window.location;
                  const pathSegments = pathname.split('/').filter(Boolean);
                  
                  // Determine current language from URL path
                  const currentLang = getLanguageFromPath(pathSegments);
                  
                  // Get clean path without language prefix for generating alternates
                  const pathWithoutLang = getPathWithoutLanguage(pathSegments, currentLang);
                  
                  // Handle root page specially (/), as it redirects to language pages
                  if (pathname === '/' || pathname === '') {
                    // Root page should redirect to default language, so we don't add hreflang tags
                    return;
                  }
                  
                  // For language pages, we set the correct hreflang implementation
                  // Set canonical to current URL (eliminate canonicalization conflicts)
                  addCanonicalTag(siteUrl + pathname);
                  
                  // Add self-reference in hreflang
                  addHreflangTag(currentLang, siteUrl + pathname);
                  
                  // Add references to other language versions
                  supportedLanguages.forEach(lang => {
                    if (lang !== currentLang) {
                      const alternateUrl = buildAlternateUrl(lang, pathWithoutLang);
                      addHreflangTag(lang, alternateUrl);
                    }
                  });
                  
                  // Add x-default (points to default language version)
                  const xDefaultUrl = buildAlternateUrl(defaultLanguage, pathWithoutLang);
                  addHreflangTag('x-default', xDefaultUrl);
                }
                
                function getLanguageFromPath(pathSegments) {
                  // Extract language from path or use default
                  const firstSegment = pathSegments[0] || '';
                  return supportedLanguages.includes(firstSegment) ? firstSegment : defaultLanguage;
                }
                
                function getPathWithoutLanguage(pathSegments, currentLang) {
                  // If first segment is a language code, remove it to get the rest of the path
                  if (pathSegments.length > 0 && pathSegments[0] === currentLang) {
                    return '/' + pathSegments.slice(1).join('/');
                  }
                  return '/' + pathSegments.join('/');
                }
                
                function buildAlternateUrl(lang, path) {
                  // Handle paths correctly - avoid double slashes
                  if (path === '/') {
                    return siteUrl + '/' + lang + '/';
                  }
                  return siteUrl + '/' + lang + path;
                }
                
                function removeExistingTags() {
                  // Instead of removing tags, which can conflict with React,
                  // mark existing ones as disabled so we can replace them
                  document.querySelectorAll('link[rel="alternate"][hreflang], link[rel="canonical"]')
                    .forEach(el => {
                      if (el.parentNode) {
                        // Mark as disabled instead of removing
                        el.setAttribute('disabled', 'true');
                        // Move out of normal flow
                        el.setAttribute('data-replaced', 'true');
                      }
                    });
                }
                
                function addHreflangTag(lang, url) {
                  const link = document.createElement('link');
                  link.rel = 'alternate';
                  link.hreflang = lang;
                  link.href = url;
                  document.head.appendChild(link);
                }
                
                function addCanonicalTag(url) {
                  const link = document.createElement('link');
                  link.rel = 'canonical';
                  link.href = url;
                  document.head.appendChild(link);
                }
                
                // Execute on page load and navigation
                if (document.readyState === 'loading') {
                  document.addEventListener('DOMContentLoaded', setupHreflangTags);
                } else {
                  setupHreflangTags();
                }
                
                // Handle SPA navigation
                window.addEventListener('popstate', setupHreflangTags);
                
                // Also handle programmatic navigation via history API
                const originalPushState = history.pushState;
                history.pushState = function() {
                  originalPushState.apply(this, arguments);
                  setupHreflangTags();
                };
              })();
            0:{"P":null,"b":"r9WwZRtUoH_7VmihkE0JS","p":"","c":["","en","app",""],"i":false,"f":[[["",{"children":["en",{"children":["app",{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/22bc90a152c47044.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/c0f2b38205c98c82.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"className":"scroll-smooth","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"httpEquiv":"Content-Security-Policy","content":"default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' ws: localhost:* http://localhost:*; worker-src 'self' blob:; frame-src 'self'; manifest-src 'self'; object-src 'none'; base-uri 'self'; form-action 'self';"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"$2"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              (function() {\n                // On page load or when changing themes, best to add inline in `head` to avoid FOUC\n                if (localStorage.getItem('theme') === 'dark' || \n                   (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n                  document.documentElement.classList.add('dark');\n                  document.documentElement.style.colorScheme = 'dark';\n                } else {\n                  document.documentElement.classList.remove('dark');\n                  document.documentElement.style.colorScheme = 'light';\n                }\n              })();\n            "}}]]}],["$","body",null,{"className":"__className_22ceb1 bg-background antialiased","suppressHydrationWarning":true,"children":["$","$L3",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L6",null,{}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]]}],{"children":["en",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["app",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","$L7",null,{"Component":"$8","searchParams":{},"params":{},"promises":["$@9","$@a"]}],["$","$Lb",null,{"children":"$Lc"}],null,["$","$Ld",null,{"children":["$Le","$Lf",["$","$L10",null,{"promise":"$@11"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","qWYCtgYHlAciqQ0pdhgQZ",{"children":[["$","$L12",null,{"children":"$L13"}],null]}],null]}],false]],"m":"$undefined","G":["$14","$undefined"],"s":false,"S":true}
15:"$Sreact.suspense"
16:I[74911,[],"AsyncMetadata"]
9:{}
a:{}
c:["$","$15",null,{"fallback":null,"children":["$","$L16",null,{"promise":"$@17"}]}]
f:null
13:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
e:null
17:{"metadata":[["$","title","0",{"children":"Calculator | BillSplitter"}],["$","meta","1",{"name":"description","content":"Use the BillSplitter tool to upload and split invoices. Free for private use."}],["$","meta","2",{"name":"robots","content":"index, follow"}],["$","meta","3",{"name":"googlebot","content":"index, follow"}],["$","link","4",{"rel":"canonical","href":"https://billsplitter.siempi.ch/en/app/"}],["$","link","5",{"rel":"alternate","hrefLang":"en","href":"https://billsplitter.siempi.ch/en/app/"}],["$","link","6",{"rel":"alternate","hrefLang":"de","href":"https://billsplitter.siempi.ch/de/app/"}],["$","link","7",{"rel":"alternate","hrefLang":"x-default","href":"https://billsplitter.siempi.ch/en/app/"}],["$","link","8",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"60x60"}]],"error":null,"digest":"$undefined"}
11:{"metadata":"$17:metadata","error":null,"digest":"$undefined"}

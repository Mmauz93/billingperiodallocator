1:"$Sreact.fragment"
3:I[54046,["6635","static/chunks/6635-c6ff284a4bc77d89.js","6874","static/chunks/6874-ac10fa00448d5540.js","2940","static/chunks/2940-90e807814f743005.js","651","static/chunks/651-50af9e0544d03bb7.js","197","static/chunks/197-42ea1eb3a4d1b8f0.js","629","static/chunks/629-ba7fb0a43fab8bfa.js","6781","static/chunks/6781-8abf24e17907dc55.js","7177","static/chunks/app/layout-34c7fee9de7410c7.js"],"default"]
4:I[87555,[],""]
5:I[31295,[],""]
6:I[48782,["6874","static/chunks/6874-ac10fa00448d5540.js","4345","static/chunks/app/not-found-dd8aed575b5b66ab.js"],"default"]
7:I[69243,["6635","static/chunks/6635-c6ff284a4bc77d89.js","6874","static/chunks/6874-ac10fa00448d5540.js","2940","static/chunks/2940-90e807814f743005.js","651","static/chunks/651-50af9e0544d03bb7.js","197","static/chunks/197-42ea1eb3a4d1b8f0.js","629","static/chunks/629-ba7fb0a43fab8bfa.js","6781","static/chunks/6781-8abf24e17907dc55.js","7177","static/chunks/app/layout-34c7fee9de7410c7.js"],""]
8:I[90894,[],"ClientPageRoot"]
9:I[50842,["6635","static/chunks/6635-c6ff284a4bc77d89.js","598","static/chunks/598-b2a70ce1a5cf3f14.js","2940","static/chunks/2940-90e807814f743005.js","651","static/chunks/651-50af9e0544d03bb7.js","9856","static/chunks/9856-b49755d4d49642b4.js","6781","static/chunks/6781-8abf24e17907dc55.js","3792","static/chunks/app/de/page-03648ba7ac3bb2d3.js"],"default"]
c:I[59665,[],"MetadataBoundary"]
e:I[59665,[],"OutletBoundary"]
11:I[74911,[],"AsyncMetadataOutlet"]
13:I[59665,[],"ViewportBoundary"]
15:I[26614,[],""]
:HL["/_next/static/css/c0fa4ec23e40af53.css","style"]
:HL["/_next/static/css/c0f2b38205c98c82.css","style"]
2:T1566,
              (function() {
                // Configuration
                const siteUrl = 'https://billsplitter.siempi.ch';
                const supportedLanguages = ['en', 'de'];
                const defaultLanguage = 'en';
                
                function setupHreflangTags() {
                  // First remove any existing hreflang/canonical tags to avoid duplicates
                  removeExistingTags();
                  
                  // Get current path and determine page type
                  const { pathname } = window.location;
                  const pathSegments = pathname.split('/').filter(Boolean);
                  
                  // Determine current language from URL path
                  const currentLang = getLanguageFromPath(pathSegments);
                  
                  // Get clean path without language prefix for generating alternates
                  const pathWithoutLang = getPathWithoutLanguage(pathSegments, currentLang);
                  
                  // Handle root page specially (/), as it redirects to language pages
                  if (pathname === '/' || pathname === '') {
                    // Root page should redirect to default language, so we don't add hreflang tags
                    return;
                  }
                  
                  // For language pages, we set the correct hreflang implementation
                  // Set canonical to current URL (eliminate canonicalization conflicts)
                  addCanonicalTag(siteUrl + pathname);
                  
                  // Add self-reference in hreflang
                  addHreflangTag(currentLang, siteUrl + pathname);
                  
                  // Add references to other language versions
                  supportedLanguages.forEach(lang => {
                    if (lang !== currentLang) {
                      const alternateUrl = buildAlternateUrl(lang, pathWithoutLang);
                      addHreflangTag(lang, alternateUrl);
                    }
                  });
                  
                  // Add x-default (points to default language version)
                  const xDefaultUrl = buildAlternateUrl(defaultLanguage, pathWithoutLang);
                  addHreflangTag('x-default', xDefaultUrl);
                }
                
                function getLanguageFromPath(pathSegments) {
                  // Extract language from path or use default
                  const firstSegment = pathSegments[0] || '';
                  return supportedLanguages.includes(firstSegment) ? firstSegment : defaultLanguage;
                }
                
                function getPathWithoutLanguage(pathSegments, currentLang) {
                  // If first segment is a language code, remove it to get the rest of the path
                  if (pathSegments.length > 0 && pathSegments[0] === currentLang) {
                    return '/' + pathSegments.slice(1).join('/');
                  }
                  return '/' + pathSegments.join('/');
                }
                
                function buildAlternateUrl(lang, path) {
                  // Handle paths correctly - avoid double slashes
                  if (path === '/') {
                    return siteUrl + '/' + lang + '/';
                  }
                  return siteUrl + '/' + lang + path;
                }
                
                function removeExistingTags() {
                  // Instead of removing tags, which can conflict with React,
                  // mark existing ones as disabled so we can replace them
                  document.querySelectorAll('link[rel="alternate"][hreflang], link[rel="canonical"]')
                    .forEach(el => {
                      if (el.parentNode) {
                        // Mark as disabled instead of removing
                        el.setAttribute('disabled', 'true');
                        // Move out of normal flow
                        el.setAttribute('data-replaced', 'true');
                      }
                    });
                }
                
                function addHreflangTag(lang, url) {
                  const link = document.createElement('link');
                  link.rel = 'alternate';
                  link.hreflang = lang;
                  link.href = url;
                  document.head.appendChild(link);
                }
                
                function addCanonicalTag(url) {
                  const link = document.createElement('link');
                  link.rel = 'canonical';
                  link.href = url;
                  document.head.appendChild(link);
                }
                
                // Execute on page load and navigation
                if (document.readyState === 'loading') {
                  document.addEventListener('DOMContentLoaded', setupHreflangTags);
                } else {
                  setupHreflangTags();
                }
                
                // Handle SPA navigation
                window.addEventListener('popstate', setupHreflangTags);
                
                // Also handle programmatic navigation via history API
                const originalPushState = history.pushState;
                history.pushState = function() {
                  originalPushState.apply(this, arguments);
                  setupHreflangTags();
                };
              })();
            0:{"P":null,"b":"Yle_eg67gfUjcseqF3fwj","p":"","c":["","de",""],"i":false,"f":[[["",{"children":["de",{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/c0fa4ec23e40af53.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/c0f2b38205c98c82.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"className":"scroll-smooth","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","link",null,{"rel":"icon","href":"/favicon.ico"}],["$","script",null,{"id":"defer-non-critical-css","dangerouslySetInnerHTML":{"__html":"\n              (function() {\n                // Target stylesheets loaded by Next.js from the /_next/static/css/ directory\n                const mainStylesheets = document.querySelectorAll('head > link[rel=\"stylesheet\"][href^=\"/_next/static/css/\"]');\n                mainStylesheets.forEach(link => {\n                  // Apply deferral to all stylesheets matched by the selector\n                  // The original check for data-n-g or data-n-href might have been too restrictive\n                  link.rel = 'preload';\n                  link.as = 'style';\n                  link.onload = () => {\n                    link.onload = null;\n                    link.rel = 'stylesheet';\n                  };\n                });\n              })();\n            "}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"$2"}}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              (function() {\n                // On page load or when changing themes, best to add inline in `head` to avoid FOUC\n                if (localStorage.getItem('theme') === 'dark' || \n                   (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\n                  document.documentElement.classList.add('dark');\n                  document.documentElement.style.colorScheme = 'dark';\n                } else {\n                  document.documentElement.classList.remove('dark');\n                  document.documentElement.style.colorScheme = 'light';\n                }\n              })();\n            "}}]]}],["$","body",null,{"className":"min-h-screen bg-background font-sans antialiased __className_22ceb1","children":[["$","$L3",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L6",null,{}],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}],["$","$L7",null,{"id":"privacybee-widget","src":"https://app.privacybee.io/widget.js","strategy":"afterInteractive"}]]}]]}]]}],{"children":["de",["$","$1","c",{"children":[null,["$","$L4",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","$L8",null,{"Component":"$9","searchParams":{},"params":{},"promises":["$@a","$@b"]}],["$","$Lc",null,{"children":"$Ld"}],null,["$","$Le",null,{"children":["$Lf","$L10",["$","$L11",null,{"promise":"$@12"}]]}]]}],{},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","hV9gS2lSZ2FxadYNByJzV",{"children":[["$","$L13",null,{"children":"$L14"}],null]}],null]}],false]],"m":"$undefined","G":["$15","$undefined"],"s":false,"S":true}
16:"$Sreact.suspense"
17:I[74911,[],"AsyncMetadata"]
a:{}
b:{}
d:["$","$16",null,{"fallback":null,"children":["$","$L17",null,{"promise":"$@18"}]}]
10:null
14:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
f:null
18:{"metadata":[["$","title","0",{"children":"BillSplitter – Rechnungen auf Geschäftsjahre aufteilen | BillSplitter"}],["$","meta","1",{"name":"description","content":"Teilen Sie Rechnungen einfach auf Geschäftsjahre auf. Splitten Sie Ihre Rechnungen in monatliche, vierteljährliche und jährliche Perioden gemäß IFRS 15, HGB und OR."}],["$","meta","2",{"name":"robots","content":"index, follow"}],["$","meta","3",{"name":"googlebot","content":"index, follow"}],["$","link","4",{"rel":"canonical","href":"https://billsplitter.siempi.ch/de/"}],["$","link","5",{"rel":"alternate","hrefLang":"en","href":"https://billsplitter.siempi.ch/en/"}],["$","link","6",{"rel":"alternate","hrefLang":"de","href":"https://billsplitter.siempi.ch/de/"}],["$","link","7",{"rel":"alternate","hrefLang":"x-default","href":"https://billsplitter.siempi.ch/en/"}],["$","link","8",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"60x60"}]],"error":null,"digest":"$undefined"}
12:{"metadata":"$18:metadata","error":null,"digest":"$undefined"}

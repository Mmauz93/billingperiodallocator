{"version":3,"file":"static/chunks/1694.1320e56937409b8e.js","mappings":"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","sources":["webpack://_N_E/./src/lib/calculations.ts","webpack://_N_E/./src/components/ui/popover.tsx","webpack://_N_E/./src/components/ui/calendar.tsx","webpack://_N_E/./src/components/ui/switch.tsx","webpack://_N_E/./src/components/invoice-form.tsx"],"sourcesContent":["// Add ESLint disable comments for unused imports that are kept for future use\r\nimport {\r\n  addDays,\r\n  differenceInDays,\r\n  endOfMonth,\r\n  endOfQuarter,\r\n  endOfYear,\r\n  format,\r\n  getQuarter,\r\n  getYear,\r\n  startOfDay,\r\n} from \"date-fns\";\r\n\r\n// Helper function for rounding to a specific number of decimal places\r\nfunction round(value: number, decimals: number): number {\r\n  return Number(Math.round(Number(value + \"e\" + decimals)) + \"e-\" + decimals);\r\n}\r\n\r\n// Updated Input: Accepts an array of amounts and split period type\r\nexport interface CalculationInput {\r\n  startDate: Date;\r\n  endDate: Date;\r\n  includeEndDate: boolean;\r\n  amounts: number[]; // Array of amounts to be summed and split\r\n  splitPeriod?: 'yearly' | 'quarterly' | 'monthly'; // Replaced daily with monthly\r\n}\r\n\r\n// Represents the split portion of a SINGLE original amount for a specific period (year, quarter, or day)\r\ninterface SingleAmountPeriodSplit {\r\n  splitAmount: number; // Rounded split portion for this period\r\n}\r\n\r\n// Represents the split results for ONE original input amount across all periods\r\nexport interface AmountSplitResult {\r\n  originalAmount: number;\r\n  adjustedTotalAmount: number; // Sum of splits for this amount after adjustment\r\n  splits: { [periodIdentifier: string]: SingleAmountPeriodSplit }; // Map period identifier (YYYY, YYYY-Qn, YYYY-MM) to its split portion\r\n}\r\n\r\n// Represents the aggregated results per period across ALL input amounts\r\nexport interface AggregatedPeriodSplit {\r\n  periodIdentifier: string; // YYYY, YYYY-Qn, or YYYY-MM\r\n  daysInPeriod: number;\r\n  proportion: number;\r\n  totalSplitAmount: number; // Sum of all individual amount splits for this period\r\n}\r\n\r\n// Updated CalculationResult structure\r\nexport interface CalculationResult {\r\n  totalDays: number;\r\n  originalTotalAmount: number; // Sum of all input amounts\r\n  adjustedTotalAmount: number; // Sum of all adjusted split amounts\r\n  resultsPerAmount: AmountSplitResult[]; // Detailed results for each input amount\r\n  aggregatedSplits: AggregatedPeriodSplit[]; // Aggregated results per period\r\n  calculationSteps: CalculationStepDetails;\r\n  splitPeriodUsed: 'yearly' | 'quarterly' | 'monthly'; // Replaced daily with monthly\r\n}\r\n\r\n// --- Helper for structuring calculation steps ---\r\nexport interface CalculationStepDetails {\r\n  totalDuration: {\r\n    days: number;\r\n    start: string;\r\n    end: string;\r\n    included: boolean;\r\n  };\r\n  periodSegments: { periodIdentifier: string; days: number; proportion: number }[]; // Renamed from yearSegments\r\n  amountCalculations: {\r\n    originalAmount: number;\r\n    periodSplits: { // Renamed from yearSplits\r\n      periodIdentifier: string;\r\n      rawSplit: number;\r\n      roundedSplit: number;\r\n      adjustment: number;\r\n    }[];\r\n    adjustmentAppliedToPeriod?: string; // Renamed from adjustmentAppliedToYear\r\n    discrepancy: number;\r\n    finalSum: number;\r\n  }[];\r\n  error?: string;\r\n}\r\n// --- End Helper ---\r\n\r\n// Helper function to get the end of the next period based on the type\r\nfunction getNextPeriodBoundary(currentDate: Date, periodType: 'yearly' | 'quarterly' | 'monthly'): Date {\r\n  switch (periodType) {\r\n    case 'monthly':\r\n      return startOfDay(addDays(endOfMonth(currentDate), 1));\r\n    case 'quarterly':\r\n      return startOfDay(addDays(endOfQuarter(currentDate), 1));\r\n    case 'yearly':\r\n    default:\r\n      return startOfDay(addDays(endOfYear(currentDate), 1));\r\n  }\r\n}\r\n\r\n// Helper function to generate a period identifier string\r\nfunction getPeriodIdentifier(date: Date, periodType: 'yearly' | 'quarterly' | 'monthly'): string {\r\n  const year = getYear(date);\r\n  switch (periodType) {\r\n    case 'monthly':\r\n      return format(date, 'yyyy-MM');\r\n    case 'quarterly':\r\n      const quarter = getQuarter(date);\r\n      return `${year}-Q${quarter}`;\r\n    case 'yearly':\r\n    default:\r\n      return year.toString();\r\n  }\r\n}\r\n\r\n/**\r\n * Calculates the proportional split of invoice amounts across specified periods.\r\n * Applies rounding and adjustment for precision.\r\n */\r\nexport function calculateInvoiceSplit(\r\n  input: CalculationInput,\r\n): CalculationResult {\r\n  const splitPeriod = input.splitPeriod || 'yearly'; // Default to yearly if not provided\r\n  const calcSteps: CalculationStepDetails = {\r\n    totalDuration: {\r\n      days: 0,\r\n      start: \"\",\r\n      end: \"\",\r\n      included: input.includeEndDate,\r\n    },\r\n    periodSegments: [], // Renamed\r\n    amountCalculations: [],\r\n  };\r\n\r\n  if (!input.amounts || input.amounts.length === 0) {\r\n    // Return structure indicating error\r\n    return {\r\n      totalDays: 0,\r\n      originalTotalAmount: 0,\r\n      adjustedTotalAmount: 0,\r\n      resultsPerAmount: [],\r\n      aggregatedSplits: [],\r\n      calculationSteps: {\r\n        ...calcSteps,\r\n        error: \"At least one amount is required.\",\r\n      },\r\n      splitPeriodUsed: splitPeriod,\r\n    };\r\n  }\r\n  if (input.amounts.some((a) => isNaN(a) || a === null)) {\r\n    return {\r\n      totalDays: 0,\r\n      originalTotalAmount: 0,\r\n      adjustedTotalAmount: 0,\r\n      resultsPerAmount: [],\r\n      aggregatedSplits: [],\r\n      calculationSteps: {\r\n        ...calcSteps,\r\n        error: \"Invalid non-numeric amount provided.\",\r\n      },\r\n      splitPeriodUsed: splitPeriod,\r\n    };\r\n  }\r\n\r\n  const originalTotalAmount = round(\r\n    input.amounts.reduce((sum, a) => sum + a, 0),\r\n    2,\r\n  );\r\n\r\n  const cleanStartDate = startOfDay(input.startDate);\r\n  let cleanEffectiveEndDate = startOfDay(input.endDate);\r\n  if (input.includeEndDate) {\r\n    cleanEffectiveEndDate = addDays(cleanEffectiveEndDate, 1);\r\n  }\r\n  calcSteps.totalDuration.start = format(cleanStartDate, \"yyyy-MM-dd\");\r\n  // Use original end date for display if included, otherwise the day before effective end\r\n  calcSteps.totalDuration.end = format(input.includeEndDate ? input.endDate : addDays(cleanEffectiveEndDate, -1), \"yyyy-MM-dd\"); \r\n\r\n  if (cleanStartDate >= cleanEffectiveEndDate) {\r\n    return {\r\n      totalDays: 0,\r\n      originalTotalAmount,\r\n      adjustedTotalAmount: 0,\r\n      resultsPerAmount: [],\r\n      aggregatedSplits: [],\r\n      calculationSteps: {\r\n        ...calcSteps,\r\n        error: \"Start date must be before the effective end date.\",\r\n      },\r\n      splitPeriodUsed: splitPeriod,\r\n    };\r\n  }\r\n\r\n  const totalDurationDays = differenceInDays(\r\n    cleanEffectiveEndDate,\r\n    cleanStartDate,\r\n  );\r\n  calcSteps.totalDuration.days = totalDurationDays;\r\n\r\n  if (totalDurationDays <= 0) {\r\n    return {\r\n      totalDays: 0,\r\n      originalTotalAmount,\r\n      adjustedTotalAmount: 0,\r\n      resultsPerAmount: [],\r\n      aggregatedSplits: [],\r\n      calculationSteps: {\r\n        ...calcSteps,\r\n        error: \"Calculated duration is zero or negative.\",\r\n      },\r\n      splitPeriodUsed: splitPeriod,\r\n    };\r\n  }\r\n\r\n  // --- Calculate days and proportions per period segment ---\r\n  const periodSegmentMap: {\r\n    [periodIdentifier: string]: { days: number; proportion: number };\r\n  } = {};\r\n  let currentDate = cleanStartDate;\r\n  while (currentDate < cleanEffectiveEndDate) {\r\n    const periodIdentifier = getPeriodIdentifier(currentDate, splitPeriod);\r\n    const nextPeriodBoundary = getNextPeriodBoundary(currentDate, splitPeriod);\r\n    const segmentEndDate =\r\n      cleanEffectiveEndDate < nextPeriodBoundary\r\n        ? cleanEffectiveEndDate\r\n        : nextPeriodBoundary;\r\n    const daysInSegment = differenceInDays(segmentEndDate, currentDate);\r\n\r\n    if (daysInSegment > 0) {\r\n      const proportion = daysInSegment / totalDurationDays;\r\n      if (!periodSegmentMap[periodIdentifier]) {\r\n        periodSegmentMap[periodIdentifier] = { days: 0, proportion: 0 };\r\n      }\r\n      periodSegmentMap[periodIdentifier].days += daysInSegment;\r\n      periodSegmentMap[periodIdentifier].proportion += proportion;\r\n    }\r\n    currentDate = segmentEndDate;\r\n  }\r\n  // Store period segment details for calculation steps display\r\n  calcSteps.periodSegments = Object.entries(periodSegmentMap)\r\n    .map(([identifier, data]) => ({\r\n      periodIdentifier: identifier,\r\n      days: data.days,\r\n      proportion: data.proportion,\r\n    }))\r\n    // Custom sort needed: Year > Quarter > Month\r\n    .sort((a, b) => {\r\n        // Sort YYYY, YYYY-Qn, YYYY-MM correctly\r\n        return a.periodIdentifier.localeCompare(b.periodIdentifier);\r\n    });\r\n  // --- End Segment Calculation ---\r\n\r\n  const resultsPerAmount: AmountSplitResult[] = [];\r\n\r\n  // --- Process each amount individually ---\r\n  for (const amount of input.amounts) {\r\n    const amountCalcStep: CalculationStepDetails[\"amountCalculations\"][0] = {\r\n      originalAmount: amount,\r\n      periodSplits: [], // Renamed\r\n      discrepancy: 0,\r\n      finalSum: 0,\r\n    };\r\n\r\n    const rawSplits: { periodIdentifier: string; rawSplit: number }[] = [];\r\n    for (const identifier in periodSegmentMap) {\r\n      const segment = periodSegmentMap[identifier];\r\n      const rawSplitAmount = amount * segment.proportion;\r\n      rawSplits.push({ periodIdentifier: identifier, rawSplit: rawSplitAmount });\r\n      amountCalcStep.periodSplits.push({\r\n        periodIdentifier: identifier,\r\n        rawSplit: rawSplitAmount,\r\n        roundedSplit: 0,\r\n        adjustment: 0,\r\n      }); // Initialize step details\r\n    }\r\n\r\n    // Round initial splits for this amount\r\n    const roundedSplits = rawSplits.map((split) => ({\r\n      ...split,\r\n      roundedSplit: round(split.rawSplit, 2),\r\n    }));\r\n\r\n    // Update steps with rounded values\r\n    roundedSplits.forEach((rs) => {\r\n      const step = amountCalcStep.periodSplits.find((s) => s.periodIdentifier === rs.periodIdentifier);\r\n      if (step) step.roundedSplit = rs.roundedSplit;\r\n    });\r\n\r\n    // Calculate discrepancy for this amount\r\n    const currentTotal = round(\r\n      roundedSplits.reduce((sum, s) => sum + s.roundedSplit, 0),\r\n      2,\r\n    );\r\n    const discrepancy = round(amount - currentTotal, 2);\r\n    amountCalcStep.discrepancy = discrepancy;\r\n\r\n    // Apply rounding adjustment to the period with the largest raw amount\r\n    if (discrepancy !== 0 && roundedSplits.length > 0) {\r\n      // Find the period with the max *raw* split amount to minimize impact of rounding intermediate values\r\n      const periodToAdjustDetails = rawSplits.reduce((max, current) => \r\n         Math.abs(current.rawSplit) > Math.abs(max.rawSplit) ? current : max\r\n      );\r\n      const periodIdentifierToAdjust = periodToAdjustDetails.periodIdentifier;\r\n\r\n      // Find the corresponding entry in roundedSplits to apply the adjustment\r\n      const splitToAdjust = roundedSplits.find(s => s.periodIdentifier === periodIdentifierToAdjust);\r\n      if(splitToAdjust) {\r\n        splitToAdjust.roundedSplit = round(splitToAdjust.roundedSplit + discrepancy, 2);\r\n        \r\n        // Update calculation steps with the adjustment detail\r\n        const step = amountCalcStep.periodSplits.find(s => s.periodIdentifier === periodIdentifierToAdjust);\r\n        if (step) {\r\n            step.roundedSplit = splitToAdjust.roundedSplit; // Ensure step reflects adjusted rounded value\r\n            step.adjustment = discrepancy;\r\n        }\r\n        amountCalcStep.adjustmentAppliedToPeriod = periodIdentifierToAdjust;\r\n      } else {\r\n        // Fallback if somehow the period wasn't found (shouldn't happen)\r\n        console.warn(\"Could not find period to apply adjustment, discrepancy unapplied for this amount.\")\r\n      }\r\n    }\r\n\r\n    // Store final splits for this amount\r\n    const finalAmountSplits: { [periodIdentifier: string]: SingleAmountPeriodSplit } = {};\r\n    roundedSplits.forEach((s) => {\r\n      finalAmountSplits[s.periodIdentifier] = { splitAmount: s.roundedSplit };\r\n    });\r\n\r\n    const adjustedTotalForThisAmount = round(\r\n      roundedSplits.reduce((sum, s) => sum + s.roundedSplit, 0),\r\n      2,\r\n    );\r\n    amountCalcStep.finalSum = adjustedTotalForThisAmount;\r\n\r\n    resultsPerAmount.push({\r\n      originalAmount: amount,\r\n      adjustedTotalAmount: adjustedTotalForThisAmount,\r\n      splits: finalAmountSplits,\r\n    });\r\n    calcSteps.amountCalculations.push(amountCalcStep);\r\n  }\r\n  // --- End Amount Processing ---\r\n\r\n  // --- Aggregate results per period ---\r\n  const aggregatedSplits: AggregatedPeriodSplit[] = Object.entries(periodSegmentMap)\r\n    .map(([identifier, segment]) => {\r\n      const periodIdentifier = identifier;\r\n      let totalSplitForPeriod = 0;\r\n      resultsPerAmount.forEach((amountResult) => {\r\n        totalSplitForPeriod += amountResult.splits[periodIdentifier]?.splitAmount || 0;\r\n      });\r\n      return {\r\n        periodIdentifier: periodIdentifier,\r\n        daysInPeriod: segment.days,\r\n        proportion: segment.proportion,\r\n        totalSplitAmount: round(totalSplitForPeriod, 2),\r\n      };\r\n    })\r\n    // Use the same sort as periodSegments\r\n    .sort((a, b) => a.periodIdentifier.localeCompare(b.periodIdentifier));\r\n  // --- End Aggregation ---\r\n\r\n  const finalAdjustedTotalAmount = round(\r\n    aggregatedSplits.reduce((sum, s) => sum + s.totalSplitAmount, 0),\r\n    2,\r\n  );\r\n\r\n  // Final sanity check: does adjusted total match original total?\r\n  const finalDiscrepancy = round(originalTotalAmount - finalAdjustedTotalAmount, 2);\r\n  if (Math.abs(finalDiscrepancy) > 0.01 * input.amounts.length) { // Allow small tolerance per amount\r\n       console.warn(`Potential rounding discrepancy: Original ${originalTotalAmount}, Adjusted ${finalAdjustedTotalAmount}, Diff ${finalDiscrepancy}`);\r\n       // Optionally add a warning to the results/steps if needed\r\n  }\r\n\r\n  return {\r\n    totalDays: totalDurationDays,\r\n    originalTotalAmount: originalTotalAmount,\r\n    adjustedTotalAmount: finalAdjustedTotalAmount,\r\n    resultsPerAmount: resultsPerAmount,\r\n    aggregatedSplits: aggregatedSplits,\r\n    calculationSteps: calcSteps,\r\n    splitPeriodUsed: splitPeriod,\r\n  };\r\n}\r\n","\"use client\";\n\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  const [isMounted, setIsMounted] = React.useState(false);\n  const isMountedRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    const mountTimer = setTimeout(() => {\n      if (isMountedRef.current) {\n        setIsMounted(true);\n      }\n    }, 10); // Small delay for mount animation\n\n    return () => {\n      isMountedRef.current = false;\n      clearTimeout(mountTimer);\n      // Immediately set isMounted to false to trigger clean removal\n      setIsMounted(false);\n      \n      // Make sure we clean up any portals that might still be in the DOM\n      if (typeof document !== 'undefined') {\n        // Give React a chance to unmount naturally before we force cleanup\n        setTimeout(() => {\n          // Find any orphaned popover elements and remove them\n          document.querySelectorAll('[data-radix-popover-content]').forEach(element => {\n            try {\n              if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n              }\n            } catch /* (error) */ {\n              // Silently handle any errors during forced cleanup\n            }\n          });\n        }, 0);\n      }\n    };\n  }, []);\n\n  if (!isMounted) {\n    return null; // Render nothing until mounted or after unmount\n  }\n\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className,\n        )}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  );\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };\n","\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\n\r\nimport { DayPicker } from \"react-day-picker\";\r\nimport { Locale } from \"date-fns\";\r\nimport { buttonVariants } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> & {\r\n  locale?: Locale;\r\n};\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  locale,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"p-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-sm font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\",\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        month_grid: \"w-full border-collapse space-y-1\",\r\n        weekdays: \"flex\",\r\n        weekday:\r\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\r\n        week: \"flex w-full mt-2\",\r\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\",\r\n        ),\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        Chevron: ({ className, orientation, ...props }) =>\r\n          orientation === \"left\" ? (\r\n            <ChevronLeft className={cn(className, \"h-4 w-4\")} {...props} />\r\n          ) : (\r\n            <ChevronRight className={cn(className, \"h-4 w-4\")} {...props} />\r\n          ),\r\n      }}\r\n      locale={locale}\r\n      weekStartsOn={locale?.options?.weekStartsOn ?? 1}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\nCalendar.displayName = \"Calendar\";\r\n\r\nexport { Calendar };\r\n","\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Switch({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\r\n  return (\r\n    <SwitchPrimitive.Root\r\n      data-slot=\"switch\"\r\n      className={cn(\r\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 cursor-pointer\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      <SwitchPrimitive.Thumb\r\n        data-slot=\"switch-thumb\"\r\n        className={cn(\r\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\",\r\n        )}\r\n      />\r\n    </SwitchPrimitive.Root>\r\n  );\r\n}\r\n\r\nexport { Switch };\r\n","\"use client\";\r\n\r\nimport { AlertCircle, CalendarIcon, CheckCircle, Loader2, PlusCircle, XCircle } from \"lucide-react\";\r\nimport { CalculationInput, CalculationResult, calculateInvoiceSplit } from \"@/lib/calculations\";\r\nimport {\r\n    FormControl,\r\n    FormDescription,\r\n    FormField,\r\n    FormItem,\r\n    FormLabel,\r\n    FormMessage,\r\n} from \"@/components/ui/form\";\r\nimport { FormProvider, useFieldArray, useForm, useWatch } from \"react-hook-form\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { cn, safeText } from \"@/lib/utils\";\r\nimport { de, enUS } from 'date-fns/locale';\r\nimport { format, isValid, parse, startOfDay } from \"date-fns\";\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Calendar } from \"@/components/ui/calendar\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport React from \"react\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { debounce } from 'lodash';\r\nimport { useTranslation } from '@/translations';\r\nimport { z } from \"zod\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\n\r\n// Constants for date formats\r\nconst DATE_FORMAT_ISO = \"yyyy-MM-dd\";\r\nconst DATE_FORMAT_DE = \"dd.MM.yyyy\";\r\nconst DATE_FORMAT_US = \"MM/dd/yyyy\";\r\nconst DATE_FORMAT_DOTS = \"dd.MM.yy\";\r\nconst DATE_FORMAT_SLASHES = \"MM/dd/yy\";\r\nconst DATE_FORMAT_DASHES = \"dd-MM-yyyy\";\r\n\r\n// List of all supported date formats for parsing\r\nconst supportedDateFormats = [\r\n    DATE_FORMAT_ISO,\r\n    DATE_FORMAT_DE,\r\n    DATE_FORMAT_US,\r\n    DATE_FORMAT_DOTS,\r\n    DATE_FORMAT_SLASHES,\r\n    DATE_FORMAT_DASHES\r\n];\r\n\r\n// Function to try parsing a date string with multiple formats\r\nconst tryParseDate = (value: string): Date | null => {\r\n    if (!value) return null;\r\n\r\n    // Trim the input\r\n    const trimmedValue = value.trim();\r\n    \r\n    // Basic format check before attempting parsing - require separators\r\n    const hasDateSeparators = /[\\.\\-\\/]/.test(trimmedValue);\r\n    if (!hasDateSeparators) {\r\n        return null;\r\n    }\r\n    \r\n    // Validate against common date patterns to ensure complete dates\r\n    const validDatePattern = /^(\\d{4}-\\d{2}-\\d{2}|\\d{2}\\.\\d{2}\\.\\d{4}|\\d{2}\\/\\d{2}\\/\\d{4}|\\d{2}-\\d{2}-\\d{4})$/;\r\n    if (!validDatePattern.test(trimmedValue)) {\r\n        return null;\r\n    }\r\n    \r\n    // Attempt parsing with supported formats\r\n    for (const format of supportedDateFormats) {\r\n        const attemptedParse = parse(trimmedValue, format, new Date());\r\n        if (isValid(attemptedParse)) {\r\n            return startOfDay(attemptedParse);\r\n        }\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\n// Update CalculationInput type to include splitPeriod\r\ndeclare module '@/lib/calculations' {\r\n    interface CalculationInput {\r\n        splitPeriod?: 'yearly' | 'quarterly' | 'monthly';\r\n    }\r\n}\r\n\r\n// Define the error type to match invoice-calculator-client.tsx\r\ntype CalculationErrorType = string | Error | { message?: string; [key: string]: unknown } | null | undefined;\r\n\r\n// Schema for form validation\r\nconst formSchema = (t: ReturnType<typeof useTranslation>['t']) => z\r\n    .object({\r\n        startDateString: z.string().optional(),\r\n        endDateString: z.string().optional(),\r\n        includeEndDate: z.boolean(),\r\n        splitPeriod: z.enum(['yearly', 'quarterly', 'monthly']),\r\n        amounts: z.array(z.object({\r\n            value: z.string()\r\n                .min(1, { message: t('InvoiceForm.errorAmountValueRequired') })\r\n                .refine((val) => !isNaN(parseFloat(val)) && parseFloat(val) > 0, {\r\n                    message: t('InvoiceForm.errorAmountPositive'),\r\n                })\r\n        })).min(1, t('InvoiceForm.errorAmountRequired'))\r\n    })\r\n    .refine((data) => {\r\n        const startDate = tryParseDate(data.startDateString || '');\r\n        return !!startDate;\r\n    }, {\r\n        message: t('InvoiceForm.errorStartDateRequired'),\r\n        path: [\"startDateString\"],\r\n    })\r\n    .refine((data) => {\r\n        const endDate = tryParseDate(data.endDateString || '');\r\n        return !!endDate;\r\n    }, {\r\n        message: t('InvoiceForm.errorEndDateRequired'),\r\n        path: [\"endDateString\"],\r\n    })\r\n    .refine((data) => {\r\n        const startDate = tryParseDate(data.startDateString || '');\r\n        const endDate = tryParseDate(data.endDateString || '');\r\n        return !startDate || !endDate || endDate >= startDate;\r\n    }, {\r\n        message: t('InvoiceForm.errorEndDateBeforeStart'),\r\n        path: [\"endDateString\"],\r\n    });\r\n\r\n// Form data type\r\ntype FormSchemaType = z.infer<ReturnType<typeof formSchema>>;\r\n\r\n// Data passed back to parent on calculation\r\nexport type CalculationCallbackData = {\r\n    startDate: Date;\r\n    endDate: Date;\r\n    includeEndDate: boolean;\r\n    splitPeriod: 'yearly' | 'quarterly' | 'monthly';\r\n    amounts: number[];\r\n} | null;\r\n\r\n// Type definition for demo data\r\ntype DemoDataType = {\r\n  startDateString?: string;\r\n  endDateString?: string;\r\n  amount?: string;\r\n  includeEndDate?: boolean;\r\n  splitPeriod?: 'yearly' | 'quarterly' | 'monthly';\r\n  isDemo?: boolean;\r\n} | null;\r\n\r\ninterface InvoiceFormProps {\r\n    onCalculateAction: (formData: CalculationCallbackData, results: CalculationResult | null, error?: CalculationErrorType) => void;\r\n    initialDemoData?: DemoDataType | null;\r\n    onDemoDataApplied?: () => void;\r\n}\r\n\r\nexport function InvoiceForm({ \r\n    onCalculateAction, \r\n    initialDemoData,\r\n    onDemoDataApplied \r\n}: InvoiceFormProps) {\r\n    const { t, i18n } = useTranslation();\r\n    const [mounted, setMounted] = useState(false);\r\n    const [isCalculating, setIsCalculating] = useState(false);\r\n    const [buttonText, setButtonText] = useState('');\r\n    const [showSuccessGlow, setShowSuccessGlow] = useState(false);\r\n    const initRef = useRef(false);\r\n\r\n    const currentLocale = i18n.language.startsWith('de') ? de : enUS;\r\n    const displayDateFormat = i18n.language.startsWith('de') ? DATE_FORMAT_DE : DATE_FORMAT_ISO;\r\n    const dateExamplePlaceholder = i18n.language.startsWith('de') ? 'z.B. 31.12.2023' : 'e.g. 2023-12-31';\r\n    const storageKey = 'invoiceFormDataCache';\r\n    \r\n    // State for popover visibility\r\n    const [isStartDatePopoverOpen, setIsStartDatePopoverOpen] = useState(false);\r\n    const [isEndDatePopoverOpen, setIsEndDatePopoverOpen] = useState(false);\r\n\r\n    const currentFormSchema = formSchema(t);\r\n    const form = useForm<FormSchemaType>({\r\n        resolver: zodResolver(currentFormSchema),\r\n        defaultValues: {\r\n            startDateString: '',\r\n            endDateString: '',\r\n            includeEndDate: true,\r\n            splitPeriod: 'yearly' as const,\r\n            amounts: [{ value: '' }]\r\n        },\r\n        mode: \"onBlur\",\r\n    });\r\n\r\n    const { fields, append, remove } = useFieldArray({\r\n        control: form.control,\r\n        name: \"amounts\"\r\n    });\r\n\r\n    // MOVED: Debounced function to save data to localStorage (BEFORE the effects that use it)\r\n    const debouncedSaveFunction = useMemo(\r\n        () => debounce((dataToSave: FormSchemaType) => {\r\n            if (mounted) {\r\n                try {\r\n                    // Don't save during initial load or auto-submit\r\n                    if (initRef.current) {\r\n                        const amountsToSave = dataToSave.amounts?.length > 0\r\n                            ? dataToSave.amounts\r\n                            : [{ value: '' }];\r\n                        const saveData = { ...dataToSave, amounts: amountsToSave };\r\n                        \r\n                        console.log(\"[InvoiceForm] Saving form data to localStorage:\", saveData);\r\n                        localStorage.setItem(storageKey, JSON.stringify(saveData));\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"[InvoiceForm] Failed to save form data to localStorage:\", error);\r\n                }\r\n            }\r\n        }, 500),\r\n        [mounted] // Only depends on mounted state\r\n    );\r\n    \r\n    // Effect to trigger debounced save when form values change\r\n    const watchedFields = useWatch({ control: form.control });\r\n    useEffect(() => {\r\n        if (mounted) {\r\n            debouncedSaveFunction(form.getValues());\r\n        }\r\n    }, [watchedFields, debouncedSaveFunction, form, mounted]);\r\n    \r\n    // Cleanup function in a separate effect\r\n    useEffect(() => {\r\n        return () => {\r\n            debouncedSaveFunction.cancel();\r\n            // Close any open popovers to ensure proper cleanup\r\n            setIsStartDatePopoverOpen(false);\r\n            setIsEndDatePopoverOpen(false);\r\n            \r\n            console.log(\"[InvoiceForm] Component unmounting, cancelled pending save operations.\");\r\n            // DO NOT set mounted=false here, as it will cause re-renders in StrictMode\r\n        };\r\n    }, [debouncedSaveFunction]);\r\n\r\n    const onSubmit = useCallback((values: FormSchemaType) => {\r\n        setIsCalculating(true);\r\n        setButtonText(t('InvoiceForm.calculatingButton'));\r\n        const startDate = tryParseDate(values.startDateString || '');\r\n        const endDate = tryParseDate(values.endDateString || '');\r\n        if (!startDate || !endDate) {\r\n            onCalculateAction(null, null, t('Errors.unexpectedError')); \r\n            setIsCalculating(false);\r\n            setButtonText(t('InvoiceForm.calculateButton', { defaultValue: 'Calculate Split' }));\r\n            return; \r\n        }\r\n        const amountsNum = values.amounts.map(amount => Number(amount.value));\r\n        const splitPeriod = values.splitPeriod || 'yearly';\r\n        const validFormData: CalculationCallbackData = {\r\n            startDate, endDate, includeEndDate: values.includeEndDate, splitPeriod, amounts: amountsNum,\r\n        };\r\n        onCalculateAction(validFormData, null, undefined);\r\n        const calculationInput: CalculationInput = {\r\n            startDate, endDate, includeEndDate: values.includeEndDate, amounts: amountsNum, splitPeriod,\r\n        };\r\n        try {\r\n            const results = calculateInvoiceSplit(calculationInput);\r\n            setTimeout(() => {\r\n                if (results.calculationSteps?.error) {\r\n                    onCalculateAction(validFormData, null, safeText(results.calculationSteps.error));\r\n                } else if (!results.aggregatedSplits || results.aggregatedSplits.length === 0) {\r\n                    onCalculateAction(validFormData, null, \"Calculation completed but resulted in no splits.\");\r\n                } else {\r\n                    onCalculateAction(validFormData, results);\r\n                    setButtonText(t('InvoiceForm.calculationComplete', { defaultValue: 'Split completed successfully!' }));\r\n                    setShowSuccessGlow(true);\r\n                    setTimeout(() => {\r\n                        setButtonText(t('InvoiceForm.calculateButton', { defaultValue: 'Calculate Split' }));\r\n                        setShowSuccessGlow(false);\r\n                    }, 2000);\r\n                }\r\n                setIsCalculating(false);\r\n            }, 300);\r\n        } catch (error) {\r\n            // Improved error handling to properly format errors\r\n            let errorMessage: CalculationErrorType;\r\n            \r\n            if (error instanceof Error) {\r\n                // Use Error object directly, don't convert to string\r\n                errorMessage = error;\r\n            } else if (typeof error === 'string') {\r\n                errorMessage = error;\r\n            } else if (error && typeof error === 'object') {\r\n                // Pass the object as is, let the parent component handle stringification\r\n                errorMessage = error as { [key: string]: unknown };\r\n            } else {\r\n                // Fallback for unknown error types\r\n                errorMessage = t('Errors.unexpectedError');\r\n            }\r\n            \r\n            onCalculateAction(validFormData, null, errorMessage);\r\n            setTimeout(() => {\r\n                setIsCalculating(false);\r\n                setButtonText(t('InvoiceForm.calculateButton', { defaultValue: 'Calculate Split' }));\r\n            }, 300);\r\n        }\r\n    }, [t, onCalculateAction, setIsCalculating, setButtonText, setShowSuccessGlow]);\r\n\r\n    // Effect for Initial Data Loading - ONE EFFECT TO RULE THEM ALL\r\n    useEffect(() => {\r\n        // Set mounted state and button text\r\n        if (!mounted) {\r\n            setMounted(true);\r\n            setButtonText(t('InvoiceForm.calculateButton', { defaultValue: 'Calculate Split' }));\r\n            console.log(\"[InvoiceForm] Component mounted\");\r\n        }\r\n\r\n        console.log(\"[InvoiceForm] Initializing form data...\", { initialDemoData });\r\n        let autoSubmit = false;\r\n\r\n        // 1. If initialDemoData is provided, use it with highest priority\r\n        if (initialDemoData) {\r\n            console.log(\"[InvoiceForm] Using demo data from prop:\", initialDemoData);\r\n            \r\n            const demoFormData = {\r\n                startDateString: initialDemoData.startDateString || '',\r\n                endDateString: initialDemoData.endDateString || '',\r\n                includeEndDate: initialDemoData.includeEndDate === true,\r\n                splitPeriod: initialDemoData.splitPeriod || 'yearly',\r\n                amounts: [{ value: initialDemoData.amount ? String(initialDemoData.amount) : '' }]\r\n            };\r\n\r\n            // Apply demo data to form\r\n            form.reset(demoFormData);\r\n            \r\n            // Save demo data to localStorage\r\n            try {\r\n                console.log(\"[InvoiceForm] Saving demo data to localStorage:\", demoFormData);\r\n                localStorage.setItem(storageKey, JSON.stringify(demoFormData));\r\n            } catch (error) {\r\n                console.error(\"[InvoiceForm] Error saving demo data to localStorage:\", error);\r\n            }\r\n            \r\n            // Notify parent that demo data was processed\r\n            if (onDemoDataApplied) {\r\n                console.log(\"[InvoiceForm] Notifying parent that demo data was applied\");\r\n                onDemoDataApplied();\r\n            }\r\n            \r\n            autoSubmit = true;\r\n            // Mark as initialized to prevent further loading from cache\r\n            initRef.current = true;\r\n        } \r\n        // Only try to load from cache if we haven't loaded demo data\r\n        else if (!initRef.current) {\r\n            initRef.current = true; // Mark as initialized\r\n            \r\n            // 2. Check for clean URL parameter\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            const forceClean = urlParams.get('clean') === 'true';\r\n            \r\n            if (forceClean) {\r\n                console.log(\"[InvoiceForm] 'clean=true' parameter detected, clearing cache\");\r\n                localStorage.removeItem(storageKey);\r\n                form.reset({\r\n                    startDateString: '',\r\n                    endDateString: '',\r\n                    includeEndDate: true,\r\n                    splitPeriod: 'yearly' as const,\r\n                    amounts: [{ value: '' }]\r\n                });\r\n            } \r\n            // 3. Otherwise try loading from cache\r\n            else {\r\n                const cachedDataString = localStorage.getItem(storageKey);\r\n                if (cachedDataString) {\r\n                    console.log(\"[InvoiceForm] Loading data from localStorage cache:\", cachedDataString);\r\n                    try {\r\n                        const parsedCache = JSON.parse(cachedDataString) as FormSchemaType;\r\n                        if (!parsedCache.amounts || parsedCache.amounts.length === 0) {\r\n                            parsedCache.amounts = [{ value: '' }];\r\n                        }\r\n                        form.reset(parsedCache);\r\n                    } catch (error) {\r\n                        console.error(\"[InvoiceForm] Error parsing cached data:\", error);\r\n                        localStorage.removeItem(storageKey);\r\n                        form.reset({\r\n                            startDateString: '',\r\n                            endDateString: '',\r\n                            includeEndDate: true,\r\n                            splitPeriod: 'yearly' as const,\r\n                            amounts: [{ value: '' }]\r\n                        });\r\n                    }\r\n                } else {\r\n                    console.log(\"[InvoiceForm] No cached data found, using defaults\");\r\n                    form.reset({\r\n                        startDateString: '',\r\n                        endDateString: '',\r\n                        includeEndDate: true,\r\n                        splitPeriod: 'yearly' as const,\r\n                        amounts: [{ value: '' }]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Auto-submit if using demo data\r\n        if (autoSubmit) {\r\n            console.log(\"[InvoiceForm] Scheduling auto-submit\");\r\n            const timer = setTimeout(() => {\r\n                form.trigger().then(isValid => {\r\n                    if (isValid) {\r\n                        console.log(\"[InvoiceForm] Form is valid, auto-submitting\");\r\n                        form.handleSubmit(onSubmit)();\r\n                    } else {\r\n                        console.warn(\"[InvoiceForm] Auto-submit cancelled - validation failed:\", form.formState.errors);\r\n                    }\r\n                });\r\n            }, 350);\r\n            \r\n            return () => clearTimeout(timer);\r\n        }\r\n        \r\n    // Include initialDemoData in dependencies so this effect re-runs when it changes\r\n    }, [t, onSubmit, initialDemoData, onDemoDataApplied, form, mounted]);\r\n    \r\n    const getDateHelpText = () => {\r\n        if (i18n.language.startsWith('de')) {\r\n            return t('InvoiceForm.supportedDateFormats', { defaultValue: 'Unterstützte Formate: TT.MM.JJJJ, JJJJ-MM-TT' });\r\n        } else {\r\n            return t('InvoiceForm.supportedDateFormats', { defaultValue: 'Supported formats: YYYY-MM-DD, DD.MM.YYYY' });\r\n        }\r\n    };\r\n\r\n    const onSelectStartDate = (date: Date | undefined) => {\r\n        if (date) {\r\n            const formatted = format(date, displayDateFormat);\r\n            form.setValue(\"startDateString\", formatted, { shouldValidate: true });\r\n        }\r\n        setIsStartDatePopoverOpen(false);\r\n    };\r\n\r\n    const onSelectEndDate = (date: Date | undefined) => {\r\n        if (date) {\r\n            const formatted = format(date, displayDateFormat);\r\n            form.setValue(\"endDateString\", formatted, { shouldValidate: true });\r\n        }\r\n        setIsEndDatePopoverOpen(false);\r\n    };\r\n\r\n    const handleStartDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        form.setValue(\"startDateString\", value, { shouldValidate: true });\r\n        form.trigger(\"startDateString\").then(() => {\r\n            const parsedDate = tryParseDate(value);\r\n            if (value && !parsedDate) {\r\n                form.setError(\"startDateString\", {\r\n                    type: \"manual\",\r\n                    message: getDateHelpText()\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleEndDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        form.setValue(\"endDateString\", value, { shouldValidate: false });\r\n        const parsedDate = tryParseDate(value);\r\n        const startDateValue = form.getValues(\"startDateString\") || '';\r\n        const startDate = tryParseDate(startDateValue);\r\n        form.clearErrors(\"endDateString\");\r\n        if (value && !parsedDate) {\r\n            form.setError(\"endDateString\", {\r\n                type: \"manual\",\r\n                message: getDateHelpText()\r\n            });\r\n        } \r\n        else if (parsedDate && startDate && parsedDate < startDate) {\r\n            form.setError(\"endDateString\", {\r\n                type: \"manual\",\r\n                message: t('InvoiceForm.errorEndDateBeforeStart')\r\n            });\r\n        }\r\n        form.trigger(\"endDateString\");\r\n    };\r\n\r\n    if (!mounted) {\r\n        return (\r\n            <div className=\"space-y-6\">\r\n                {/* Date fields grid */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                   <div className=\"space-y-2\">\r\n                        <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-2/5\" />\r\n                        <div className=\"h-10 bg-muted/60 rounded-md animate-pulse w-full\" />\r\n                   </div>\r\n                    <div className=\"space-y-2\">\r\n                        <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-2/5\" />\r\n                        <div className=\"h-10 bg-muted/60 rounded-md animate-pulse w-full\" />\r\n                   </div>\r\n                </div>\r\n                \r\n                {/* Include End Date toggle */}\r\n                <div className=\"h-20 bg-muted/40 rounded-lg animate-pulse border border-muted/30 p-4 flex justify-between items-center\">\r\n                    <div className=\"space-y-2\">\r\n                        <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-40\" />\r\n                        <div className=\"h-3 bg-muted/60 rounded-sm animate-pulse w-56\" />\r\n                    </div>\r\n                    <div className=\"h-6 w-12 bg-muted/60 rounded-full animate-pulse\" />\r\n                </div>\r\n                \r\n                {/* Split Period dropdown */}\r\n                <div className=\"h-20 bg-muted/40 rounded-lg animate-pulse border border-muted/30 p-4 flex justify-between items-center\">\r\n                    <div className=\"space-y-2\">\r\n                        <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-32\" />\r\n                        <div className=\"h-3 bg-muted/60 rounded-sm animate-pulse w-64\" />\r\n                    </div>\r\n                    <div className=\"h-10 w-28 bg-muted/60 rounded-md animate-pulse\" />\r\n                </div>\r\n                \r\n                {/* Amounts section */}\r\n                <div className=\"rounded-lg border border-muted/30 p-6 shadow-xs space-y-4 bg-muted/10\">\r\n                    <div className=\"h-5 bg-muted/60 rounded-sm animate-pulse w-1/4\" />\r\n                    <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-3/5 mb-4\" />\r\n                    <div className=\"space-y-4\">\r\n                        <div className=\"space-y-2\">\r\n                            <div className=\"h-3 bg-muted/60 rounded-sm animate-pulse w-8\" />\r\n                            <div className=\"flex gap-2\">\r\n                                <div className=\"h-10 bg-muted/60 rounded-md animate-pulse flex-grow\" />\r\n                                <div className=\"h-10 w-10 bg-muted/60 rounded-md animate-pulse opacity-0\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"h-8 bg-muted/60 rounded-md animate-pulse w-40 mt-6\" />\r\n                </div>\r\n              \r\n                {/* Calculate button */}\r\n                <div className=\"h-11 bg-primary/40 rounded-md animate-pulse w-full\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...form}>\r\n            <form \r\n                onSubmit={form.handleSubmit(onSubmit)} \r\n                className={cn(\"space-y-6\", mounted && \"opacity-100 transition-opacity duration-500 ease-in-out\", !mounted && \"opacity-0\")}\r\n            >\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <FormField \r\n                        control={form.control} \r\n                        name=\"startDateString\" \r\n                        render={({ field }) => (\r\n                            <FormItem className=\"flex flex-col\">\r\n                                <FormLabel htmlFor=\"startDateString\">{t('InvoiceForm.startDateLabel')}</FormLabel>\r\n                                <Popover open={isStartDatePopoverOpen} onOpenChange={setIsStartDatePopoverOpen}>\r\n                                    <FormControl>\r\n                                        <div className=\"w-full relative\">\r\n                                            <Input \r\n                                                value={field.value} \r\n                                                onChange={(e) => { \r\n                                                    field.onChange(e); \r\n                                                    handleStartDateChange(e); \r\n                                                }} \r\n                                                onBlur={() => form.trigger(\"startDateString\")} \r\n                                                placeholder={dateExamplePlaceholder} \r\n                                                className={`w-full pr-10 ${form.formState.errors.startDateString ? \"border-destructive focus:border-destructive focus:ring-2 focus:ring-destructive/20\" : \"\"}`} \r\n                                                autoFocus \r\n                                                id=\"startDateString\"\r\n                                                name=\"startDateString\"\r\n                                            />\r\n                                            {field.value && !form.formState.errors.startDateString && (\r\n                                                <div className=\"absolute inset-y-0 right-10 flex items-center z-[1]\">\r\n                                                    <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                                                </div>\r\n                                            )}\r\n                                            {form.formState.errors.startDateString && (\r\n                                                <div className=\"absolute inset-y-0 right-10 flex items-center z-[1]\">\r\n                                                    <AlertCircle className=\"h-4 w-4 text-destructive\" />\r\n                                                </div>\r\n                                            )}\r\n                                            <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center z-[1]\">\r\n                                                <PopoverTrigger asChild>\r\n                                                    <Button type=\"button\" variant=\"ghost\" className=\"h-7 w-7 p-0\" aria-label=\"Pick a date\">\r\n                                                        <CalendarIcon className=\"h-4 w-4 text-muted-foreground\" />\r\n                                                    </Button>\r\n                                                </PopoverTrigger>\r\n                                            </div>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n                                        <Calendar \r\n                                            mode=\"single\" \r\n                                            selected={tryParseDate(form.watch(\"startDateString\") ?? '') || undefined} \r\n                                            onSelect={onSelectStartDate} \r\n                                            initialFocus \r\n                                            locale={currentLocale} \r\n                                        />\r\n                                    </PopoverContent>\r\n                                </Popover>\r\n                                <FormMessage className=\"text-xs mt-1\">{form.formState.errors.startDateString?.message}</FormMessage>\r\n                            </FormItem>\r\n                        )} \r\n                    />\r\n                    <FormField \r\n                        control={form.control} \r\n                        name=\"endDateString\" \r\n                        render={({ field }) => (\r\n                            <FormItem className=\"flex flex-col\">\r\n                                <FormLabel htmlFor=\"endDateString\">{t('InvoiceForm.endDateLabel')}</FormLabel>\r\n                                <Popover open={isEndDatePopoverOpen} onOpenChange={setIsEndDatePopoverOpen}>\r\n                                    <FormControl>\r\n                                        <div className=\"w-full relative\">\r\n                                            <Input \r\n                                                value={field.value} \r\n                                                onChange={(e) => { \r\n                                                    field.onChange(e); \r\n                                                    handleEndDateChange(e); \r\n                                                }} \r\n                                                onBlur={() => form.trigger(\"endDateString\")} \r\n                                                placeholder={dateExamplePlaceholder} \r\n                                                className={`w-full pr-10 ${form.formState.errors.endDateString ? \"border-destructive focus:border-destructive focus:ring-2 focus:ring-destructive/20\" : \"\"}`} \r\n                                                id=\"endDateString\"\r\n                                                name=\"endDateString\"\r\n                                            />\r\n                                            {field.value && !form.formState.errors.endDateString && (\r\n                                                <div className=\"absolute inset-y-0 right-10 flex items-center z-[1]\">\r\n                                                    <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                                                </div>\r\n                                            )}\r\n                                            {form.formState.errors.endDateString && (\r\n                                                <div className=\"absolute inset-y-0 right-10 flex items-center z-[1]\">\r\n                                                    <AlertCircle className=\"h-4 w-4 text-destructive\" />\r\n                                                </div>\r\n                                            )}\r\n                                            <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center z-[1]\">\r\n                                                <PopoverTrigger asChild>\r\n                                                    <Button type=\"button\" variant=\"ghost\" className=\"h-7 w-7 p-0\" aria-label=\"Pick a date\">\r\n                                                        <CalendarIcon className=\"h-4 w-4 text-muted-foreground\" />\r\n                                                    </Button>\r\n                                                </PopoverTrigger>\r\n                                            </div>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n                                        <Calendar \r\n                                            mode=\"single\" \r\n                                            selected={tryParseDate(form.watch(\"endDateString\") ?? '') || undefined} \r\n                                            onSelect={onSelectEndDate} \r\n                                            initialFocus \r\n                                            locale={currentLocale} \r\n                                            disabled={(date) => { \r\n                                                const startDate = tryParseDate(form.watch(\"startDateString\") ?? ''); \r\n                                                return startDate ? date < startDate : false; \r\n                                            }} \r\n                                        />\r\n                                    </PopoverContent>\r\n                                </Popover>\r\n                                <FormMessage className=\"text-xs mt-1\">{form.formState.errors.endDateString?.message}</FormMessage>\r\n                            </FormItem>\r\n                        )} \r\n                    />\r\n                </div>\r\n                <FormField \r\n                    control={form.control} \r\n                    name=\"includeEndDate\" \r\n                    render={({ field }) => (\r\n                        <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\r\n                            <div className=\"space-y-0.5\">\r\n                                <FormLabel htmlFor=\"includeEndDate\" className=\"text-base\">{t('InvoiceForm.includeEndDateLabel')}</FormLabel>\r\n                                <FormDescription>{t('InvoiceForm.includeEndDateDescription')}</FormDescription>\r\n                            </div>\r\n                            <FormControl>\r\n                                <Switch \r\n                                    checked={field.value} \r\n                                    onCheckedChange={field.onChange}\r\n                                    id=\"includeEndDate\"\r\n                                    name=\"includeEndDate\"\r\n                                />\r\n                            </FormControl>\r\n                        </FormItem>\r\n                    )} \r\n                />\r\n                <FormField \r\n                    control={form.control} \r\n                    name=\"splitPeriod\" \r\n                    render={({ field }) => (\r\n                        <FormItem className=\"flex flex-col items-start justify-start rounded-lg border p-4\">\r\n                            <div className=\"space-y-0.5 pr-4 mb-3\">\r\n                                <FormLabel htmlFor=\"splitPeriod\" className=\"text-base\">{t('InvoiceForm.splitPeriodLabel', { defaultValue: 'Split Period' })}</FormLabel>\r\n                                <FormDescription>{t('InvoiceForm.splitPeriodDescription', { defaultValue: 'Choose how to split the invoice amounts.' })}</FormDescription>\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <Select \r\n                                    onValueChange={field.onChange} \r\n                                    defaultValue={field.value}\r\n                                    value={field.value}\r\n                                    name={field.name}\r\n                                >\r\n                                    <FormControl>\r\n                                        <SelectTrigger className=\"w-full\" id=\"splitPeriod\">\r\n                                            <SelectValue />\r\n                                        </SelectTrigger>\r\n                                    </FormControl>\r\n                                    <SelectContent>\r\n                                        <SelectItem key=\"yearly\" value=\"yearly\">\r\n                                            {`${t('InvoiceForm.periodYearly', { defaultValue: 'Yearly' })}`}\r\n                                        </SelectItem>\r\n                                        <SelectItem key=\"quarterly\" value=\"quarterly\">\r\n                                            {`${t('InvoiceForm.periodQuarterly', { defaultValue: 'Quarterly' })}`}\r\n                                        </SelectItem>\r\n                                        <SelectItem key=\"monthly\" value=\"monthly\">\r\n                                            {`${t('InvoiceForm.periodMonthly', { defaultValue: 'Monthly' })}`}\r\n                                        </SelectItem>\r\n                                    </SelectContent>\r\n                                </Select>\r\n                                <FormMessage />\r\n                            </div>\r\n                        </FormItem>\r\n                    )} \r\n                />\r\n                <div className=\"space-y-5 rounded-lg border p-6 shadow-xs\">\r\n                    <h3 className=\"text-base font-medium\" id=\"amounts-section-label\">{t('InvoiceForm.amountsLabel')}</h3>\r\n                    <FormDescription>{t('InvoiceForm.amountsDescription')}</FormDescription>\r\n                    <div aria-labelledby=\"amounts-section-label\" className=\"space-y-4 mt-4\">\r\n                    {fields.map((item, index) => (\r\n                        <FormField \r\n                            control={form.control} \r\n                            key={item.id} \r\n                            name={`amounts.${index}.value`} \r\n                            render={({ field }) => (\r\n                                <FormItem className=\"mb-3\">\r\n                                    <div className=\"flex flex-col gap-1\">\r\n                                        <FormLabel htmlFor={`amount-${index}`} className=\"text-sm font-medium\">#{index + 1}</FormLabel>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <div className=\"relative flex-1\">\r\n                                                <FormControl>\r\n                                                    <Input \r\n                                                        type=\"number\" \r\n                                                        step=\"any\" \r\n                                                        className=\"focus:border-primary focus:ring-2 focus:ring-primary/20 transition-transform duration-150 pr-8\" \r\n                                                        {...field} \r\n                                                        id={`amount-${index}`}\r\n                                                        name={`amounts.${index}.value`}\r\n                                                    />\r\n                                                </FormControl>\r\n                                                <div className=\"absolute right-2 top-0 h-full flex items-center justify-center z-[1]\">\r\n                                                    {field.value && !isNaN(parseFloat(field.value)) && parseFloat(field.value) > 0 && (\r\n                                                        <div className=\"flex items-center justify-center h-5 w-5\">\r\n                                                            <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                                                        </div>\r\n                                                    )}\r\n                                                    {form.formState.errors.amounts?.[index]?.value && (\r\n                                                        <div className=\"flex items-center justify-center h-5 w-5\">\r\n                                                            <AlertCircle className=\"h-4 w-4 text-destructive\" />\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                            {fields.length > 1 && (\r\n                                                <Button \r\n                                                    type=\"button\" \r\n                                                    variant=\"ghost\" \r\n                                                    size=\"icon\" \r\n                                                    onClick={() => remove(index)} \r\n                                                    className=\"text-gray-400 hover:text-gray-500 hover:bg-gray-100 transition-all duration-200 shrink-0\" \r\n                                                    aria-label=\"Remove amount\"\r\n                                                >\r\n                                                    <XCircle className=\"h-4 w-4 transition-transform duration-150 hover:scale-95\" />\r\n                                                </Button>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    <FormMessage />\r\n                                </FormItem>\r\n                            )} \r\n                        />\r\n                    ))}\r\n                    <Button \r\n                        type=\"button\" \r\n                        variant=\"outline\" \r\n                        size=\"sm\" \r\n                        onClick={() => { \r\n                            append({ value: \"\" }); \r\n                            setTimeout(() => { \r\n                                const ni = document.querySelectorAll('input[type=\"number\"]'); \r\n                                if (ni.length > 0) (ni[ni.length - 1] as HTMLInputElement).focus(); \r\n                            }, 10); \r\n                        }} \r\n                        className=\"mt-4\"\r\n                    >\r\n                        <PlusCircle className=\"mr-2 h-4 w-4\" /> {t('InvoiceForm.addAmountButton')}\r\n                    </Button>\r\n                    {form.formState.errors.amounts && !form.formState.errors.amounts.root && form.formState.errors.amounts.message && (\r\n                        <p className=\"text-sm font-medium text-destructive\">{form.formState.errors.amounts.message}</p>\r\n                    )}\r\n                    {form.formState.errors.amounts?.root?.message && (\r\n                        <p className=\"text-sm font-medium text-destructive\">{form.formState.errors.amounts.root.message}</p>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n                <Button \r\n                    type=\"submit\" \r\n                    disabled={form.formState.isSubmitting || isCalculating} \r\n                    className={`w-full bg-[#4a90e2] text-white hover:bg-[#4a90e2]/90 hover:scale-[1.02] px-6 py-2 h-11 font-medium rounded-md shadow-sm transition-all duration-200 hover:shadow-lg hover:shadow-[#4a90e2]/20 ${showSuccessGlow ? 'animate-success-glow' : ''}`}\r\n                >\r\n                    {isCalculating ? (\r\n                        <span className=\"flex items-center justify-center\">\r\n                            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                            {buttonText}\r\n                        </span>\r\n                    ) : (\r\n                        buttonText\r\n                    )}\r\n                </Button>\r\n            </form>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n// Need to wrap with TooltipProvider at a higher level if using tooltips inside \r\n"],"names":["round","value","decimals","Number","Math","Popover","props","PopoverPrimitive","data-slot","PopoverTrigger","PopoverContent","className","align","sideOffset","isMounted","setIsMounted","React","isMountedRef","current","mountTimer","setTimeout","clearTimeout","document","querySelectorAll","forEach","element","parentNode","removeChild","cn","Calendar","locale","classNames","showOutsideDays","DayPicker","months","month","caption","caption_label","nav","nav_button","buttonVariants","variant","nav_button_previous","nav_button_next","month_grid","weekdays","weekday","week","cell","day","day_range_end","day_selected","day_today","day_outside","day_disabled","day_range_middle","day_hidden","components","Chevron","orientation","ChevronLeft","ChevronRight","weekStartsOn","options","displayName","Switch","SwitchPrimitive","DATE_FORMAT_ISO","DATE_FORMAT_DE","supportedDateFormats","tryParseDate","trimmedValue","trim","test","format","attemptedParse","parse","Date","isValid","startOfDay","formSchema","z","object","startDateString","string","optional","endDateString","includeEndDate","boolean","splitPeriod","enum","amounts","array","min","message","t","refine","isNaN","parseFloat","val","data","path","startDate","endDate","InvoiceForm","form","onCalculateAction","initialDemoData","onDemoDataApplied","i18n","useTranslation","mounted","setMounted","useState","isCalculating","setIsCalculating","buttonText","setButtonText","showSuccessGlow","setShowSuccessGlow","initRef","useRef","currentLocale","language","startsWith","de","enUS","displayDateFormat","dateExamplePlaceholder","storageKey","isStartDatePopoverOpen","setIsStartDatePopoverOpen","isEndDatePopoverOpen","setIsEndDatePopoverOpen","currentFormSchema","useForm","resolver","zodResolver","defaultValues","mode","fields","append","remove","useFieldArray","control","name","debouncedSaveFunction","useMemo","debounce","dataToSave","amountsToSave","length","saveData","console","log","localStorage","setItem","JSON","stringify","error","watchedFields","useWatch","useEffect","cancel","onSubmit","useCallback","values","defaultValue","amountsNum","map","amount","validFormData","undefined","calculationInput","results","calculateInvoiceSplit","input","calcSteps","totalDuration","days","start","end","included","periodSegments","amountCalculations","totalDays","originalTotalAmount","adjustedTotalAmount","resultsPerAmount","aggregatedSplits","calculationSteps","splitPeriodUsed","some","a","reduce","sum","cleanStartDate","cleanEffectiveEndDate","addDays","totalDurationDays","differenceInDays","periodSegmentMap","currentDate","periodIdentifier","getPeriodIdentifier","periodType","year","getYear","date","quarter","getQuarter","toString","nextPeriodBoundary","getNextPeriodBoundary","endOfMonth","endOfQuarter","endOfYear","segmentEndDate","daysInSegment","proportion","Object","entries","identifier","sort","b","localeCompare","amountCalcStep","originalAmount","periodSplits","discrepancy","finalSum","rawSplits","rawSplitAmount","push","rawSplit","roundedSplit","adjustment","roundedSplits","split","step","find","s","rs","currentTotal","periodIdentifierToAdjust","periodToAdjustDetails","max","abs","splitToAdjust","adjustmentAppliedToPeriod","warn","finalAmountSplits","splitAmount","adjustedTotalForThisAmount","splits","segment","totalSplitForPeriod","amountResult","daysInPeriod","totalSplitAmount","finalAdjustedTotalAmount","finalDiscrepancy","safeText","errorMessage","Error","autoSubmit","demoFormData","String","reset","forceClean","urlParams","URLSearchParams","window","location","search","get","removeItem","cachedDataString","getItem","parsedCache","timer","trigger","then","handleSubmit","formState","errors","getDateHelpText","onSelectStartDate","formatted","setValue","shouldValidate","onSelectEndDate","handleStartDateChange","e","target","parsedDate","setError","type","handleEndDateChange","getValues","startDateValue","clearErrors","FormProvider","div","FormField","render","field","FormItem","FormLabel","htmlFor","open","onOpenChange","FormControl","Input","onChange","onBlur","placeholder","autoFocus","id","CheckCircle","AlertCircle","asChild","Button","aria-label","CalendarIcon","selected","watch","onSelect","initialFocus","FormMessage","disabled","FormDescription","checked","onCheckedChange","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","h3","aria-labelledby","item","index","size","onClick","XCircle","ni","focus","PlusCircle","root","p","isSubmitting","span","Loader2"],"sourceRoot":""}
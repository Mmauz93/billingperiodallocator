{"version":3,"file":"static/chunks/app/en/legal/impressum/page-7ddcc63ddb34e268.js","mappings":"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","sources":["webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/preload-chunks.tsx","webpack://_N_E/./node_modules/next/dist/server/app-render/work-async-storage-instance.js","webpack://_N_E/?2ca5","webpack://_N_E/../../../src/shared/lib/app-dynamic.tsx","webpack://_N_E/./node_modules/next/dist/api/app-dynamic.js","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx","webpack://_N_E/./node_modules/next/dist/server/app-render/async-local-storage.js","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/loadable.tsx","webpack://_N_E/./src/app/en/legal/impressum/page.tsx","webpack://_N_E/./node_modules/next/dist/server/app-render/work-async-storage.external.js"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}${dplId}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"workAsyncStorageInstance\", {\n    enumerable: true,\n    get: function() {\n        return workAsyncStorageInstance;\n    }\n});\nconst _asynclocalstorage = require(\"./async-local-storage\");\nconst workAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)();\n\n//# sourceMappingURL=work-async-storage-instance.js.map","import(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\Mauro\\\\Repos\\\\Siempi\\\\Saas\\\\billingperiodallocator\\\\src\\\\app\\\\en\\\\legal\\\\impressum\\\\page.tsx\");\n","import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n","export * from '../shared/lib/app-dynamic';\nexport { default } from '../shared/lib/app-dynamic';\n\n//# sourceMappingURL=app-dynamic.js.map","'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    bindSnapshot: null,\n    createAsyncLocalStorage: null,\n    createSnapshot: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    bindSnapshot: function() {\n        return bindSnapshot;\n    },\n    createAsyncLocalStorage: function() {\n        return createAsyncLocalStorage;\n    },\n    createSnapshot: function() {\n        return createSnapshot;\n    }\n});\nconst sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nfunction bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nfunction createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n","\"use client\";\r\n\r\nimport { ReactNode, useCallback, useEffect, useState } from \"react\";\r\n\r\nimport React from \"react\";\r\n// import ReactCountryFlag from \"react-country-flag\"; // Unused import\r\nimport dynamic from \"next/dynamic\";\r\nimport { usePathname } from \"next/navigation\";\r\nimport { useTranslation } from \"@/translations\";\r\n\r\n// Create a NoSSR wrapper component with proper typing\r\nconst NoSSR = ({ children }: { children: ReactNode }) => {\r\n  return <>{children}</>;\r\n};\r\n\r\n// Define interface for component props\r\ninterface ImpressumContentProps {\r\n  lastUpdated: string;\r\n  isMounted: boolean;\r\n  lang: string;\r\n}\r\n\r\n// Use dynamic import with ssr: false to prevent SSR\r\nconst ImpressumContent = dynamic<ImpressumContentProps>(() => \r\n  Promise.resolve(({ lastUpdated, isMounted, lang }: ImpressumContentProps) => {\r\n    const { t } = useTranslation();\r\n    const title = isMounted ? t(\"General.impressum\") : (lang === 'de' ? \"Impressum\" : \"Imprint\");\r\n    \r\n    return (\r\n      <article className=\"prose prose-lg dark:prose-invert\" aria-label=\"Legal information\">\r\n        <div className=\"text-center mb-10\">\r\n          <h1 className=\"text-3xl font-bold bg-gradient-to-r from-[#0284C7] to-[#0284C7]/80 bg-clip-text text-transparent\">\r\n            {title}\r\n          </h1>\r\n          <p className=\"text-sm text-muted-foreground mt-2\">{lastUpdated}</p>\r\n        </div>\r\n        \r\n        <div className=\"space-y-8\">\r\n          <section>\r\n            <h2 className=\"text-xl font-semibold mb-2 bg-gradient-to-r from-[#0284C7]/90 to-[#0284C7]/70 bg-clip-text text-transparent\">\r\n              {lang === 'de' ? 'Verantwortlich für diese Website' : 'Responsible for this website'}\r\n            </h2>\r\n            <p className=\"mb-6 text-sm leading-relaxed\">\r\n              <strong>Siempi AG</strong><br />\r\n              Mauro Miotti<br />\r\n              Birkenstrasse 47<br />\r\n              CH-6343 Rotkreuz<br />\r\n              Switzerland<br />\r\n              Email: <a href=\"mailto:info@siempi.ch\" className=\"text-primary hover:underline\">info@siempi.ch</a>\r\n            </p>\r\n          </section>\r\n          \r\n          <section className=\"border-t border-muted pt-6\">\r\n            <h2 className=\"text-xl font-semibold mb-2 bg-gradient-to-r from-[#0284C7]/90 to-[#0284C7]/70 bg-clip-text text-transparent\">\r\n              {lang === 'de' ? 'Handelsregister' : 'Commercial Register'}\r\n            </h2>\r\n            <p className=\"text-sm leading-relaxed\">\r\n              {lang === 'de' ? 'Eingetragen im Handelsregister des Kantons Zug' : 'Registered in the Commercial Register of the Canton of Zug'}<br />\r\n              UID: CHE-369.093.556<br />\r\n              {lang === 'de' ? 'Handelsregisternummer' : 'Commercial Register Number'}: CH-170.3.042.725-7\r\n            </p>\r\n          </section>\r\n        </div>\r\n      </article>\r\n    );\r\n  }), \r\n  { ssr: false }\r\n);\r\n\r\nexport default function ImprintPage() {\r\n  const { t, i18n } = useTranslation();\r\n  const pathname = usePathname();\r\n  const [mounted, setMounted] = useState(false);\r\n  \r\n  // Get current URL language - this ensures we don't fight with the URL's language\r\n  const getUrlLanguage = useCallback(() => {\r\n    if (!pathname) return 'en';\r\n    const pathSegments = pathname.split('/');\r\n    return pathSegments.length > 1 && pathSegments[1] === 'de' ? 'de' : 'en';\r\n  }, [pathname]);\r\n  \r\n  // Effect to handle mounting and language synchronization\r\n  useEffect(() => {\r\n    setMounted(true);\r\n    const urlLang = getUrlLanguage();\r\n    if (i18n.language !== urlLang) {\r\n      i18n.changeLanguage(urlLang);\r\n    }\r\n    document.title = t(\"General.impressum\") + \" | BillSplitter\";\r\n  }, [i18n, getUrlLanguage, t]); // getUrlLanguage is now memoized, added t\r\n\r\n  if (!mounted) {\r\n    return (\r\n      <div className=\"flex justify-center items-center py-16 min-h-[500px]\">\r\n        <div className=\"animate-spin h-8 w-8 border-4 border-primary border-t-transparent rounded-full\" />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // Get current language from URL\r\n  const currentLang = getUrlLanguage();\r\n  const today = new Date();\r\n  const formattedDate = today.toLocaleDateString(currentLang === 'de' ? 'de-DE' : 'en-US', { year: 'numeric', month: 'long', day: 'numeric' });\r\n  // Construct the lastUpdated string manually\r\n  const lastUpdatedDisplayString = `${t(\"Legal.lastUpdatedPrefix\", \"Last updated on\")} ${formattedDate}`;\r\n  \r\n  return (\r\n    <main className=\"container mx-auto max-w-3xl px-6 py-16\">\r\n      <NoSSR>\r\n        <ImpressumContent \r\n          lastUpdated={lastUpdatedDisplayString} // Use the manually constructed string\r\n          isMounted={mounted}\r\n          lang={currentLang}\r\n        />\r\n      </NoSSR>\r\n    </main>\r\n  );\r\n} \r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"workAsyncStorage\", {\n    enumerable: true,\n    get: function() {\n        return _workasyncstorageinstance.workAsyncStorageInstance;\n    }\n});\nconst _workasyncstorageinstance = require(\"./work-async-storage-instance\");\n\n//# sourceMappingURL=work-async-storage.external.js.map"],"names":["PreloadChunks","moduleIds","dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated","BailoutToCSR","reason","children","convertModule","mod","default","defaultOptions","Promise","resolve","loading","ssr","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","fallback","wrapProps","displayName","NoSSR","ImpressumContent","lastUpdated","isMounted","lang","t","useTranslation","title","article","className","aria-label","div","h1","p","section","h2","strong","br","a","href","ImprintPage","i18n","pathname","usePathname","mounted","setMounted","useState","getUrlLanguage","useCallback","pathSegments","split","length","useEffect","urlLang","language","changeLanguage","document","currentLang","formattedDate","Date","toLocaleDateString","year","month","day","lastUpdatedDisplayString","main"],"sourceRoot":""}
{"version":3,"file":"static/chunks/app/de/legal/terms-of-use/page-d304d8ec88ab96b0.js","mappings":"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","sources":["webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/preload-chunks.tsx","webpack://_N_E/./node_modules/next/dist/server/app-render/work-async-storage-instance.js","webpack://_N_E/../../../src/shared/lib/app-dynamic.tsx","webpack://_N_E/./node_modules/next/dist/api/app-dynamic.js","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx","webpack://_N_E/./src/app/de/legal/terms-of-use/page.tsx","webpack://_N_E/./node_modules/next/dist/server/app-render/async-local-storage.js","webpack://_N_E/../../../../src/shared/lib/lazy-dynamic/loadable.tsx","webpack://_N_E/?b9a5","webpack://_N_E/./node_modules/next/dist/server/app-render/work-async-storage.external.js"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  const dplId = process.env.NEXT_DEPLOYMENT_ID\n    ? `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n    : ''\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}${dplId}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"workAsyncStorageInstance\", {\n    enumerable: true,\n    get: function() {\n        return workAsyncStorageInstance;\n    }\n});\nconst _asynclocalstorage = require(\"./async-local-storage\");\nconst workAsyncStorageInstance = (0, _asynclocalstorage.createAsyncLocalStorage)();\n\n//# sourceMappingURL=work-async-storage-instance.js.map","import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n","export * from '../shared/lib/app-dynamic';\nexport { default } from '../shared/lib/app-dynamic';\n\n//# sourceMappingURL=app-dynamic.js.map","'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n","\"use client\";\n\nimport { ReactNode, useCallback, useEffect, useState } from \"react\";\nimport { SUPPORTED_LANGUAGES, getLanguageFromPath } from \"@/translations\";\n\nimport ReactMarkdown from \"react-markdown\";\nimport dynamic from \"next/dynamic\";\nimport remarkGfm from \"remark-gfm\";\nimport { usePathname } from \"next/navigation\";\nimport { useTranslation } from \"@/translations\";\n\n// Create a NoSSR wrapper component with proper typing\nconst NoSSR = ({ children }: { children: ReactNode }) => {\n  return <>{children}</>;\n};\n\n// Define interface for component props\ninterface TermsOfUseContentProps {\n  termsContent: string;\n  isLoading: boolean;\n}\n\n// Use dynamic import with ssr: false to prevent SSR\nconst TermsOfUseContent = dynamic<TermsOfUseContentProps>(() => \n  Promise.resolve(({ termsContent, isLoading }: TermsOfUseContentProps) => {\n    return (\n      <article className=\"prose prose-lg dark:prose-invert\">\n        {isLoading ? (\n          <div className=\"flex justify-center items-center py-16\">\n            <div className=\"animate-spin h-8 w-8 border-4 border-primary border-t-transparent rounded-full\" />\n          </div>\n        ) : (\n          <div className=\"custom-markdown-container\">\n            <ReactMarkdown\n              remarkPlugins={[remarkGfm]}\n              components={{\n                h1: ({ ...props }) => <h1 {...props} className=\"text-2xl font-bold mt-12 mb-4 text-[#0284C7]\" />,\n                h2: ({ ...props }) => <h2 {...props} className=\"text-xl font-semibold mt-12 mb-4 text-[#0284C7]\" />,\n                h3: ({ ...props }) => <h3 {...props} className=\"text-lg font-medium mt-10 mb-3 text-[#0284C7]\" />,\n                p: ({ ...props }) => <p {...props} className=\"text-sm leading-relaxed text-muted-foreground mb-6\" />,\n                ul: ({ ...props }) => <ul {...props} className=\"text-sm leading-relaxed text-muted-foreground mb-6 pl-6 list-disc\" />,\n                ol: ({ ...props }) => <ol {...props} className=\"text-sm leading-relaxed text-muted-foreground mb-6 pl-6 list-decimal\" />,\n                li: ({ ...props }) => <li {...props} className=\"mb-2\" />,\n                a: ({ ...props }) => <a {...props} className=\"text-[#0284C7] hover:underline\" />,\n                strong: ({ ...props }) => <strong {...props} className=\"font-semibold\" />,\n              }}\n            >  \n              {termsContent}\n            </ReactMarkdown>\n          </div>\n        )}\n      </article>\n    );\n  }), \n  { ssr: false }\n);\n\nexport default function TermsOfUsePageDE() {\n  const { i18n, t } = useTranslation();\n  const pathname = usePathname();\n  const [termsContent, setTermsContent] = useState<string>(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const [langPrefix, setLangPrefix] = useState(\"de\");\n  const [isMounted, setIsMounted] = useState(false);\n  \n  // Function to load terms content - Wrapped in useCallback\n  const loadTerms = useCallback(async (lang: string) => {\n    setIsLoading(true);\n    try {\n      const langSuffix = lang === 'de' ? '.de' : '';\n      const response = await fetch(`/terms-of-use${langSuffix}.md`);\n      if (!response.ok) throw new Error('Failed to load terms');\n      const content = await response.text();\n      const processedContent = content\n        .replace(/^# .*$/m, '')\n        .replace(/^Last updated on.*$/m, '')\n        .replace(/^Zuletzt aktualisiert am.*$/m, '')\n        .trim();\n      setTermsContent(processedContent);\n    } catch (error) {\n      console.error('Error loading terms of use:', error);\n      setTermsContent(lang === 'de' \n        ? 'Die Nutzungsbedingungen konnten nicht geladen werden. Bitte versuchen Sie es später erneut.' \n        : 'Failed to load terms of use. Please try again later.');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [setIsLoading, setTermsContent]); // Stable dependencies\n  \n  // Get current URL language - Wrapped in useCallback\n  const getUrlLanguage = useCallback(() => {\n    if (!pathname) return 'de'; // Default or initial language\n    return getLanguageFromPath(pathname) || 'de';\n  }, [pathname]);\n  \n  // Effect 1: Handle initial mount and URL/language synchronization\n  useEffect(() => {\n    if (!isMounted) {\n      setIsMounted(true);\n      // On the very first run when isMounted becomes true, \n      // we determine the initial language and trigger a load.\n      const initialLang = getUrlLanguage();\n      setLangPrefix(initialLang);\n      loadTerms(initialLang); // Initial load\n      if (i18n.language !== initialLang) {\n        i18n.changeLanguage(initialLang);\n      }\n      document.title = t(\"Legal.termsOfUseTitle\") + \" | BillSplitter\";\n      return;\n    }\n\n    // Subsequent runs (e.g., due to pathname changing via getUrlLanguage, or t/i18n changing)\n    const currentUrlLang = getUrlLanguage();\n\n    if (currentUrlLang !== langPrefix) {\n      // Language has changed based on URL\n      setLangPrefix(currentUrlLang);\n      loadTerms(currentUrlLang);\n      if (i18n.language !== currentUrlLang) {\n        i18n.changeLanguage(currentUrlLang);\n      }\n      // Title will be updated when `t` changes or in the next render if i18n didn't change\n    }\n    \n    // Always ensure title is set with current `t`\n    // This covers cases where `t` might change without a language change (e.g. HMR of translation files)\n    // or after i18n.changeLanguage has resolved if it was async.\n    document.title = t(\"Legal.termsOfUseTitle\") + \" | BillSplitter\";\n\n  }, [isMounted, getUrlLanguage, langPrefix, loadTerms, i18n, t]); // Dependencies\n  \n  // Effect 2: Listen for external language change events\n  useEffect(() => {\n    if (!isMounted) return;\n    \n    const handleLanguageChanged = (e: Event) => {\n      const customEvent = e as CustomEvent;\n      const newLang = customEvent.detail?.language || customEvent.detail;\n      \n      // Only update if the new language is valid and different from the current state\n      if (newLang && typeof newLang === 'string' && SUPPORTED_LANGUAGES.includes(newLang) && newLang !== langPrefix) {\n        console.log(`[TermsOfUse] Language changed event detected: ${newLang}`);\n        setLangPrefix(newLang); // Update state\n        loadTerms(newLang); // Load new content\n        // i18n is likely already updated by the component that fired the event, but sync just in case\n        if (i18n.language !== newLang) {\n          i18n.changeLanguage(newLang);\n        }\n      }\n    };\n    \n    document.addEventListener('languageChanged', handleLanguageChanged);\n    return () => document.removeEventListener('languageChanged', handleLanguageChanged);\n  }, [isMounted, loadTerms, i18n, langPrefix]); // Added langPrefix dependency\n  \n  const formattedDate = new Date().toLocaleDateString(langPrefix === 'de' ? 'de-DE' : 'en-US', { // Use state langPrefix\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n\n  // Determine H1 title based on mount state to avoid hydration mismatch\n  const h1Title = isMounted ? t(\"Legal.termsOfUseTitle\") : (langPrefix === 'de' ? \"Nutzungsbedingungen\" : \"Terms of Use\");\n  \n  return (\n    <main className=\"container mx-auto max-w-3xl px-6 py-16\">\n      <div className=\"mb-10 text-center\">\n        <h1 className=\"text-3xl font-bold text-[#0284C7]\">\n          {h1Title}\n        </h1>\n        {isMounted && (\n          <p className=\"text-sm text-muted-foreground mt-2\">\n            {t(\"Legal.lastUpdatedPrefix\", \"Zuletzt aktualisiert am\")} {formattedDate}\n          </p>\n        )}\n      </div>\n      <NoSSR>\n        <TermsOfUseContent \n          termsContent={termsContent} \n          isLoading={isLoading}\n        />\n      </NoSSR>\n    </main>\n  );\n} \n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    bindSnapshot: null,\n    createAsyncLocalStorage: null,\n    createSnapshot: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    bindSnapshot: function() {\n        return bindSnapshot;\n    },\n    createAsyncLocalStorage: function() {\n        return createAsyncLocalStorage;\n    },\n    createSnapshot: function() {\n        return createSnapshot;\n    }\n});\nconst sharedAsyncLocalStorageNotAvailableError = Object.defineProperty(new Error('Invariant: AsyncLocalStorage accessed in runtime where it is not available'), \"__NEXT_ERROR_CODE\", {\n    value: \"E504\",\n    enumerable: false,\n    configurable: true\n});\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    static bind(fn) {\n        return fn;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = typeof globalThis !== 'undefined' && globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nfunction bindSnapshot(fn) {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.bind(fn);\n    }\n    return FakeAsyncLocalStorage.bind(fn);\n}\nfunction createSnapshot() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return maybeGlobalAsyncLocalStorage.snapshot();\n    }\n    return function(fn, ...args) {\n        return fn(...args);\n    };\n}\n\n//# sourceMappingURL=async-local-storage.js.map","import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n","import(/* webpackMode: \"eager\" */ \"C:\\\\Users\\\\Mauro\\\\Repos\\\\Siempi\\\\Saas\\\\billingperiodallocator\\\\src\\\\app\\\\de\\\\legal\\\\terms-of-use\\\\page.tsx\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nObject.defineProperty(exports, \"workAsyncStorage\", {\n    enumerable: true,\n    get: function() {\n        return _workasyncstorageinstance.workAsyncStorageInstance;\n    }\n});\nconst _workasyncstorageinstance = require(\"./work-async-storage-instance\");\n\n//# sourceMappingURL=work-async-storage.external.js.map"],"names":["PreloadChunks","moduleIds","dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated","BailoutToCSR","reason","children","NoSSR","TermsOfUseContent","Promise","resolve","termsContent","isLoading","article","className","div","ReactMarkdown","remarkPlugins","remarkGfm","components","h1","props","h2","h3","p","ul","ol","li","a","strong","ssr","TermsOfUsePageDE","i18n","t","useTranslation","pathname","usePathname","setTermsContent","useState","setIsLoading","langPrefix","setLangPrefix","isMounted","setIsMounted","loadTerms","useCallback","lang","response","fetch","langSuffix","ok","processedContent","content","text","replace","trim","error","console","getUrlLanguage","getLanguageFromPath","useEffect","initialLang","language","changeLanguage","document","title","currentUrlLang","handleLanguageChanged","customEvent","newLang","detail","SUPPORTED_LANGUAGES","includes","addEventListener","removeEventListener","formattedDate","Date","toLocaleDateString","year","month","day","h1Title","main","convertModule","mod","default","defaultOptions","loading","opts","Lazy","lazy","then","Loading","LoadableComponent","fallbackElement","pastDelay","hasSuspenseBoundary","Wrap","Suspense","Fragment","fallback","wrapProps","displayName"],"sourceRoot":""}
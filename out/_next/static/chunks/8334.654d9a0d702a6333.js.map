{"version":3,"file":"static/chunks/8334.654d9a0d702a6333.js","mappings":"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","sources":["webpack://_N_E/./src/components/invoice-form/date-formats.ts","webpack://_N_E/./src/components/invoice-form/form-schema.ts","webpack://_N_E/./src/components/invoice-form/form-initialization.ts","webpack://_N_E/./src/components/invoice-form/amount-field.tsx","webpack://_N_E/./src/components/ui/popover.tsx","webpack://_N_E/./src/components/ui/calendar.tsx","webpack://_N_E/./src/components/invoice-form/date-field.tsx","webpack://_N_E/./src/components/invoice-form/form-loading-skeleton.tsx","webpack://_N_E/./src/components/invoice-form/calculate-logic.ts","webpack://_N_E/./src/components/invoice-form/index.tsx","webpack://_N_E/./src/components/invoice-form.tsx","webpack://_N_E/./src/components/ui/switch.tsx"],"sourcesContent":["export const DATE_FORMAT_ISO = \"yyyy-MM-dd\";\nexport const DATE_FORMAT_DE = \"dd.MM.yyyy\";\nexport const DATE_FORMAT_US = \"MM/dd/yyyy\";\nexport const DATE_FORMAT_DOTS = \"dd.MM.yy\";\nexport const DATE_FORMAT_SLASHES = \"MM/dd/yy\";\nexport const DATE_FORMAT_DASHES = \"dd-MM-yyyy\";\n\nexport const supportedDateFormats = [\n  DATE_FORMAT_ISO,\n  DATE_FORMAT_DE,\n  DATE_FORMAT_US,\n  DATE_FORMAT_DOTS,\n  DATE_FORMAT_SLASHES,\n  DATE_FORMAT_DASHES,\n];\n","import { parseDate } from \"@/lib/date-utils\";\nimport { supportedDateFormats } from \"./date-formats\";\nimport { z } from \"zod\";\n\nexport const tryParseDate = (value: string): Date | null => {\n  if (!value) return null;\n  return parseDate(value, supportedDateFormats);\n};\n\n// Type for passed in demo data\nexport type DemoDataType = {\n  startDateString?: string;\n  endDateString?: string;\n  amount?: string;\n  includeEndDate?: boolean;\n  splitPeriod?: \"yearly\" | \"quarterly\" | \"monthly\";\n  isDemo?: boolean;\n} | null;\n\n// Define a constant for default form values\nexport const DEFAULT_FORM_VALUES: FormSchemaType = {\n  startDateString: \"\",\n  endDateString: \"\",\n  includeEndDate: true,\n  splitPeriod: \"yearly\" as const,\n  amounts: [{ value: \"\" }],\n};\n\n// Schema for form validation\nexport const formSchema = (t: (key: string, options?: { defaultValue?: string; values?: Record<string, string | number> }) => string) =>\n  z\n    .object({\n      startDateString: z.string().optional(),\n      endDateString: z.string().optional(),\n      includeEndDate: z.boolean(),\n      splitPeriod: z.enum([\"yearly\", \"quarterly\", \"monthly\"]),\n      amounts: z\n        .array(\n          z.object({\n            value: z\n              .string()\n              .min(1, { message: t(\"InvoiceForm.errorAmountValueRequired\") })\n              .refine((val) => !isNaN(parseFloat(val)) && parseFloat(val) > 0, {\n                message: t(\"InvoiceForm.errorAmountPositive\"),\n              }),\n          }),\n        )\n        .min(1, t(\"InvoiceForm.errorAmountRequired\")),\n    })\n    .refine(\n      (data) => {\n        const startDate = tryParseDate(data.startDateString || \"\");\n        return !!startDate;\n      },\n      {\n        message: t(\"InvoiceForm.errorStartDateRequired\"),\n        path: [\"startDateString\"],\n      },\n    )\n    .refine(\n      (data) => {\n        const endDate = tryParseDate(data.endDateString || \"\");\n        return !!endDate;\n      },\n      {\n        message: t(\"InvoiceForm.errorEndDateRequired\"),\n        path: [\"endDateString\"],\n      },\n    )\n    .refine(\n      (data) => {\n        const startDate = tryParseDate(data.startDateString || \"\");\n        const endDate = tryParseDate(data.endDateString || \"\");\n        return !startDate || !endDate || endDate >= startDate;\n      },\n      {\n        message: t(\"InvoiceForm.errorEndDateBeforeStart\"),\n        path: [\"endDateString\"],\n      },\n    );\n\n// Form data type\nexport type FormSchemaType = z.infer<ReturnType<typeof formSchema>>;\n\n// Need to add import for parseDate\n","import {\n  DEFAULT_FORM_VALUES,\n  DemoDataType,\n  FormSchemaType,\n} from \"./form-schema\";\n\nimport { UseFormReturn } from \"react-hook-form\";\n\nexport const INVOICE_FORM_STORAGE_KEY = \"invoiceFormDataCache\";\n\nexport function initializeFormData(\n  form: UseFormReturn<FormSchemaType>,\n  initialDemoData: DemoDataType | null | undefined,\n  onDemoDataApplied: (() => void) | undefined,\n  onSubmit: (values: FormSchemaType) => void,\n): void {\n  try {\n    // Initialization priority:\n    // 1. Demo data from props\n    // 2. Clean URL parameter\n    // 3. Cached data from localStorage\n    // 4. Default values\n\n    // Check if demo data is provided\n    if (initialDemoData) {\n      console.log(\"[InvoiceForm] Using demo data from prop:\", initialDemoData);\n\n      const demoFormData = {\n        startDateString: initialDemoData.startDateString || \"\",\n        endDateString: initialDemoData.endDateString || \"\",\n        includeEndDate: initialDemoData.includeEndDate === true,\n        splitPeriod: initialDemoData.splitPeriod || \"yearly\",\n        amounts: [\n          {\n            value: initialDemoData.amount ? String(initialDemoData.amount) : \"\",\n          },\n        ],\n      };\n\n      // Apply demo data to form\n      form.reset(demoFormData);\n\n      // Save demo data to localStorage\n      localStorage.setItem(\n        INVOICE_FORM_STORAGE_KEY,\n        JSON.stringify(demoFormData),\n      );\n\n      // Notify parent that demo data was processed\n      if (onDemoDataApplied) {\n        console.log(\n          \"[InvoiceForm] Notifying parent that demo data was applied\",\n        );\n        onDemoDataApplied();\n      }\n\n      // Auto-submit the form after a short delay\n      setTimeout(() => {\n        form.trigger().then((isValid) => {\n          if (isValid) {\n            console.log(\"[InvoiceForm] Form is valid, auto-submitting\");\n            form.handleSubmit(onSubmit)();\n          } else {\n            console.warn(\n              \"[InvoiceForm] Auto-submit cancelled - validation failed:\",\n              form.formState.errors,\n            );\n          }\n        });\n      }, 350);\n\n      return; // Exit early if demo data was applied\n    }\n\n    // Check for clean URL parameter\n    if (typeof window !== \"undefined\") {\n      const urlParams = new URLSearchParams(window.location.search);\n      const forceClean = urlParams.get(\"clean\") === \"true\";\n\n      if (forceClean) {\n        console.log(\n          \"[InvoiceForm] 'clean=true' parameter detected, clearing cache\",\n        );\n        localStorage.removeItem(INVOICE_FORM_STORAGE_KEY);\n        form.reset(DEFAULT_FORM_VALUES);\n        return; // Exit early if clean mode was requested\n      }\n    }\n\n    // Try loading from cache\n    const cachedDataString = localStorage.getItem(INVOICE_FORM_STORAGE_KEY);\n    if (cachedDataString) {\n      console.log(\"[InvoiceForm] Loading data from localStorage cache\");\n      try {\n        const parsedCache = JSON.parse(cachedDataString) as FormSchemaType;\n\n        // Ensure amounts is not empty\n        if (!parsedCache.amounts || parsedCache.amounts.length === 0) {\n          parsedCache.amounts = [{ value: \"\" }];\n        }\n\n        // Ensure splitPeriod has a valid value\n        if (\n          !parsedCache.splitPeriod ||\n          ![\"yearly\", \"quarterly\", \"monthly\"].includes(parsedCache.splitPeriod)\n        ) {\n          parsedCache.splitPeriod = \"yearly\";\n        }\n\n        form.reset(parsedCache);\n      } catch (error) {\n        console.error(\"[InvoiceForm] Error parsing cached data:\", error);\n        resetToDefaultValues(form);\n      }\n    } else {\n      console.log(\"[InvoiceForm] No cached data found, using defaults\");\n      // No need to reset - form already has default values\n    }\n  } catch (error) {\n    // Fallback if there are any errors accessing localStorage\n    console.error(\"[InvoiceForm] Error during initialization:\", error);\n    resetToDefaultValues(form);\n  }\n}\n\n// Helper function to reset to default values\nexport function resetToDefaultValues(\n  form: UseFormReturn<FormSchemaType>,\n): void {\n  // Clear any invalid data from storage\n  try {\n    localStorage.removeItem(INVOICE_FORM_STORAGE_KEY);\n  } catch {} // Ignore errors\n\n  // Reset form to default values\n  form.reset(DEFAULT_FORM_VALUES);\n}\n","\"use client\";\n\nimport { AlertCircle, CheckCircle, XCircle } from \"lucide-react\";\nimport {\n  FormControl,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { ControllerRenderProps } from \"react-hook-form\";\nimport { FormSchemaType } from \"./form-schema\";\nimport { Input } from \"@/components/ui/input\";\n\ninterface AmountFieldProps {\n  index: number;\n  field: ControllerRenderProps<FormSchemaType, `amounts.${number}.value`>;\n  canRemove: boolean;\n  onRemoveAction: () => void;\n  hasError: boolean;\n  errorMessage?: string;\n}\n\nexport function AmountField({\n  index,\n  field,\n  canRemove,\n  onRemoveAction,\n  hasError,\n  errorMessage,\n}: AmountFieldProps) {\n  const isValid =\n    field.value &&\n    !isNaN(parseFloat(field.value)) &&\n    parseFloat(field.value) > 0;\n\n  return (\n    <FormItem className=\"mb-3\">\n      <div className=\"flex flex-col gap-1\">\n        <FormLabel htmlFor={`amount-${index}`} className=\"text-sm font-medium\">\n          #{index + 1}\n        </FormLabel>\n        <div className=\"flex items-center gap-2\">\n          <div className=\"relative flex-1\">\n            <FormControl>\n              <Input\n                type=\"number\"\n                step=\"any\"\n                className=\"focus:border-primary focus:ring-2 focus:ring-primary/20 transition-transform duration-150 pr-8\"\n                {...field}\n                id={`amount-${index}`}\n                name={`amounts.${index}.value`}\n              />\n            </FormControl>\n            <div className=\"absolute right-2 top-0 h-full flex items-center justify-center z-[1]\">\n              {isValid && (\n                <div className=\"flex items-center justify-center h-5 w-5\">\n                  <CheckCircle className=\"h-4 w-4 text-success\" />\n                </div>\n              )}\n              {hasError && (\n                <div className=\"flex items-center justify-center h-5 w-5\">\n                  <AlertCircle className=\"h-4 w-4 text-destructive\" />\n                </div>\n              )}\n            </div>\n          </div>\n          {canRemove && (\n            <Button\n              type=\"button\"\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={onRemoveAction}\n              className=\"text-gray-400 hover:text-gray-500 hover:bg-gray-100 transition-all duration-200 shrink-0\"\n              aria-label=\"Remove amount\"\n            >\n              <XCircle className=\"h-4 w-4 transition-transform duration-150 hover:scale-95\" />\n            </Button>\n          )}\n        </div>\n      </div>\n      {hasError && errorMessage && (\n        <FormMessage className=\"text-xs mt-1 error-message\">\n          {errorMessage}\n        </FormMessage>\n      )}\n    </FormItem>\n  );\n}\n","\"use client\";\n\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  const [isMounted, setIsMounted] = React.useState(false);\n  const isMountedRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    const mountTimer = setTimeout(() => {\n      if (isMountedRef.current) {\n        setIsMounted(true);\n      }\n    }, 10);\n\n    return () => {\n      isMountedRef.current = false;\n      clearTimeout(mountTimer);\n      setIsMounted(false);\n\n      if (typeof document !== \"undefined\") {\n        setTimeout(() => {\n          document\n            .querySelectorAll(\"[data-radix-popover-content]\")\n            .forEach((element) => {\n              try {\n                if (element && element.parentNode) {\n                  element.parentNode.removeChild(element);\n                }\n              } catch {\n                // Silently handle any errors during forced cleanup\n              }\n            });\n        }, 0);\n      }\n    };\n  }, []);\n\n  if (!isMounted) {\n    return null;\n  }\n\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className,\n        )}\n        style={{ backgroundColor: \"hsl(var(--popover))\", opacity: 1 }}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  );\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };\n","\"use client\";\n\nimport * as React from \"react\";\n\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\n\nimport { DayPicker } from \"react-day-picker\";\nimport { Locale } from \"date-fns\";\nimport { buttonVariants } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> & {\n  locale?: Locale;\n};\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  locale,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\",\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        month_grid: \"w-full border-collapse space-y-1\",\n        weekdays: \"flex\",\n        weekday:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        week: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100 hover:!bg-primary hover:!text-primary-foreground dark:hover:!bg-primary dark:hover:!text-primary-foreground transition-colors duration-200 active:scale-95 active:ring-1 active:ring-primary/50\",\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:!bg-primary hover:!text-primary-foreground focus:bg-primary focus:text-primary-foreground active:scale-95\",\n        day_today:\n          \"bg-accent text-accent-foreground hover:!bg-primary hover:!text-primary-foreground active:scale-95\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30 hover:!bg-primary/50 hover:!text-primary-foreground active:scale-95\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        Chevron: ({ className, orientation, ...props }) =>\n          orientation === \"left\" ? (\n            <ChevronLeft className={cn(className, \"h-4 w-4\")} {...props} />\n          ) : (\n            <ChevronRight className={cn(className, \"h-4 w-4\")} {...props} />\n          ),\n      }}\n      locale={locale}\n      weekStartsOn={locale?.options?.weekStartsOn ?? 1}\n      {...props}\n    />\n  );\n}\nCalendar.displayName = \"Calendar\";\n\nexport { Calendar };\n","\"use client\";\n\nimport { AlertCircle, CalendarIcon, CheckCircle } from \"lucide-react\";\nimport { ControllerRenderProps, UseFormReturn } from \"react-hook-form\";\nimport {\n  FormControl,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { FormSchemaType, tryParseDate } from \"./form-schema\";\nimport { Locale, format } from \"date-fns\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { useEffect, useState } from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { Input } from \"@/components/ui/input\";\n\ninterface DateFieldProps {\n  fieldName: \"startDateString\" | \"endDateString\";\n  label: string;\n  placeholder: string;\n  field: ControllerRenderProps<FormSchemaType, \"startDateString\" | \"endDateString\">;\n  form: UseFormReturn<FormSchemaType>;\n  onFieldChangeAction: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  displayDateFormat: string;\n  locale: Locale;\n  disabled?: (date: Date) => boolean;\n  autoFocus?: boolean;\n}\n\nexport function DateField({\n  fieldName,\n  label,\n  placeholder,\n  field,\n  form,\n  onFieldChangeAction,\n  displayDateFormat,\n  locale,\n  disabled,\n  autoFocus,\n}: DateFieldProps) {\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\n  const currentMonth =\n    tryParseDate(field.value ?? \"\") ||\n    (fieldName === \"endDateString\"\n      ? tryParseDate(form.getValues(\"startDateString\") ?? \"\")\n      : undefined) ||\n    new Date();\n\n  const onSelectDate = (date: Date | undefined) => {\n    if (date) {\n      const formatted = format(date, displayDateFormat);\n      form.setValue(fieldName, formatted, { shouldValidate: true });\n    }\n    setIsPopoverOpen(false);\n  };\n\n  useEffect(() => {\n    return () => {\n      setIsPopoverOpen(false);\n    };\n  }, []);\n\n  return (\n    <FormItem className=\"flex flex-col\">\n      <FormLabel htmlFor={fieldName}>{label}</FormLabel>\n      <Popover open={isPopoverOpen} onOpenChange={setIsPopoverOpen}>\n        <FormControl>\n          <div className=\"w-full relative\">\n            <Input\n              value={field.value}\n              onChange={(e) => {\n                field.onChange(e);\n                onFieldChangeAction(e);\n              }}\n              onBlur={() => form.trigger(fieldName)}\n              placeholder={placeholder}\n              className={`w-full pr-16 ${form.formState.errors[fieldName] ? \"border-destructive focus:border-destructive focus:ring-2 focus:ring-destructive/20\" : \"\"}`}\n              autoFocus={autoFocus}\n              id={fieldName}\n              name={fieldName}\n            />\n            {field.value && !form.formState.errors[fieldName] && (\n              <div className=\"absolute inset-y-0 right-12 flex items-center z-[1]\">\n                <CheckCircle className=\"h-4 w-4 text-success\" />\n              </div>\n            )}\n            {form.formState.errors[fieldName] && (\n              <div className=\"absolute inset-y-0 right-12 flex items-center z-[1]\">\n                <AlertCircle className=\"h-4 w-4 text-destructive\" />\n              </div>\n            )}\n            <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center z-[1]\">\n              <PopoverTrigger asChild>\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  className=\"h-7 w-7 p-0 rounded-full hover:bg-primary hover:text-primary-foreground transition-colors duration-200 cursor-pointer\"\n                  aria-label=\"Pick a date\"\n                >\n                  <CalendarIcon className=\"h-4 w-4 transition-colors duration-200\" />\n                </Button>\n              </PopoverTrigger>\n            </div>\n          </div>\n        </FormControl>\n        <PopoverContent className=\"w-auto p-0\" align=\"start\">\n          <Calendar\n            mode=\"single\"\n            selected={tryParseDate(field.value ?? \"\") || undefined}\n            onSelect={onSelectDate}\n            initialFocus\n            locale={locale}\n            defaultMonth={currentMonth}\n            disabled={disabled}\n          />\n        </PopoverContent>\n      </Popover>\n      <FormMessage className=\"text-xs mt-1 error-message\">\n        {form.formState.errors[fieldName]?.message as string}\n      </FormMessage>\n    </FormItem>\n  );\n}\n","\"use client\";\n\nexport function InvoiceFormSkeleton() {\n  return (\n    <div className=\"space-y-6\">\n      {/* Date fields grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"space-y-2\">\n          <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-2/5\" />\n          <div className=\"h-10 bg-muted/60 rounded-md animate-pulse w-full\" />\n        </div>\n        <div className=\"space-y-2\">\n          <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-2/5\" />\n          <div className=\"h-10 bg-muted/60 rounded-md animate-pulse w-full\" />\n        </div>\n      </div>\n\n      {/* Include End Date toggle */}\n      <div className=\"h-20 bg-muted/40 rounded-lg animate-pulse border border-muted/30 p-4 flex justify-between items-center\">\n        <div className=\"space-y-2\">\n          <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-40\" />\n          <div className=\"h-3 bg-muted/60 rounded-sm animate-pulse w-56\" />\n        </div>\n        <div className=\"h-6 w-12 bg-muted/60 rounded-full animate-pulse\" />\n      </div>\n\n      {/* Split Period dropdown */}\n      <div className=\"h-20 bg-muted/40 rounded-lg animate-pulse border border-muted/30 p-4 flex justify-between items-center\">\n        <div className=\"space-y-2\">\n          <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-32\" />\n          <div className=\"h-3 bg-muted/60 rounded-sm animate-pulse w-64\" />\n        </div>\n        <div className=\"h-10 w-28 bg-muted/60 rounded-md animate-pulse\" />\n      </div>\n\n      {/* Amounts section */}\n      <div className=\"rounded-lg border border-muted/30 p-6 shadow-xs space-y-4 bg-muted/10\">\n        <div className=\"h-5 bg-muted/60 rounded-sm animate-pulse w-1/4\" />\n        <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-3/5 mb-4\" />\n        <div className=\"space-y-4\">\n          <div className=\"space-y-2\">\n            <div className=\"h-3 bg-muted/60 rounded-sm animate-pulse w-8\" />\n            <div className=\"flex gap-2\">\n              <div className=\"h-10 bg-muted/60 rounded-md animate-pulse flex-grow\" />\n              <div className=\"h-10 w-10 bg-muted/60 rounded-md animate-pulse opacity-0\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"h-8 bg-muted/60 rounded-md animate-pulse w-40 mt-6\" />\n      </div>\n\n      {/* Calculate button */}\n      <div className=\"h-11 bg-primary/40 rounded-md animate-pulse w-full\" />\n    </div>\n  );\n}\n","import { CalculationCallbackData, CalculationErrorType } from \"./types\";\nimport {\n  CalculationInput,\n  CalculationResult,\n  ERROR_CODES,\n  InputValidationError,\n  calculateInvoiceSplit,\n} from \"@/lib/calculations\";\nimport { FormSchemaType, tryParseDate } from \"./form-schema\";\n\nexport function processCalculation(\n  values: FormSchemaType,\n  onCalculateAction: (\n    formData: CalculationCallbackData,\n    results: CalculationResult | null,\n    error?: CalculationErrorType,\n  ) => void,\n  t: (key: string, options?: { defaultValue?: string; values?: Record<string, string | number> }) => string,\n): void {\n  const startDate = tryParseDate(values.startDateString || \"\");\n  const endDate = tryParseDate(values.endDateString || \"\");\n\n  // Prepare callbackFormData early, ensure amounts are parsed.\n  // Schema validation should ensure amounts are valid numbers, but parseFloat is still needed.\n  const parsedAmounts = values.amounts.map((a) => parseFloat(a.value));\n\n  const callbackFormData: CalculationCallbackData = {\n    startDate: startDate!, // Will be checked for null below\n    endDate: endDate!, // Will be checked for null below\n    includeEndDate: values.includeEndDate,\n    splitPeriod: values.splitPeriod,\n    amounts: parsedAmounts.filter((a) => !isNaN(a)), // Use only validly parsed amounts for the callback\n  };\n\n  if (!startDate || !endDate) {\n    const error = new InputValidationError(\n      t(\"InvoiceForm.errorInvalidDatesMessages\", {\n        defaultValue: \"Valid start and end dates are required.\",\n      }),\n      ERROR_CODES.INVALID_DATES,\n      {\n        startDateString: values.startDateString,\n        endDateString: values.endDateString,\n      },\n    );\n    onCalculateAction(callbackFormData, null, error);\n    return;\n  }\n\n  // Additional check for NaN amounts after parseFloat, though schema should catch most.\n  if (parsedAmounts.some(isNaN)) {\n    const error = new InputValidationError(\n      t(\"InvoiceForm.errorAmountPositive\"),\n      ERROR_CODES.INVALID_AMOUNT,\n      {\n        invalidAmounts: values.amounts\n          .filter((a) => isNaN(parseFloat(a.value)))\n          .map((a) => a.value),\n      },\n    );\n    // Pass amounts that were attempted, even if some failed parsing, for callback context\n    onCalculateAction(callbackFormData, null, error);\n    return;\n  }\n\n  const inputData: CalculationInput = {\n    startDate, // Already confirmed not null\n    endDate, // Already confirmed not null\n    includeEndDate: values.includeEndDate,\n    splitPeriod: values.splitPeriod,\n    amounts: parsedAmounts, // Use the successfully parsed amounts\n  };\n\n  // Call the refactored calculateInvoiceSplit\n  const result = calculateInvoiceSplit(inputData);\n\n  if (result.success) {\n    // Success case: result is CalculateInvoiceSplitSuccess\n    // Construct the CalculationResult object for the callback\n    const successResultForCallback: CalculationResult = {\n      totalDays: result.totalDays,\n      originalTotalAmount: result.originalTotalAmount,\n      adjustedTotalAmount: result.adjustedTotalAmount,\n      resultsPerAmount: result.resultsPerAmount,\n      aggregatedSplits: result.aggregatedSplits,\n      calculationSteps: result.calculationSteps, // This is Omit<CalculationStepDetails, 'error'> & { error?: undefined }\n      splitPeriodUsed: result.splitPeriodUsed,\n    };\n    onCalculateAction(callbackFormData, successResultForCallback, undefined);\n  } else {\n    // Error case: result is CalculateInvoiceSplitFailure\n    // The error object is result.error (which is CalculationError)\n    // Pass the error and null for results.\n    // The callbackFormData can still be useful for context.\n    onCalculateAction(callbackFormData, null, result.error);\n  }\n}\n","\"use client\";\n\nimport {\n  ControllerRenderProps,\n  FormProvider,\n  useFieldArray,\n  useForm,\n  useWatch,\n} from \"react-hook-form\";\nimport { DATE_FORMAT_DE, DATE_FORMAT_ISO } from \"./date-formats\";\nimport {\n  DEFAULT_FORM_VALUES,\n  FormSchemaType,\n  formSchema,\n  tryParseDate,\n} from \"./form-schema\";\nimport {\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport {\n  INVOICE_FORM_STORAGE_KEY,\n  initializeFormData,\n} from \"./form-initialization\";\nimport { Loader2, PlusCircle } from \"lucide-react\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { de, enUS } from \"date-fns/locale\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\n\nimport { AmountField } from \"./amount-field\";\nimport { Button } from \"@/components/ui/button\";\nimport { DateField } from \"./date-field\";\nimport { InvoiceFormProps } from \"./types\";\nimport { InvoiceFormSkeleton } from \"./form-loading-skeleton\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { cn } from \"@/lib/utils\";\nimport { debounce } from \"lodash\";\nimport { processCalculation } from \"./calculate-logic\";\nimport { useTranslation } from \"@/translations\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\n\nexport function InvoiceForm({\n  onCalculateAction,\n  initialDemoData,\n  onDemoDataApplied,\n}: InvoiceFormProps) {\n  const { t, i18n } = useTranslation();\n  const [mounted, setMounted] = useState(false);\n  const [isCalculating, setIsCalculating] = useState(false);\n  const [buttonText, setButtonText] = useState(\"\");\n  const [showSuccessGlow, setShowSuccessGlow] = useState(false);\n  const initRef = useRef(false);\n\n  const currentLocale = i18n.language.startsWith(\"de\") ? de : enUS;\n  const displayDateFormat = i18n.language.startsWith(\"de\")\n    ? DATE_FORMAT_DE\n    : DATE_FORMAT_ISO;\n  const dateExamplePlaceholder = i18n.language.startsWith(\"de\")\n    ? \"z.B. 31.12.2023\"\n    : \"e.g. 2023-12-31\";\n\n  const currentFormSchema = formSchema(t);\n  const form = useForm<FormSchemaType>({\n    resolver: zodResolver(currentFormSchema),\n    defaultValues: DEFAULT_FORM_VALUES,\n    mode: \"onBlur\",\n  });\n\n  const { fields, append, remove } = useFieldArray({\n    control: form.control,\n    name: \"amounts\",\n  });\n\n  // Debounced function to save data to localStorage\n  const debouncedSaveFunction = useMemo(\n    () =>\n      debounce((dataToSave: FormSchemaType) => {\n        if (mounted && initRef.current) {\n          try {\n            // Ensure amounts is properly formatted\n            const amountsToSave =\n              dataToSave.amounts?.length > 0\n                ? dataToSave.amounts\n                : [{ value: \"\" }];\n\n            // Format and prepare the data for saving\n            const saveData = {\n              ...dataToSave,\n              amounts: amountsToSave,\n              // Ensure valid splitPeriod\n              splitPeriod: dataToSave.splitPeriod || \"yearly\",\n            };\n\n            // Save data to localStorage\n            console.log(\"[InvoiceForm] Saving form data to localStorage\");\n            localStorage.setItem(\n              INVOICE_FORM_STORAGE_KEY,\n              JSON.stringify(saveData),\n            );\n          } catch (error) {\n            console.error(\n              \"[InvoiceForm] Failed to save form data to localStorage:\",\n              error,\n            );\n          }\n        }\n      }, 800), // Increased debounce to reduce storage operations\n    [mounted], // Add mounted flag as dependency\n  );\n\n  // Watch for form value changes to trigger saves when needed\n  const formValues = useWatch({ control: form.control });\n\n  // Effect to trigger debounced save when form values change\n  useEffect(() => {\n    // Skip saving during initial render or when component is not mounted\n    if (!mounted || !initRef.current) {\n      return;\n    }\n\n    // Only save if we have real form values\n    if (formValues) {\n      debouncedSaveFunction(form.getValues());\n    }\n  }, [formValues, debouncedSaveFunction, form, mounted]);\n\n  // Cleanup function in a separate effect\n  useEffect(() => {\n    return () => {\n      // Cancel any pending save operations\n      debouncedSaveFunction.cancel();\n      console.log(\n        \"[InvoiceForm] Component unmounting, cancelled pending save operations.\",\n      );\n    };\n  }, [debouncedSaveFunction]);\n\n  const onSubmit = useCallback(\n    (values: FormSchemaType) => {\n      setIsCalculating(true);\n      setButtonText(t(\"InvoiceForm.calculatingButton\"));\n\n      processCalculation(\n        values,\n        (formData, results, error) => {\n          if (results) {\n            setShowSuccessGlow(true); // Trigger success animation\n            setTimeout(() => setShowSuccessGlow(false), 1500);\n          }\n          onCalculateAction(formData, results, error);\n        },\n        t,\n      );\n\n      setIsCalculating(false);\n      setButtonText(\n        t(\"InvoiceForm.calculateButton\", { defaultValue: \"Calculate Split\" }),\n      );\n    },\n    [onCalculateAction, t],\n  );\n\n  // Effect to ensure all form fields have valid values\n  useEffect(() => {\n    // Skip during initial render or when component is not mounted\n    if (!mounted) {\n      return;\n    }\n\n    // Get current values\n    const currentValues = form.getValues();\n    let updatedValues = false;\n\n    // Ensure splitPeriod has a valid value\n    if (\n      !currentValues.splitPeriod ||\n      ![\"yearly\", \"quarterly\", \"monthly\"].includes(currentValues.splitPeriod)\n    ) {\n      form.setValue(\"splitPeriod\", \"yearly\");\n      updatedValues = true;\n    }\n\n    // Ensure includeEndDate is a boolean\n    if (typeof currentValues.includeEndDate !== \"boolean\") {\n      form.setValue(\"includeEndDate\", true);\n      updatedValues = true;\n    }\n\n    // Ensure amounts array is valid\n    if (!currentValues.amounts || currentValues.amounts.length === 0) {\n      form.setValue(\"amounts\", [{ value: \"\" }]);\n      updatedValues = true;\n    }\n\n    // Log if we had to make any corrections\n    if (updatedValues) {\n      console.log(\n        \"[InvoiceForm] Applied default values for missing form fields\",\n      );\n    }\n  }, [mounted, form]);\n\n  // Initialization effect\n  useEffect(() => {\n    if (!mounted) {\n      console.log(\"[InvoiceForm] Component mounting\");\n      setMounted(true);\n      setButtonText(\n        t(\"InvoiceForm.calculateButton\", { defaultValue: \"Calculate Split\" }),\n      );\n      return;\n    }\n\n    // Only run initialization logic once\n    if (initRef.current) {\n      return;\n    }\n\n    initRef.current = true;\n    console.log(\"[InvoiceForm] Initializing form data...\");\n\n    initializeFormData(form, initialDemoData, onDemoDataApplied, onSubmit);\n  }, [mounted, initialDemoData, onDemoDataApplied, t, form, onSubmit]);\n\n  const getDateHelpText = () => {\n    if (i18n.language.startsWith(\"de\")) {\n      return t(\"InvoiceForm.supportedDateFormats\", {\n        defaultValue: \"Unterstützte Formate: TT.MM.JJJJ, JJJJ-MM-TT\",\n      });\n    } else {\n      return t(\"InvoiceForm.supportedDateFormats\", {\n        defaultValue: \"Supported formats: YYYY-MM-DD, DD.MM.YYYY\",\n      });\n    }\n  };\n\n  const handleStartDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n\n    // Clear any previous errors\n    form.clearErrors(\"startDateString\");\n\n    // Set the new value\n    form.setValue(\"startDateString\", value, { shouldValidate: false });\n\n    // Validate the date format\n    const parsedDate = tryParseDate(value);\n    if (value && !parsedDate) {\n      form.setError(\"startDateString\", {\n        type: \"manual\",\n        message: getDateHelpText(),\n      });\n    }\n    // If this is a valid date, check if end date is now invalid in comparison\n    else if (parsedDate) {\n      const endDateValue = form.getValues(\"endDateString\");\n      const endDate = tryParseDate(endDateValue ?? \"\");\n\n      // If end date exists and is now before start date, set end date error\n      if (endDate && endDate < parsedDate) {\n        form.setError(\"endDateString\", {\n          type: \"manual\",\n          message: t(\"InvoiceForm.errorEndDateBeforeStart\"),\n        });\n      }\n    }\n\n    // Always trigger validation to update form state\n    form.trigger(\"startDateString\");\n  };\n\n  const handleEndDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n\n    // Clear any previous errors\n    form.clearErrors(\"endDateString\");\n\n    // Set the new value\n    form.setValue(\"endDateString\", value, { shouldValidate: false });\n\n    // Validate the date format\n    const parsedDate = tryParseDate(value);\n    if (value && !parsedDate) {\n      form.setError(\"endDateString\", {\n        type: \"manual\",\n        message: getDateHelpText(),\n      });\n    }\n    // If this is a valid date, check if it's before the start date\n    else if (parsedDate) {\n      const startDateValue = form.getValues(\"startDateString\");\n      const startDate = tryParseDate(startDateValue ?? \"\");\n\n      // If start date exists and end date is before it, set error\n      if (startDate && parsedDate < startDate) {\n        form.setError(\"endDateString\", {\n          type: \"manual\",\n          message: t(\"InvoiceForm.errorEndDateBeforeStart\"),\n        });\n      }\n    }\n\n    // Always trigger validation to update form state\n    form.trigger(\"endDateString\");\n  };\n\n  if (!mounted) {\n    return <InvoiceFormSkeleton />;\n  }\n\n  return (\n    <FormProvider {...form}>\n      <form\n        onSubmit={form.handleSubmit(onSubmit)}\n        className={cn(\n          \"space-y-6\",\n          mounted && \"opacity-100 transition-opacity duration-500 ease-in-out\",\n          !mounted && \"opacity-0\",\n        )}\n      >\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"startDateString\"\n            render={({ field }: { field: ControllerRenderProps<FormSchemaType, \"startDateString\"> }) => (\n              <DateField\n                fieldName=\"startDateString\"\n                label={t(\"InvoiceForm.startDateLabel\")}\n                placeholder={dateExamplePlaceholder}\n                field={field}\n                form={form}\n                onFieldChangeAction={handleStartDateChange}\n                displayDateFormat={displayDateFormat}\n                locale={currentLocale}\n                autoFocus={true}\n              />\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"endDateString\"\n            render={({ field }: { field: ControllerRenderProps<FormSchemaType, \"endDateString\"> }) => (\n              <DateField\n                fieldName=\"endDateString\"\n                label={t(\"InvoiceForm.endDateLabel\")}\n                placeholder={dateExamplePlaceholder}\n                field={field}\n                form={form}\n                onFieldChangeAction={handleEndDateChange}\n                displayDateFormat={displayDateFormat}\n                locale={currentLocale}\n                disabled={(date) => {\n                  const startDate = tryParseDate(\n                    form.watch(\"startDateString\") ?? \"\",\n                  );\n                  return startDate ? date < startDate : false;\n                }}\n              />\n            )}\n          />\n        </div>\n        <FormField\n          control={form.control}\n          name=\"includeEndDate\"\n          render={({ field }: { field: ControllerRenderProps<FormSchemaType, \"includeEndDate\"> }) => (\n            <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n              <div className=\"space-y-0.5\">\n                <FormLabel htmlFor=\"includeEndDate\" className=\"text-base\">\n                  {t(\"InvoiceForm.includeEndDateLabel\")}\n                </FormLabel>\n                <FormDescription>\n                  {t(\"InvoiceForm.includeEndDateDescription\")}\n                </FormDescription>\n              </div>\n              <div className=\"flex items-center border-none outline-none\">\n                <Switch\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                  id=\"includeEndDate\"\n                  name=\"includeEndDate\"\n                />\n              </div>\n            </FormItem>\n          )}\n        />\n        <FormField\n          control={form.control}\n          name=\"splitPeriod\"\n          render={({ field }: { field: ControllerRenderProps<FormSchemaType, \"splitPeriod\"> }) => (\n            <FormItem className=\"flex flex-col items-start justify-start rounded-lg border p-4\">\n              <div className=\"space-y-0.5 pr-4 mb-3\">\n                <FormLabel htmlFor=\"splitPeriod\" className=\"text-base\">\n                  {t(\"InvoiceForm.splitPeriodLabel\", {\n                    defaultValue: \"Split Period\",\n                  })}\n                </FormLabel>\n                <FormDescription>\n                  {t(\"InvoiceForm.splitPeriodDescription\", {\n                    defaultValue: \"Choose how to split the invoice amounts.\",\n                  })}\n                </FormDescription>\n              </div>\n              <div className=\"w-full\">\n                <Select\n                  onValueChange={field.onChange}\n                  defaultValue={field.value}\n                  value={field.value}\n                  name={field.name}\n                >\n                  <SelectTrigger className=\"w-full\" id=\"splitPeriod\">\n                    <SelectValue\n                      placeholder={t(\"InvoiceForm.periodYearly\", {\n                        defaultValue: \"Yearly\",\n                      })}\n                    />\n                  </SelectTrigger>\n                  <SelectContent\n                    className=\"!fixed !z-[9999] !overflow-visible shadow-lg\"\n                    position=\"popper\"\n                    sideOffset={8}\n                    align=\"center\"\n                    avoidCollisions\n                    collisionPadding={20}\n                  >\n                    <SelectItem\n                      key=\"yearly\"\n                      value=\"yearly\"\n                      className=\"select-dropdown-item !cursor-pointer\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {`${t(\"InvoiceForm.periodYearly\", { defaultValue: \"Yearly\" })}`}\n                    </SelectItem>\n                    <SelectItem\n                      key=\"quarterly\"\n                      value=\"quarterly\"\n                      className=\"select-dropdown-item !cursor-pointer\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {`${t(\"InvoiceForm.periodQuarterly\", { defaultValue: \"Quarterly\" })}`}\n                    </SelectItem>\n                    <SelectItem\n                      key=\"monthly\"\n                      value=\"monthly\"\n                      className=\"select-dropdown-item !cursor-pointer\"\n                      style={{ cursor: \"pointer\" }}\n                    >\n                      {`${t(\"InvoiceForm.periodMonthly\", { defaultValue: \"Monthly\" })}`}\n                    </SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </div>\n            </FormItem>\n          )}\n        />\n        <div className=\"space-y-5 rounded-lg border p-6 shadow-xs\">\n          <h3 className=\"text-base font-medium\" id=\"amounts-section-label\">\n            {t(\"InvoiceForm.amountsLabel\")}\n          </h3>\n          <FormDescription>\n            {t(\"InvoiceForm.amountsDescription\")}\n          </FormDescription>\n          <div\n            aria-labelledby=\"amounts-section-label\"\n            className=\"space-y-4 mt-4\"\n          >\n            {fields.map((item, index) => (\n              <FormField\n                control={form.control}\n                key={item.id}\n                name={`amounts.${index}.value`}\n                render={({ field }: { field: ControllerRenderProps<FormSchemaType, `amounts.${number}.value`> }) => (\n                  <AmountField\n                    index={index}\n                    field={field}\n                    canRemove={fields.length > 1}\n                    onRemoveAction={() => remove(index)}\n                    hasError={!!form.formState.errors.amounts?.[index]?.value}\n                    errorMessage={\n                      form.formState.errors.amounts?.[index]?.value\n                        ?.message as string\n                    }\n                  />\n                )}\n              />\n            ))}\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => {\n                append({ value: \"\" });\n                setTimeout(() => {\n                  const ni = document.querySelectorAll('input[type=\"number\"]');\n                  if (ni.length > 0)\n                    (ni[ni.length - 1] as HTMLInputElement).focus();\n                }, 10);\n              }}\n              className=\"mt-4\"\n            >\n              <PlusCircle className=\"mr-2 h-4 w-4\" />{\" \"}\n              {t(\"InvoiceForm.addAmountButton\")}\n            </Button>\n            {form.formState.errors.amounts &&\n              !form.formState.errors.amounts.root &&\n              form.formState.errors.amounts.message && (\n                <p className=\"text-sm font-medium text-destructive\">\n                  {form.formState.errors.amounts.message}\n                </p>\n              )}\n            {form.formState.errors.amounts?.root?.message && (\n              <p className=\"text-sm font-medium text-destructive\">\n                {form.formState.errors.amounts.root.message}\n              </p>\n            )}\n          </div>\n        </div>\n        <Button\n          type=\"submit\"\n          variant=\"default\"\n          className={`w-full bg-primary text-primary-foreground hover:bg-primary/90 hover:scale-[1.02] px-6 py-2 h-11 font-medium rounded-md shadow-sm transition-all duration-200 hover:shadow-lg hover:shadow-primary/20 ${showSuccessGlow ? \"animate-success-glow\" : \"\"}`}\n          disabled={form.formState.isSubmitting || isCalculating}\n          aria-live=\"polite\"\n        >\n          {isCalculating ? (\n            <span className=\"flex items-center justify-center\">\n              <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n              {buttonText}\n            </span>\n          ) : (\n            buttonText\n          )}\n        </Button>\n      </form>\n    </FormProvider>\n  );\n}\n","\"use client\";\n\n// This file is now just a barrel file that re-exports from the new location\nexport { InvoiceForm } from \"./invoice-form/index\";\nexport type {\n  CalculationCallbackData,\n  InvoiceFormProps,\n} from \"./invoice-form/types\";\n","\"use client\";\n\nimport * as React from \"react\";\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-[22px] w-[42px] shrink-0 cursor-pointer items-center rounded-sm border-0 transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input dark:data-[state=unchecked]:bg-slate-700\",\n      \"rounded-sm\",\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-[18px] w-[18px] rounded-xs bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-[19px] data-[state=unchecked]:translate-x-[3px]\",\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n"],"names":["DATE_FORMAT_ISO","DATE_FORMAT_DE","supportedDateFormats","tryParseDate","parseDate","value","DEFAULT_FORM_VALUES","startDateString","endDateString","includeEndDate","splitPeriod","amounts","z","object","string","optional","boolean","enum","array","min","message","t","refine","isNaN","parseFloat","val","data","path","startDate","endDate","INVOICE_FORM_STORAGE_KEY","resetToDefaultValues","form","localStorage","removeItem","reset","AmountField","index","field","canRemove","onRemoveAction","hasError","errorMessage","isValid","FormItem","className","div","FormLabel","htmlFor","FormControl","Input","type","step","id","name","CheckCircle","AlertCircle","Button","variant","size","onClick","aria-label","XCircle","FormMessage","Popover","props","PopoverPrimitive","data-slot","PopoverTrigger","PopoverContent","align","sideOffset","isMounted","setIsMounted","React","isMountedRef","current","mountTimer","setTimeout","clearTimeout","document","querySelectorAll","forEach","element","parentNode","removeChild","cn","style","backgroundColor","opacity","Calendar","classNames","showOutsideDays","locale","DayPicker","months","month","caption","caption_label","nav","nav_button","buttonVariants","nav_button_previous","nav_button_next","month_grid","weekdays","weekday","week","cell","day","day_range_end","day_selected","day_today","day_outside","day_disabled","day_range_middle","day_hidden","components","Chevron","orientation","ChevronLeft","ChevronRight","weekStartsOn","options","DateField","fieldName","label","placeholder","onFieldChangeAction","displayDateFormat","disabled","autoFocus","isPopoverOpen","setIsPopoverOpen","useState","currentMonth","getValues","undefined","Date","useEffect","open","onOpenChange","onChange","e","onBlur","trigger","formState","errors","asChild","CalendarIcon","mode","selected","onSelect","onSelectDate","date","formatted","format","setValue","shouldValidate","initialFocus","defaultMonth","InvoiceFormSkeleton","displayName","InvoiceForm","onCalculateAction","initialDemoData","onDemoDataApplied","i18n","useTranslation","mounted","setMounted","isCalculating","setIsCalculating","buttonText","setButtonText","showSuccessGlow","setShowSuccessGlow","initRef","useRef","currentLocale","language","startsWith","de","enUS","dateExamplePlaceholder","currentFormSchema","formSchema","useForm","resolver","zodResolver","defaultValues","fields","append","remove","useFieldArray","control","debouncedSaveFunction","useMemo","debounce","amountsToSave","dataToSave","length","saveData","console","log","setItem","JSON","stringify","error","formValues","useWatch","cancel","onSubmit","useCallback","processCalculation","values","parsedAmounts","map","a","callbackFormData","filter","InputValidationError","defaultValue","ERROR_CODES","INVALID_DATES","some","INVALID_AMOUNT","invalidAmounts","inputData","result","calculateInvoiceSplit","success","totalDays","successResultForCallback","originalTotalAmount","adjustedTotalAmount","resultsPerAmount","aggregatedSplits","calculationSteps","splitPeriodUsed","formData","results","currentValues","updatedValues","includes","initializeFormData","demoFormData","amount","String","then","handleSubmit","warn","urlParams","URLSearchParams","window","location","search","forceClean","get","cachedDataString","getItem","parsedCache","parse","getDateHelpText","handleStartDateChange","target","clearErrors","parsedDate","setError","handleEndDateChange","FormProvider","FormField","render","watch","FormDescription","Switch","checked","onCheckedChange","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","position","avoidCollisions","collisionPadding","SelectItem","cursor","h3","aria-labelledby","item","ni","focus","PlusCircle","root","p","isSubmitting","aria-live","span","Loader2","ref","SwitchPrimitives"],"sourceRoot":""}
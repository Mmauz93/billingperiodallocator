{"version":3,"file":"static/chunks/2228.ede73d850f744561.js","mappings":"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","sources":["webpack://_N_E/./src/components/ui/switch.tsx","webpack://_N_E/./src/components/ui/popover.tsx","webpack://_N_E/./src/components/ui/calendar.tsx","webpack://_N_E/./src/components/invoice-form.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Switch({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\r\n  return (\r\n    <SwitchPrimitive.Root\r\n      data-slot=\"switch\"\r\n      className={cn(\r\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-muted/70 focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-sm transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 cursor-pointer\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      <SwitchPrimitive.Thumb\r\n        data-slot=\"switch-thumb\"\r\n        className={cn(\r\n          \"bg-white data-[state=checked]:shadow-md dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-white pointer-events-none block size-4 rounded-full ring-0 shadow-sm transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\",\r\n        )}\r\n      />\r\n    </SwitchPrimitive.Root>\r\n  );\r\n}\r\n\r\nexport { Switch };\r\n","\"use client\";\n\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Popover({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\n  return <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\n}\n\nfunction PopoverTrigger({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\n  return <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\n}\n\nfunction PopoverContent({\n  className,\n  align = \"center\",\n  sideOffset = 4,\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\n  const [isMounted, setIsMounted] = React.useState(false);\n  const isMountedRef = React.useRef(true);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    const mountTimer = setTimeout(() => {\n      if (isMountedRef.current) {\n        setIsMounted(true);\n      }\n    }, 10); // Small delay for mount animation\n\n    return () => {\n      isMountedRef.current = false;\n      clearTimeout(mountTimer);\n      // Immediately set isMounted to false to trigger clean removal\n      setIsMounted(false);\n      \n      // Make sure we clean up any portals that might still be in the DOM\n      if (typeof document !== 'undefined') {\n        // Give React a chance to unmount naturally before we force cleanup\n        setTimeout(() => {\n          // Find any orphaned popover elements and remove them\n          document.querySelectorAll('[data-radix-popover-content]').forEach(element => {\n            try {\n              if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n              }\n            } catch /* (error) */ {\n              // Silently handle any errors during forced cleanup\n            }\n          });\n        }, 0);\n      }\n    };\n  }, []);\n\n  if (!isMounted) {\n    return null; // Render nothing until mounted or after unmount\n  }\n\n  return (\n    <PopoverPrimitive.Portal>\n      <PopoverPrimitive.Content\n        data-slot=\"popover-content\"\n        align={align}\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\n          className,\n        )}\n        {...props}\n      />\n    </PopoverPrimitive.Portal>\n  );\n}\n\nfunction PopoverAnchor({\n  ...props\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\n  return <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\n}\n\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };\n","\"use client\";\r\n\r\nimport * as React from \"react\";\r\n\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\n\r\nimport { DayPicker } from \"react-day-picker\";\r\nimport { Locale } from \"date-fns\";\r\nimport { buttonVariants } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker> & {\r\n  locale?: Locale;\r\n};\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  locale,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"p-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-sm font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\",\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        month_grid: \"w-full border-collapse space-y-1\",\r\n        weekdays: \"flex\",\r\n        weekday:\r\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\r\n        week: \"flex w-full mt-2\",\r\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100 hover:!bg-primary hover:!text-primary-foreground dark:hover:!bg-primary dark:hover:!text-primary-foreground transition-colors duration-200 active:scale-95 active:ring-1 active:ring-primary/50\",\r\n        ),\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:!bg-primary hover:!text-primary-foreground focus:bg-primary focus:text-primary-foreground active:scale-95\",\r\n        day_today: \"bg-accent text-accent-foreground hover:!bg-primary hover:!text-primary-foreground active:scale-95\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30 hover:!bg-primary/50 hover:!text-primary-foreground active:scale-95\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        Chevron: ({ className, orientation, ...props }) =>\r\n          orientation === \"left\" ? (\r\n            <ChevronLeft className={cn(className, \"h-4 w-4\")} {...props} />\r\n          ) : (\r\n            <ChevronRight className={cn(className, \"h-4 w-4\")} {...props} />\r\n          ),\r\n      }}\r\n      locale={locale}\r\n      weekStartsOn={locale?.options?.weekStartsOn ?? 1}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\nCalendar.displayName = \"Calendar\";\r\n\r\nexport { Calendar };\r\n","\"use client\";\r\n\r\nimport { AlertCircle, CalendarIcon, CheckCircle, Loader2, PlusCircle, XCircle } from \"lucide-react\";\r\nimport { CalculationError, CalculationInput, CalculationResult, ERROR_CODES, InputValidationError, calculateInvoiceSplit } from \"@/lib/calculations\";\r\nimport {\r\n    FormControl,\r\n    FormDescription,\r\n    FormField,\r\n    FormItem,\r\n    FormLabel,\r\n    FormMessage,\r\n} from \"@/components/ui/form\";\r\nimport { FormProvider, useFieldArray, useForm, useWatch } from \"react-hook-form\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\r\nimport { de, enUS } from 'date-fns/locale';\r\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Calendar } from \"@/components/ui/calendar\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport React from \"react\";\r\nimport { Switch } from \"@/components/ui/switch\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport { debounce } from 'lodash';\r\nimport { format } from \"date-fns\";\r\nimport { parseDate } from \"@/lib/date-utils\";\r\nimport { useTranslation } from '@/translations';\r\nimport { z } from \"zod\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\n\r\n// Constants for date formats\r\nconst DATE_FORMAT_ISO = \"yyyy-MM-dd\";\r\nconst DATE_FORMAT_DE = \"dd.MM.yyyy\";\r\nconst DATE_FORMAT_US = \"MM/dd/yyyy\";\r\nconst DATE_FORMAT_DOTS = \"dd.MM.yy\";\r\nconst DATE_FORMAT_SLASHES = \"MM/dd/yy\";\r\nconst DATE_FORMAT_DASHES = \"dd-MM-yyyy\";\r\n\r\n// Define a constant for default form values\r\nconst DEFAULT_FORM_VALUES: FormSchemaType = {\r\n    startDateString: '',\r\n    endDateString: '',\r\n    includeEndDate: true,\r\n    splitPeriod: 'yearly' as const,\r\n    amounts: [{ value: '' }]\r\n};\r\n\r\n// List of all supported date formats for parsing\r\nconst supportedDateFormats = [\r\n    DATE_FORMAT_ISO,\r\n    DATE_FORMAT_DE,\r\n    DATE_FORMAT_US,\r\n    DATE_FORMAT_DOTS,\r\n    DATE_FORMAT_SLASHES,\r\n    DATE_FORMAT_DASHES\r\n];\r\n\r\n// Function to try parsing a date string with multiple formats\r\nconst tryParseDate = (value: string): Date | null => {\r\n    if (!value) return null;\r\n\r\n    // Use our new parseDate function that handles timezone consistently\r\n    return parseDate(value, supportedDateFormats);\r\n};\r\n\r\n// Update CalculationInput type to include splitPeriod\r\ndeclare module '@/lib/calculations' {\r\n    interface CalculationInput {\r\n        splitPeriod?: 'yearly' | 'quarterly' | 'monthly';\r\n    }\r\n}\r\n\r\n// Update the error type definition to match invoice-calculator-client.tsx\r\ntype CalculationErrorType = string | Error | CalculationError | { message?: string; [key: string]: unknown } | null | undefined;\r\n\r\n// Schema for form validation\r\nconst formSchema = (t: ReturnType<typeof useTranslation>['t']) => z\r\n    .object({\r\n        startDateString: z.string().optional(),\r\n        endDateString: z.string().optional(),\r\n        includeEndDate: z.boolean(),\r\n        splitPeriod: z.enum(['yearly', 'quarterly', 'monthly']),\r\n        amounts: z.array(z.object({\r\n            value: z.string()\r\n                .min(1, { message: t('InvoiceForm.errorAmountValueRequired') })\r\n                .refine((val) => !isNaN(parseFloat(val)) && parseFloat(val) > 0, {\r\n                    message: t('InvoiceForm.errorAmountPositive'),\r\n                })\r\n        })).min(1, t('InvoiceForm.errorAmountRequired'))\r\n    })\r\n    .refine((data) => {\r\n        const startDate = tryParseDate(data.startDateString || '');\r\n        return !!startDate;\r\n    }, {\r\n        message: t('InvoiceForm.errorStartDateRequired'),\r\n        path: [\"startDateString\"],\r\n    })\r\n    .refine((data) => {\r\n        const endDate = tryParseDate(data.endDateString || '');\r\n        return !!endDate;\r\n    }, {\r\n        message: t('InvoiceForm.errorEndDateRequired'),\r\n        path: [\"endDateString\"],\r\n    })\r\n    .refine((data) => {\r\n        const startDate = tryParseDate(data.startDateString || '');\r\n        const endDate = tryParseDate(data.endDateString || '');\r\n        return !startDate || !endDate || endDate >= startDate;\r\n    }, {\r\n        message: t('InvoiceForm.errorEndDateBeforeStart'),\r\n        path: [\"endDateString\"],\r\n    });\r\n\r\n// Form data type\r\ntype FormSchemaType = z.infer<ReturnType<typeof formSchema>>;\r\n\r\n// Data passed back to parent on calculation\r\nexport type CalculationCallbackData = {\r\n    startDate: Date;\r\n    endDate: Date;\r\n    includeEndDate: boolean;\r\n    splitPeriod: 'yearly' | 'quarterly' | 'monthly';\r\n    amounts: number[];\r\n} | null;\r\n\r\n// Type definition for demo data\r\ntype DemoDataType = {\r\n  startDateString?: string;\r\n  endDateString?: string;\r\n  amount?: string;\r\n  includeEndDate?: boolean;\r\n  splitPeriod?: 'yearly' | 'quarterly' | 'monthly';\r\n  isDemo?: boolean;\r\n} | null;\r\n\r\ninterface InvoiceFormProps {\r\n    onCalculateAction: (formData: CalculationCallbackData, results: CalculationResult | null, error?: CalculationErrorType) => void;\r\n    initialDemoData?: DemoDataType | null;\r\n    onDemoDataApplied?: () => void;\r\n}\r\n\r\nexport function InvoiceForm({ \r\n    onCalculateAction, \r\n    initialDemoData,\r\n    onDemoDataApplied \r\n}: InvoiceFormProps) {\r\n    const { t, i18n } = useTranslation();\r\n    const [mounted, setMounted] = useState(false);\r\n    const [isCalculating, setIsCalculating] = useState(false);\r\n    const [buttonText, setButtonText] = useState('');\r\n    const [showSuccessGlow, setShowSuccessGlow] = useState(false);\r\n    const initRef = useRef(false);\r\n\r\n    const currentLocale = i18n.language.startsWith('de') ? de : enUS;\r\n    const displayDateFormat = i18n.language.startsWith('de') ? DATE_FORMAT_DE : DATE_FORMAT_ISO;\r\n    const dateExamplePlaceholder = i18n.language.startsWith('de') ? 'z.B. 31.12.2023' : 'e.g. 2023-12-31';\r\n    const storageKey = 'invoiceFormDataCache';\r\n    \r\n    // State for popover visibility\r\n    const [isStartDatePopoverOpen, setIsStartDatePopoverOpen] = useState(false);\r\n    const [isEndDatePopoverOpen, setIsEndDatePopoverOpen] = useState(false);\r\n\r\n    const currentFormSchema = formSchema(t);\r\n    const form = useForm<FormSchemaType>({\r\n        resolver: zodResolver(currentFormSchema),\r\n        defaultValues: DEFAULT_FORM_VALUES,\r\n        mode: \"onBlur\",\r\n    });\r\n\r\n    const { fields, append, remove } = useFieldArray({\r\n        control: form.control,\r\n        name: \"amounts\"\r\n    });\r\n\r\n    // Debounced function to save data to localStorage\r\n    const debouncedSaveFunction = useMemo(\r\n        () => debounce((dataToSave: FormSchemaType) => {\r\n            if (mounted && initRef.current) {\r\n                try {\r\n                    // Ensure amounts is properly formatted\r\n                    const amountsToSave = dataToSave.amounts?.length > 0\r\n                        ? dataToSave.amounts\r\n                        : [{ value: '' }];\r\n                    \r\n                    // Format and prepare the data for saving\r\n                    const saveData = { \r\n                        ...dataToSave, \r\n                        amounts: amountsToSave,\r\n                        // Ensure valid splitPeriod\r\n                        splitPeriod: dataToSave.splitPeriod || 'yearly'\r\n                    };\r\n                    \r\n                    // Log and save data to localStorage\r\n                    console.log(\"[InvoiceForm] Saving form data to localStorage\");\r\n                    localStorage.setItem(storageKey, JSON.stringify(saveData));\r\n                } catch (error) {\r\n                    console.error(\"[InvoiceForm] Failed to save form data to localStorage:\", error);\r\n                }\r\n            }\r\n        }, 800), // Increased debounce to reduce storage operations\r\n        [mounted, storageKey] // Add the storage key and mounted flag as dependencies\r\n    );\r\n    \r\n    // Only watch for form value changes to trigger saves when needed\r\n    const formValues = useWatch({ control: form.control });\r\n    \r\n    // Effect to trigger debounced save when form values change\r\n    useEffect(() => {\r\n        // Skip saving during initial render or when component is not mounted\r\n        if (!mounted || !initRef.current) {\r\n            return;\r\n        }\r\n        \r\n        // Only save if we have real form values\r\n        if (formValues) {\r\n            debouncedSaveFunction(form.getValues());\r\n        }\r\n    }, [formValues, debouncedSaveFunction, form, mounted, initRef]);\r\n\r\n    // Cleanup function in a separate effect\r\n    useEffect(() => {\r\n        return () => {\r\n            // Cancel any pending save operations\r\n            debouncedSaveFunction.cancel();\r\n            \r\n            // Close any open popovers to ensure proper cleanup\r\n            setIsStartDatePopoverOpen(false);\r\n            setIsEndDatePopoverOpen(false);\r\n            \r\n            console.log(\"[InvoiceForm] Component unmounting, cancelled pending save operations.\");\r\n            // DO NOT set mounted=false here, as it will cause re-renders in StrictMode\r\n        };\r\n    }, [debouncedSaveFunction]);\r\n\r\n    const onSubmit = useCallback((values: FormSchemaType) => {\r\n        setIsCalculating(true);\r\n        setButtonText(t('InvoiceForm.calculatingButton'));\r\n        const startDate = tryParseDate(values.startDateString || '');\r\n        const endDate = tryParseDate(values.endDateString || '');\r\n\r\n        // Prepare callbackFormData early, ensure amounts are parsed.\r\n        // Schema validation should ensure amounts are valid numbers, but parseFloat is still needed.\r\n        const parsedAmounts = values.amounts.map(a => parseFloat(a.value));\r\n\r\n        const callbackFormData: CalculationCallbackData = {\r\n            startDate: startDate!, // Will be checked for null below\r\n            endDate: endDate!,   // Will be checked for null below\r\n            includeEndDate: values.includeEndDate,\r\n            splitPeriod: values.splitPeriod,\r\n            amounts: parsedAmounts.filter(a => !isNaN(a)) // Use only validly parsed amounts for the callback\r\n        };\r\n\r\n        if (!startDate || !endDate) {\r\n            const error = new InputValidationError(\r\n                t('InvoiceForm.errorInvalidDatesMessages', { defaultValue: 'Valid start and end dates are required.' }),\r\n                ERROR_CODES.INVALID_DATES,\r\n                {\r\n                    startDateString: values.startDateString,\r\n                    endDateString: values.endDateString\r\n                }\r\n            );\r\n            onCalculateAction(callbackFormData, null, error);\r\n            setIsCalculating(false);\r\n            setButtonText(t('InvoiceForm.calculateButton', { defaultValue: 'Calculate Split' }));\r\n            return;\r\n        }\r\n        \r\n        // Additional check for NaN amounts after parseFloat, though schema should catch most.\r\n        if (parsedAmounts.some(isNaN)) {\r\n             const error = new InputValidationError(\r\n                t('InvoiceForm.errorAmountPositive'), \r\n                ERROR_CODES.INVALID_AMOUNT, \r\n                { invalidAmounts: values.amounts.filter(a => isNaN(parseFloat(a.value))).map(a => a.value) }\r\n            );\r\n            // Pass amounts that were attempted, even if some failed parsing, for callback context\r\n            onCalculateAction(callbackFormData, null, error);\r\n            setIsCalculating(false);\r\n            setButtonText(t('InvoiceForm.calculateButton', { defaultValue: 'Calculate Split' }));\r\n            return;\r\n        }\r\n\r\n        const inputData: CalculationInput = {\r\n            startDate, // Already confirmed not null\r\n            endDate,   // Already confirmed not null\r\n            includeEndDate: values.includeEndDate,\r\n            splitPeriod: values.splitPeriod,\r\n            amounts: parsedAmounts, // Use the successfully parsed amounts\r\n        };\r\n\r\n        // Call the refactored calculateInvoiceSplit\r\n        const result = calculateInvoiceSplit(inputData);\r\n\r\n        if (result.success) {\r\n            // Success case: result is CalculateInvoiceSplitSuccess\r\n            // Construct the CalculationResult object for the callback\r\n            const successResultForCallback: CalculationResult = {\r\n                totalDays: result.totalDays,\r\n                originalTotalAmount: result.originalTotalAmount,\r\n                adjustedTotalAmount: result.adjustedTotalAmount,\r\n                resultsPerAmount: result.resultsPerAmount,\r\n                aggregatedSplits: result.aggregatedSplits,\r\n                calculationSteps: result.calculationSteps, // This is Omit<CalculationStepDetails, 'error'> & { error?: undefined }\r\n                splitPeriodUsed: result.splitPeriodUsed,\r\n            };\r\n            onCalculateAction(callbackFormData, successResultForCallback, undefined);\r\n            setShowSuccessGlow(true); // Trigger success animation\r\n            setTimeout(() => setShowSuccessGlow(false), 1500);\r\n        } else {\r\n            // Error case: result is CalculateInvoiceSplitFailure\r\n            // The error object is result.error (which is CalculationError)\r\n            // Pass the error and null for results.\r\n            // The callbackFormData can still be useful for context.\r\n            onCalculateAction(callbackFormData, null, result.error);\r\n        }\r\n\r\n        setIsCalculating(false);\r\n        setButtonText(t('InvoiceForm.calculateButton', { defaultValue: 'Calculate Split' }));\r\n    }, [onCalculateAction, t]);\r\n\r\n    // Effect to ensure all form fields have valid values\r\n    useEffect(() => {\r\n        // Skip during initial render or when component is not mounted\r\n        if (!mounted) {\r\n            return;\r\n        }\r\n        \r\n        // Get current values\r\n        const currentValues = form.getValues();\r\n        let updatedValues = false;\r\n        \r\n        // Ensure splitPeriod has a valid value\r\n        if (!currentValues.splitPeriod || !['yearly', 'quarterly', 'monthly'].includes(currentValues.splitPeriod)) {\r\n            form.setValue('splitPeriod', 'yearly');\r\n            updatedValues = true;\r\n        }\r\n        \r\n        // Ensure includeEndDate is a boolean\r\n        if (typeof currentValues.includeEndDate !== 'boolean') {\r\n            form.setValue('includeEndDate', true);\r\n            updatedValues = true;\r\n        }\r\n        \r\n        // Ensure amounts array is valid\r\n        if (!currentValues.amounts || currentValues.amounts.length === 0) {\r\n            form.setValue('amounts', [{ value: '' }]);\r\n            updatedValues = true;\r\n        }\r\n        \r\n        // Log if we had to make any corrections\r\n        if (updatedValues) {\r\n            console.log('[InvoiceForm] Applied default values for missing form fields');\r\n        }\r\n    }, [mounted, form]);\r\n\r\n    // Single useEffect for initialization and theme handling\r\n    useEffect(() => {\r\n        if (!mounted) {\r\n            console.log(\"[InvoiceForm] Component mounting\");\r\n            setMounted(true);\r\n            setButtonText(t('InvoiceForm.calculateButton', { defaultValue: 'Calculate Split' }));\r\n            \r\n            // Don't try to access localStorage until component is mounted\r\n            return;\r\n        }\r\n        \r\n        // Only run initialization logic once\r\n        if (initRef.current) {\r\n            return;\r\n        }\r\n        \r\n        initRef.current = true;\r\n        console.log(\"[InvoiceForm] Initializing form data...\");\r\n        \r\n        // Separate method for initialization, extracted for readability\r\n        const initializeFormData = () => {\r\n            try {\r\n                // Initialization priority:\r\n                // 1. Demo data from props\r\n                // 2. Clean URL parameter\r\n                // 3. Cached data from localStorage\r\n                // 4. Default values\r\n                \r\n                // Check if demo data is provided\r\n                if (initialDemoData) {\r\n                    console.log(\"[InvoiceForm] Using demo data from prop:\", initialDemoData);\r\n                    \r\n                    const demoFormData = {\r\n                        startDateString: initialDemoData.startDateString || '',\r\n                        endDateString: initialDemoData.endDateString || '',\r\n                        includeEndDate: initialDemoData.includeEndDate === true,\r\n                        splitPeriod: initialDemoData.splitPeriod || 'yearly',\r\n                        amounts: [{ value: initialDemoData.amount ? String(initialDemoData.amount) : '' }]\r\n                    };\r\n\r\n                    // Apply demo data to form\r\n                    form.reset(demoFormData);\r\n                    \r\n                    // Save demo data to localStorage\r\n                    localStorage.setItem(storageKey, JSON.stringify(demoFormData));\r\n                    \r\n                    // Notify parent that demo data was processed\r\n                    if (onDemoDataApplied) {\r\n                        console.log(\"[InvoiceForm] Notifying parent that demo data was applied\");\r\n                        onDemoDataApplied();\r\n                    }\r\n                    \r\n                    // Auto-submit the form after a short delay\r\n                    setTimeout(() => {\r\n                        form.trigger().then(isValid => {\r\n                            if (isValid) {\r\n                                console.log(\"[InvoiceForm] Form is valid, auto-submitting\");\r\n                                form.handleSubmit(onSubmit)();\r\n                            } else {\r\n                                console.warn(\"[InvoiceForm] Auto-submit cancelled - validation failed:\", form.formState.errors);\r\n                            }\r\n                        });\r\n                    }, 350);\r\n                    \r\n                    return; // Exit early if demo data was applied\r\n                }\r\n                \r\n                // Check for clean URL parameter\r\n                if (typeof window !== 'undefined') {\r\n                    const urlParams = new URLSearchParams(window.location.search);\r\n                    const forceClean = urlParams.get('clean') === 'true';\r\n                    \r\n                    if (forceClean) {\r\n                        console.log(\"[InvoiceForm] 'clean=true' parameter detected, clearing cache\");\r\n                        localStorage.removeItem(storageKey);\r\n                        form.reset(DEFAULT_FORM_VALUES);\r\n                        return; // Exit early if clean mode was requested\r\n                    }\r\n                }\r\n                \r\n                // Try loading from cache\r\n                const cachedDataString = localStorage.getItem(storageKey);\r\n                if (cachedDataString) {\r\n                    console.log(\"[InvoiceForm] Loading data from localStorage cache\");\r\n                    try {\r\n                        const parsedCache = JSON.parse(cachedDataString) as FormSchemaType;\r\n                        \r\n                        // Ensure amounts is not empty\r\n                        if (!parsedCache.amounts || parsedCache.amounts.length === 0) {\r\n                            parsedCache.amounts = [{ value: '' }];\r\n                        }\r\n                        \r\n                        // Ensure splitPeriod has a valid value\r\n                        if (!parsedCache.splitPeriod || !['yearly', 'quarterly', 'monthly'].includes(parsedCache.splitPeriod)) {\r\n                            parsedCache.splitPeriod = 'yearly';\r\n                        }\r\n                        \r\n                        form.reset(parsedCache);\r\n                    } catch (error) {\r\n                        console.error(\"[InvoiceForm] Error parsing cached data:\", error);\r\n                        resetToDefaultValues();\r\n                    }\r\n                } else {\r\n                    console.log(\"[InvoiceForm] No cached data found, using defaults\");\r\n                    // No need to reset - form already has default values\r\n                }\r\n            } catch (error) {\r\n                // Fallback if there are any errors accessing localStorage\r\n                console.error(\"[InvoiceForm] Error during initialization:\", error);\r\n                resetToDefaultValues();\r\n            }\r\n        };\r\n        \r\n        // Helper function to reset to default values\r\n        const resetToDefaultValues = () => {\r\n            // Clear any invalid data from storage\r\n            try {\r\n                localStorage.removeItem(storageKey);\r\n            } catch {} // Ignore errors\r\n            \r\n            // Reset form to default values\r\n            form.reset(DEFAULT_FORM_VALUES);\r\n        };\r\n        \r\n        // Call initialization\r\n        initializeFormData();\r\n        \r\n    }, [mounted, initialDemoData, onDemoDataApplied, t, form, storageKey, onSubmit]);\r\n    \r\n    const getDateHelpText = () => {\r\n        if (i18n.language.startsWith('de')) {\r\n            return t('InvoiceForm.supportedDateFormats', { defaultValue: 'Unterstützte Formate: TT.MM.JJJJ, JJJJ-MM-TT' });\r\n        } else {\r\n            return t('InvoiceForm.supportedDateFormats', { defaultValue: 'Supported formats: YYYY-MM-DD, DD.MM.YYYY' });\r\n        }\r\n    };\r\n\r\n    const onSelectStartDate = (date: Date | undefined) => {\r\n        if (date) {\r\n            const formatted = format(date, displayDateFormat);\r\n            form.setValue(\"startDateString\", formatted, { shouldValidate: true });\r\n        }\r\n        setIsStartDatePopoverOpen(false);\r\n    };\r\n\r\n    const onSelectEndDate = (date: Date | undefined) => {\r\n        if (date) {\r\n            const formatted = format(date, displayDateFormat);\r\n            form.setValue(\"endDateString\", formatted, { shouldValidate: true });\r\n        }\r\n        setIsEndDatePopoverOpen(false);\r\n    };\r\n\r\n    const handleStartDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        \r\n        // Clear any previous errors\r\n        form.clearErrors(\"startDateString\");\r\n        \r\n        // Set the new value\r\n        form.setValue(\"startDateString\", value, { shouldValidate: false });\r\n        \r\n        // Validate the date format\r\n        const parsedDate = tryParseDate(value);\r\n        if (value && !parsedDate) {\r\n            form.setError(\"startDateString\", {\r\n                type: \"manual\",\r\n                message: getDateHelpText()\r\n            });\r\n        } \r\n        // If this is a valid date, check if end date is now invalid in comparison\r\n        else if (parsedDate) {\r\n            const endDateValue = form.getValues(\"endDateString\");\r\n            const endDate = tryParseDate(endDateValue ?? '');\r\n            \r\n            // If end date exists and is now before start date, set end date error\r\n            if (endDate && endDate < parsedDate) {\r\n                form.setError(\"endDateString\", {\r\n                    type: \"manual\",\r\n                    message: t('InvoiceForm.errorEndDateBeforeStart')\r\n                });\r\n            }\r\n        }\r\n        \r\n        // Always trigger validation to update form state\r\n        form.trigger(\"startDateString\");\r\n    };\r\n\r\n    const handleEndDateChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        \r\n        // Clear any previous errors\r\n        form.clearErrors(\"endDateString\");\r\n        \r\n        // Set the new value\r\n        form.setValue(\"endDateString\", value, { shouldValidate: false });\r\n        \r\n        // Validate the date format\r\n        const parsedDate = tryParseDate(value);\r\n        if (value && !parsedDate) {\r\n            form.setError(\"endDateString\", {\r\n                type: \"manual\",\r\n                message: getDateHelpText()\r\n            });\r\n        } \r\n        // If this is a valid date, check if it's before the start date\r\n        else if (parsedDate) {\r\n            const startDateValue = form.getValues(\"startDateString\");\r\n            const startDate = tryParseDate(startDateValue ?? '');\r\n            \r\n            // If start date exists and end date is before it, set error\r\n            if (startDate && parsedDate < startDate) {\r\n                form.setError(\"endDateString\", {\r\n                    type: \"manual\",\r\n                    message: t('InvoiceForm.errorEndDateBeforeStart')\r\n                });\r\n            }\r\n        }\r\n        \r\n        // Always trigger validation to update form state\r\n        form.trigger(\"endDateString\");\r\n    };\r\n\r\n    if (!mounted) {\r\n        return (\r\n            <div className=\"space-y-6\">\r\n                {/* Date fields grid */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                   <div className=\"space-y-2\">\r\n                        <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-2/5\" />\r\n                        <div className=\"h-10 bg-muted/60 rounded-md animate-pulse w-full\" />\r\n                   </div>\r\n                    <div className=\"space-y-2\">\r\n                        <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-2/5\" />\r\n                        <div className=\"h-10 bg-muted/60 rounded-md animate-pulse w-full\" />\r\n                   </div>\r\n                </div>\r\n                \r\n                {/* Include End Date toggle */}\r\n                <div className=\"h-20 bg-muted/40 rounded-lg animate-pulse border border-muted/30 p-4 flex justify-between items-center\">\r\n                    <div className=\"space-y-2\">\r\n                        <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-40\" />\r\n                        <div className=\"h-3 bg-muted/60 rounded-sm animate-pulse w-56\" />\r\n                    </div>\r\n                    <div className=\"h-6 w-12 bg-muted/60 rounded-full animate-pulse\" />\r\n                </div>\r\n                \r\n                {/* Split Period dropdown */}\r\n                <div className=\"h-20 bg-muted/40 rounded-lg animate-pulse border border-muted/30 p-4 flex justify-between items-center\">\r\n                    <div className=\"space-y-2\">\r\n                        <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-32\" />\r\n                        <div className=\"h-3 bg-muted/60 rounded-sm animate-pulse w-64\" />\r\n                    </div>\r\n                    <div className=\"h-10 w-28 bg-muted/60 rounded-md animate-pulse\" />\r\n                </div>\r\n                \r\n                {/* Amounts section */}\r\n                <div className=\"rounded-lg border border-muted/30 p-6 shadow-xs space-y-4 bg-muted/10\">\r\n                    <div className=\"h-5 bg-muted/60 rounded-sm animate-pulse w-1/4\" />\r\n                    <div className=\"h-4 bg-muted/60 rounded-sm animate-pulse w-3/5 mb-4\" />\r\n                    <div className=\"space-y-4\">\r\n                        <div className=\"space-y-2\">\r\n                            <div className=\"h-3 bg-muted/60 rounded-sm animate-pulse w-8\" />\r\n                            <div className=\"flex gap-2\">\r\n                                <div className=\"h-10 bg-muted/60 rounded-md animate-pulse flex-grow\" />\r\n                                <div className=\"h-10 w-10 bg-muted/60 rounded-md animate-pulse opacity-0\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"h-8 bg-muted/60 rounded-md animate-pulse w-40 mt-6\" />\r\n                </div>\r\n              \r\n                {/* Calculate button */}\r\n                <div className=\"h-11 bg-primary/40 rounded-md animate-pulse w-full\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...form}>\r\n            <form \r\n                onSubmit={form.handleSubmit(onSubmit)} \r\n                className={cn(\"space-y-6\", mounted && \"opacity-100 transition-opacity duration-500 ease-in-out\", !mounted && \"opacity-0\")}\r\n            >\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <FormField \r\n                        control={form.control} \r\n                        name=\"startDateString\" \r\n                        render={({ field }) => (\r\n                            <FormItem className=\"flex flex-col\">\r\n                                <FormLabel htmlFor=\"startDateString\">{t('InvoiceForm.startDateLabel')}</FormLabel>\r\n                                <Popover open={isStartDatePopoverOpen} onOpenChange={setIsStartDatePopoverOpen}>\r\n                                    <FormControl>\r\n                                        <div className=\"w-full relative\">\r\n                                            <Input \r\n                                                value={field.value} \r\n                                                onChange={(e) => { \r\n                                                    field.onChange(e); \r\n                                                    handleStartDateChange(e); \r\n                                                }} \r\n                                                onBlur={() => form.trigger(\"startDateString\")} \r\n                                                placeholder={dateExamplePlaceholder} \r\n                                                className={`w-full pr-16 ${form.formState.errors.startDateString ? \"border-destructive focus:border-destructive focus:ring-2 focus:ring-destructive/20\" : \"\"}`} \r\n                                                autoFocus \r\n                                                id=\"startDateString\"\r\n                                                name=\"startDateString\"\r\n                                            />\r\n                                            {field.value && !form.formState.errors.startDateString && (\r\n                                                <div className=\"absolute inset-y-0 right-12 flex items-center z-[1]\">\r\n                                                    <CheckCircle className=\"h-4 w-4 text-success\" />\r\n                                                </div>\r\n                                            )}\r\n                                            {form.formState.errors.startDateString && (\r\n                                                <div className=\"absolute inset-y-0 right-12 flex items-center z-[1]\">\r\n                                                    <AlertCircle className=\"h-4 w-4 text-destructive\" />\r\n                                                </div>\r\n                                            )}\r\n                                            <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center z-[1]\">\r\n                                                <PopoverTrigger asChild>\r\n                                                    <Button \r\n                                                        type=\"button\" \r\n                                                        variant=\"ghost\" \r\n                                                        className=\"h-7 w-7 p-0 rounded-full hover:bg-primary hover:text-primary-foreground transition-colors duration-200 cursor-pointer\" \r\n                                                        aria-label=\"Pick a date\"\r\n                                                    >\r\n                                                        <CalendarIcon className=\"h-4 w-4 transition-colors duration-200\" />\r\n                                                    </Button>\r\n                                                </PopoverTrigger>\r\n                                            </div>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n                                        <Calendar \r\n                                            mode=\"single\" \r\n                                            selected={tryParseDate(form.watch(\"startDateString\") ?? '') || undefined} \r\n                                            onSelect={onSelectStartDate} \r\n                                            initialFocus \r\n                                            locale={currentLocale}\r\n                                            defaultMonth={tryParseDate(form.watch(\"startDateString\") ?? '') || new Date()}\r\n                                        />\r\n                                    </PopoverContent>\r\n                                </Popover>\r\n                                <FormMessage className=\"text-xs mt-1 error-message\">{form.formState.errors.startDateString?.message}</FormMessage>\r\n                            </FormItem>\r\n                        )} \r\n                    />\r\n                    <FormField \r\n                        control={form.control} \r\n                        name=\"endDateString\" \r\n                        render={({ field }) => (\r\n                            <FormItem className=\"flex flex-col\">\r\n                                <FormLabel htmlFor=\"endDateString\">{t('InvoiceForm.endDateLabel')}</FormLabel>\r\n                                <Popover open={isEndDatePopoverOpen} onOpenChange={setIsEndDatePopoverOpen}>\r\n                                    <FormControl>\r\n                                        <div className=\"w-full relative\">\r\n                                            <Input \r\n                                                value={field.value} \r\n                                                onChange={(e) => { \r\n                                                    field.onChange(e); \r\n                                                    handleEndDateChange(e); \r\n                                                }} \r\n                                                onBlur={() => form.trigger(\"endDateString\")} \r\n                                                placeholder={dateExamplePlaceholder} \r\n                                                className={`w-full pr-16 ${form.formState.errors.endDateString ? \"border-destructive focus:border-destructive focus:ring-2 focus:ring-destructive/20\" : \"\"}`} \r\n                                                id=\"endDateString\"\r\n                                                name=\"endDateString\"\r\n                                            />\r\n                                            {field.value && !form.formState.errors.endDateString && (\r\n                                                <div className=\"absolute inset-y-0 right-12 flex items-center z-[1]\">\r\n                                                    <CheckCircle className=\"h-4 w-4 text-success\" />\r\n                                                </div>\r\n                                            )}\r\n                                            {form.formState.errors.endDateString && (\r\n                                                <div className=\"absolute inset-y-0 right-12 flex items-center z-[1]\">\r\n                                                    <AlertCircle className=\"h-4 w-4 text-destructive\" />\r\n                                                </div>\r\n                                            )}\r\n                                            <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center z-[1]\">\r\n                                                <PopoverTrigger asChild>\r\n                                                    <Button \r\n                                                        type=\"button\" \r\n                                                        variant=\"ghost\" \r\n                                                        className=\"h-7 w-7 p-0 rounded-full hover:bg-primary hover:text-primary-foreground transition-colors duration-200 cursor-pointer\" \r\n                                                        aria-label=\"Pick a date\"\r\n                                                    >\r\n                                                        <CalendarIcon className=\"h-4 w-4 transition-colors duration-200\" />\r\n                                                    </Button>\r\n                                                </PopoverTrigger>\r\n                                            </div>\r\n                                        </div>\r\n                                    </FormControl>\r\n                                    <PopoverContent className=\"w-auto p-0\" align=\"start\">\r\n                                        <Calendar \r\n                                            mode=\"single\" \r\n                                            selected={tryParseDate(form.watch(\"endDateString\") ?? '') || undefined} \r\n                                            onSelect={onSelectEndDate} \r\n                                            initialFocus \r\n                                            locale={currentLocale}\r\n                                            defaultMonth={tryParseDate(form.watch(\"endDateString\") ?? '') || tryParseDate(form.watch(\"startDateString\") ?? '') || new Date()}\r\n                                            disabled={(date) => { \r\n                                                const startDate = tryParseDate(form.watch(\"startDateString\") ?? ''); \r\n                                                return startDate ? date < startDate : false; \r\n                                            }} \r\n                                        />\r\n                                    </PopoverContent>\r\n                                </Popover>\r\n                                <FormMessage className=\"text-xs mt-1 error-message\">{form.formState.errors.endDateString?.message}</FormMessage>\r\n                            </FormItem>\r\n                        )} \r\n                    />\r\n                </div>\r\n                <FormField \r\n                    control={form.control} \r\n                    name=\"includeEndDate\" \r\n                    render={({ field }) => (\r\n                        <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\r\n                            <div className=\"space-y-0.5\">\r\n                                <FormLabel htmlFor=\"includeEndDate\" className=\"text-base\">{t('InvoiceForm.includeEndDateLabel')}</FormLabel>\r\n                                <FormDescription>{t('InvoiceForm.includeEndDateDescription')}</FormDescription>\r\n                            </div>\r\n                            <FormControl>\r\n                                <Switch \r\n                                    checked={field.value} \r\n                                    onCheckedChange={field.onChange}\r\n                                    id=\"includeEndDate\"\r\n                                    name=\"includeEndDate\"\r\n                                    className=\"include-end-date-switch\"\r\n                                />\r\n                            </FormControl>\r\n                        </FormItem>\r\n                    )} \r\n                />\r\n                <FormField \r\n                    control={form.control} \r\n                    name=\"splitPeriod\" \r\n                    render={({ field }) => (\r\n                        <FormItem className=\"flex flex-col items-start justify-start rounded-lg border p-4\">\r\n                            <div className=\"space-y-0.5 pr-4 mb-3\">\r\n                                <FormLabel htmlFor=\"splitPeriod\" className=\"text-base\">{t('InvoiceForm.splitPeriodLabel', { defaultValue: 'Split Period' })}</FormLabel>\r\n                                <FormDescription>{t('InvoiceForm.splitPeriodDescription', { defaultValue: 'Choose how to split the invoice amounts.' })}</FormDescription>\r\n                            </div>\r\n                            <div className=\"w-full\">\r\n                                <Select \r\n                                    onValueChange={field.onChange} \r\n                                    defaultValue={field.value}\r\n                                    value={field.value}\r\n                                    name={field.name}\r\n                                >\r\n                                    <FormControl>\r\n                                        <SelectTrigger className=\"w-full\" id=\"splitPeriod\">\r\n                                            <SelectValue placeholder={t('InvoiceForm.periodYearly', { defaultValue: 'Yearly' })} />\r\n                                        </SelectTrigger>\r\n                                    </FormControl>\r\n                                    <SelectContent \r\n                                        className=\"!fixed !z-[9999] !overflow-visible shadow-lg\" \r\n                                        position=\"popper\" \r\n                                        sideOffset={8}\r\n                                        align=\"center\"\r\n                                        avoidCollisions\r\n                                        collisionPadding={20}\r\n                                    >\r\n                                        <SelectItem \r\n                                            key=\"yearly\" \r\n                                            value=\"yearly\" \r\n                                            className=\"select-dropdown-item !cursor-pointer\"\r\n                                            style={{cursor: 'pointer'}}\r\n                                        >\r\n                                            {`${t('InvoiceForm.periodYearly', { defaultValue: 'Yearly' })}`}\r\n                                        </SelectItem>\r\n                                        <SelectItem \r\n                                            key=\"quarterly\" \r\n                                            value=\"quarterly\" \r\n                                            className=\"select-dropdown-item !cursor-pointer\"\r\n                                            style={{cursor: 'pointer'}}\r\n                                        >\r\n                                            {`${t('InvoiceForm.periodQuarterly', { defaultValue: 'Quarterly' })}`}\r\n                                        </SelectItem>\r\n                                        <SelectItem \r\n                                            key=\"monthly\" \r\n                                            value=\"monthly\" \r\n                                            className=\"select-dropdown-item !cursor-pointer\"\r\n                                            style={{cursor: 'pointer'}}\r\n                                        >\r\n                                            {`${t('InvoiceForm.periodMonthly', { defaultValue: 'Monthly' })}`}\r\n                                        </SelectItem>\r\n                                    </SelectContent>\r\n                                </Select>\r\n                                <FormMessage />\r\n                            </div>\r\n                        </FormItem>\r\n                    )} \r\n                />\r\n                <div className=\"space-y-5 rounded-lg border p-6 shadow-xs\">\r\n                    <h3 className=\"text-base font-medium\" id=\"amounts-section-label\">{t('InvoiceForm.amountsLabel')}</h3>\r\n                    <FormDescription>{t('InvoiceForm.amountsDescription')}</FormDescription>\r\n                    <div aria-labelledby=\"amounts-section-label\" className=\"space-y-4 mt-4\">\r\n                    {fields.map((item, index) => (\r\n                        <FormField \r\n                            control={form.control} \r\n                            key={item.id} \r\n                            name={`amounts.${index}.value`} \r\n                            render={({ field }) => (\r\n                                <FormItem className=\"mb-3\">\r\n                                    <div className=\"flex flex-col gap-1\">\r\n                                        <FormLabel htmlFor={`amount-${index}`} className=\"text-sm font-medium\">#{index + 1}</FormLabel>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <div className=\"relative flex-1\">\r\n                                                <FormControl>\r\n                                                    <Input \r\n                                                        type=\"number\" \r\n                                                        step=\"any\" \r\n                                                        className=\"focus:border-primary focus:ring-2 focus:ring-primary/20 transition-transform duration-150 pr-8\" \r\n                                                        {...field} \r\n                                                        id={`amount-${index}`}\r\n                                                        name={`amounts.${index}.value`}\r\n                                                    />\r\n                                                </FormControl>\r\n                                                <div className=\"absolute right-2 top-0 h-full flex items-center justify-center z-[1]\">\r\n                                                    {field.value && !isNaN(parseFloat(field.value)) && parseFloat(field.value) > 0 && (\r\n                                                        <div className=\"flex items-center justify-center h-5 w-5\">\r\n                                                            <CheckCircle className=\"h-4 w-4 text-success\" />\r\n                                                        </div>\r\n                                                    )}\r\n                                                    {form.formState.errors.amounts?.[index]?.value && (\r\n                                                        <div className=\"flex items-center justify-center h-5 w-5\">\r\n                                                            <AlertCircle className=\"h-4 w-4 text-destructive\" />\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                            {fields.length > 1 && (\r\n                                                <Button \r\n                                                    type=\"button\" \r\n                                                    variant=\"ghost\" \r\n                                                    size=\"icon\" \r\n                                                    onClick={() => remove(index)} \r\n                                                    className=\"text-gray-400 hover:text-gray-500 hover:bg-gray-100 transition-all duration-200 shrink-0\" \r\n                                                    aria-label=\"Remove amount\"\r\n                                                >\r\n                                                    <XCircle className=\"h-4 w-4 transition-transform duration-150 hover:scale-95\" />\r\n                                                </Button>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    <FormMessage className=\"text-xs mt-1 error-message\" />\r\n                                </FormItem>\r\n                            )} \r\n                        />\r\n                    ))}\r\n                    <Button \r\n                        type=\"button\" \r\n                        variant=\"outline\" \r\n                        size=\"sm\" \r\n                        onClick={() => { \r\n                            append({ value: \"\" }); \r\n                            setTimeout(() => { \r\n                                const ni = document.querySelectorAll('input[type=\"number\"]'); \r\n                                if (ni.length > 0) (ni[ni.length - 1] as HTMLInputElement).focus(); \r\n                            }, 10); \r\n                        }} \r\n                        className=\"mt-4\"\r\n                    >\r\n                        <PlusCircle className=\"mr-2 h-4 w-4\" /> {t('InvoiceForm.addAmountButton')}\r\n                    </Button>\r\n                    {form.formState.errors.amounts && !form.formState.errors.amounts.root && form.formState.errors.amounts.message && (\r\n                        <p className=\"text-sm font-medium text-destructive\">{form.formState.errors.amounts.message}</p>\r\n                    )}\r\n                    {form.formState.errors.amounts?.root?.message && (\r\n                        <p className=\"text-sm font-medium text-destructive\">{form.formState.errors.amounts.root.message}</p>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n                <Button \r\n                    type=\"submit\" \r\n                    variant=\"default\"\r\n                    className={`w-full bg-primary text-primary-foreground hover:bg-primary/90 hover:scale-[1.02] px-6 py-2 h-11 font-medium rounded-md shadow-sm transition-all duration-200 hover:shadow-lg hover:shadow-primary/20 ${showSuccessGlow ? 'animate-success-glow' : ''}`}\r\n                    disabled={form.formState.isSubmitting || isCalculating}\r\n                    aria-live=\"polite\"\r\n                >\r\n                    {isCalculating ? (\r\n                        <span className=\"flex items-center justify-center\">\r\n                            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                            {buttonText}\r\n                        </span>\r\n                    ) : (\r\n                        buttonText\r\n                    )}\r\n                </Button>\r\n            </form>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n// Need to wrap with TooltipProvider at a higher level if using tooltips inside \r\n"],"names":["Switch","className","props","SwitchPrimitive","data-slot","cn","Popover","PopoverPrimitive","PopoverTrigger","PopoverContent","align","sideOffset","isMounted","setIsMounted","React","isMountedRef","current","mountTimer","setTimeout","clearTimeout","document","querySelectorAll","forEach","element","parentNode","removeChild","Calendar","classNames","showOutsideDays","locale","DayPicker","months","month","caption","caption_label","nav","nav_button","buttonVariants","variant","nav_button_previous","nav_button_next","month_grid","weekdays","weekday","week","cell","day","day_range_end","day_selected","day_today","day_outside","day_disabled","day_range_middle","day_hidden","components","Chevron","orientation","ChevronLeft","ChevronRight","weekStartsOn","options","displayName","DATE_FORMAT_ISO","DATE_FORMAT_DE","DEFAULT_FORM_VALUES","startDateString","endDateString","includeEndDate","splitPeriod","amounts","value","supportedDateFormats","tryParseDate","parseDate","formSchema","z","object","string","optional","boolean","enum","array","min","message","t","refine","val","isNaN","parseFloat","startDate","data","path","endDate","InvoiceForm","onCalculateAction","initialDemoData","onDemoDataApplied","i18n","useTranslation","mounted","setMounted","useState","isCalculating","setIsCalculating","buttonText","setButtonText","showSuccessGlow","setShowSuccessGlow","initRef","useRef","currentLocale","language","startsWith","de","enUS","displayDateFormat","dateExamplePlaceholder","storageKey","isStartDatePopoverOpen","setIsStartDatePopoverOpen","isEndDatePopoverOpen","setIsEndDatePopoverOpen","currentFormSchema","form","useForm","resolver","zodResolver","defaultValues","mode","fields","append","remove","useFieldArray","control","name","debouncedSaveFunction","useMemo","debounce","amountsToSave","dataToSave","length","saveData","console","log","localStorage","setItem","JSON","stringify","error","formValues","useWatch","useEffect","getValues","cancel","onSubmit","useCallback","values","parsedAmounts","map","a","callbackFormData","filter","InputValidationError","defaultValue","ERROR_CODES","INVALID_DATES","some","INVALID_AMOUNT","invalidAmounts","inputData","result","calculateInvoiceSplit","success","totalDays","successResultForCallback","originalTotalAmount","adjustedTotalAmount","resultsPerAmount","aggregatedSplits","calculationSteps","splitPeriodUsed","undefined","currentValues","updatedValues","includes","setValue","resetToDefaultValues","removeItem","reset","initializeFormData","demoFormData","amount","String","trigger","then","isValid","handleSubmit","warn","formState","errors","urlParams","URLSearchParams","window","location","search","forceClean","get","cachedDataString","getItem","parsedCache","parse","getDateHelpText","onSelectStartDate","date","formatted","format","shouldValidate","onSelectEndDate","handleStartDateChange","e","target","clearErrors","parsedDate","setError","type","handleEndDateChange","FormProvider","div","FormField","render","field","FormItem","FormLabel","htmlFor","open","onOpenChange","FormControl","Input","onChange","onBlur","placeholder","autoFocus","id","CheckCircle","AlertCircle","asChild","Button","aria-label","CalendarIcon","selected","watch","onSelect","initialFocus","defaultMonth","Date","FormMessage","disabled","FormDescription","checked","onCheckedChange","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","position","avoidCollisions","collisionPadding","SelectItem","style","cursor","h3","aria-labelledby","item","index","step","size","onClick","XCircle","ni","focus","PlusCircle","root","p","isSubmitting","aria-live","span","Loader2"],"sourceRoot":""}